{"ast":null,"code":"const RGBShiftShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    amount: {\n      value: 5e-3\n    },\n    angle: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float amount;\", \"uniform float angle;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec2 offset = amount * vec2( cos(angle), sin(angle));\", \"\tvec4 cr = texture2D(tDiffuse, vUv + offset);\", \"\tvec4 cga = texture2D(tDiffuse, vUv);\", \"\tvec4 cb = texture2D(tDiffuse, vUv - offset);\", \"\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\", \"}\"].join(\"\\n\")\n};\nexport { RGBShiftShader };","map":{"version":3,"names":["RGBShiftShader","uniforms","tDiffuse","value","amount","angle","vertexShader","join","fragmentShader"],"sources":["D:\\valentines_website\\node_modules\\src\\shaders\\RGBShiftShader.ts"],"sourcesContent":["/**\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nexport const RGBShiftShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    amount: { value: 0.005 },\n    angle: { value: 0.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform sampler2D tDiffuse;',\n    'uniform float amount;',\n    'uniform float angle;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec2 offset = amount * vec2( cos(angle), sin(angle));',\n    '\tvec4 cr = texture2D(tDiffuse, vUv + offset);',\n    '\tvec4 cga = texture2D(tDiffuse, vUv);',\n    '\tvec4 cb = texture2D(tDiffuse, vUv - offset);',\n    '\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);',\n\n    '}',\n  ].join('\\n'),\n}\n"],"mappings":"AAUO,MAAMA,cAAA,GAAiB;EAC5BC,QAAA,EAAU;IACRC,QAAA,EAAU;MAAEC,KAAA,EAAO;IAAK;IACxBC,MAAA,EAAQ;MAAED,KAAA,EAAO;IAAM;IACvBE,KAAA,EAAO;MAAEF,KAAA,EAAO;IAAI;EACtB;EAEAG,YAAA,EAAc,CACZ,qBAEA,iBAEA,cACA,8EAEA,KACAC,IAAA,CAAK,IAAI;EAEXC,cAAA,EAAgB,CACd,+BACA,yBACA,wBAEA,qBAEA,iBAEA,0DACA,iDACA,yCACA,iDACA,mDAEA,KACAD,IAAA,CAAK,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}