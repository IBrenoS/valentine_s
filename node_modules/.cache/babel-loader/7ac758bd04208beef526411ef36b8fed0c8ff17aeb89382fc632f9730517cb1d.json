{"ast":null,"code":"const BasicShader = {\n  uniforms: {},\n  vertexShader: [\"void main() {\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"void main() {\", \"\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\", \"}\"].join(\"\\n\")\n};\nexport { BasicShader };","map":{"version":3,"names":["BasicShader","uniforms","vertexShader","join","fragmentShader"],"sources":["D:\\valentines_website\\node_modules\\src\\shaders\\BasicShader.ts"],"sourcesContent":["/**\n * Simple test shader\n */\n\nimport type { IShader } from './types'\n\nexport type BasicShaderUniforms = {}\n\nexport interface IBasicShader extends IShader<BasicShaderUniforms> {}\n\nexport const BasicShader: IBasicShader = {\n  uniforms: {},\n\n  vertexShader: [\n    'void main() {',\n\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: ['void main() {', '\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );', '}'].join('\\n'),\n}\n"],"mappings":"AAUO,MAAMA,WAAA,GAA4B;EACvCC,QAAA,EAAU,CAAC;EAEXC,YAAA,EAAc,CACZ,iBAEA,8EAEA,KACAC,IAAA,CAAK,IAAI;EAEXC,cAAA,EAAgB,CAAC,iBAAiB,+CAA+C,GAAG,EAAED,IAAA,CAAK,IAAI;AACjG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}