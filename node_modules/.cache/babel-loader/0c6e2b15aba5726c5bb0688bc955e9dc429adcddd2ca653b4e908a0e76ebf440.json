{"ast":null,"code":"const VignetteShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    offset: {\n      value: 1\n    },\n    darkness: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float offset;\", \"uniform float darkness;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\",\n  // Eskil's vignette\n  \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\", \"\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n  /*\n  \t\t// alternative version from glfx.js\n  \t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n  \n  \t\t\"\tvec4 color = texture2D( tDiffuse, vUv );\",\n  \t\t\"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\n  \t\t\"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n  \t\t\"\tgl_FragColor = color;\",\n  \t\t*/\n  \"}\"].join(\"\\n\")\n};\nexport { VignetteShader };","map":{"version":3,"names":["VignetteShader","uniforms","tDiffuse","value","offset","darkness","vertexShader","join","fragmentShader"],"sources":["D:\\valentines_website\\node_modules\\src\\shaders\\VignetteShader.ts"],"sourcesContent":["/**\n * Vignette shader\n * based on PaintEffect postprocess from ro.me\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n */\n\nexport const VignetteShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    offset: { value: 1.0 },\n    darkness: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float offset;',\n    'uniform float darkness;',\n\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    // Eskil's vignette\n\n    '\tvec4 texel = texture2D( tDiffuse, vUv );',\n    '\tvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );',\n    '\tgl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );',\n\n    /*\n\t\t// alternative version from glfx.js\n\t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n\n\t\t\"\tvec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\"\tfloat dist = distance( vUv, vec2( 0.5 ) );\",\n\t\t\"\tcolor.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t\t\"\tgl_FragColor = color;\",\n\t\t*/\n\n    '}',\n  ].join('\\n'),\n}\n"],"mappings":"AAMO,MAAMA,cAAA,GAAiB;EAC5BC,QAAA,EAAU;IACRC,QAAA,EAAU;MAAEC,KAAA,EAAO;IAAK;IACxBC,MAAA,EAAQ;MAAED,KAAA,EAAO;IAAI;IACrBE,QAAA,EAAU;MAAEF,KAAA,EAAO;IAAI;EACzB;EAEAG,YAAA,EAAc,CACZ,qBAEA,iBAEA,cACA,8EAEA,KACAC,IAAA,CAAK,IAAI;EAEXC,cAAA,EAAgB,CACd,yBACA,2BAEA,+BAEA,qBAEA;EAAA;EAIA,6CACA,sDACA;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAYA,KACAD,IAAA,CAAK,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}