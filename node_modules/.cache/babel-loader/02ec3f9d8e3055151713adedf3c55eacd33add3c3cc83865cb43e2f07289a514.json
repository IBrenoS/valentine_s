{"ast":null,"code":"const LuminosityShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"#include <common>\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tfloat l = linearToRelativeLuminance( texel.rgb );\", \"\tgl_FragColor = vec4( l, l, l, texel.w );\", \"}\"].join(\"\\n\")\n};\nexport { LuminosityShader };","map":{"version":3,"names":["LuminosityShader","uniforms","tDiffuse","value","vertexShader","join","fragmentShader"],"sources":["D:\\valentines_website\\node_modules\\src\\shaders\\LuminosityShader.ts"],"sourcesContent":["/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nexport const LuminosityShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    '#include <common>',\n\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 texel = texture2D( tDiffuse, vUv );',\n\n    '\tfloat l = linearToRelativeLuminance( texel.rgb );',\n\n    '\tgl_FragColor = vec4( l, l, l, texel.w );',\n\n    '}',\n  ].join('\\n'),\n}\n"],"mappings":"AAKO,MAAMA,gBAAA,GAAmB;EAC9BC,QAAA,EAAU;IACRC,QAAA,EAAU;MAAEC,KAAA,EAAO;IAAK;EAC1B;EAEAC,YAAA,EAAc,CACZ,qBAEA,iBAEA,cAEA,8EAEA,KACAC,IAAA,CAAK,IAAI;EAEXC,cAAA,EAAgB,CACd,qBAEA,+BAEA,qBAEA,iBAEA,6CAEA,sDAEA,6CAEA,KACAD,IAAA,CAAK,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}