{"ast":null,"code":"const lottie = (() => {\n  if (typeof navigator === \"undefined\" || typeof document === \"undefined\") return {};\n  const svgNS = \"http://www.w3.org/2000/svg\";\n  let locationHref = \"\";\n  let _useWebWorker = false;\n  const initialDefaultFrame = -999999;\n  const setWebWorker = flag => {\n    _useWebWorker = !!flag;\n  };\n  const getWebWorker = () => _useWebWorker;\n  const setLocationHref = value2 => {\n    locationHref = value2;\n  };\n  const getLocationHref = () => locationHref;\n  function createTag(type) {\n    return document.createElement(type);\n  }\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n  const audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio);\n      },\n      pause: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function (rateValue) {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true;\n          },\n          seek: function () {\n            this.isPlaying = false;\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {}\n        };\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function (value2) {\n        this._volume = value2;\n        this._updateVolume();\n      },\n      mute: function () {\n        this._isMuted = true;\n        this._updateVolume();\n      },\n      unmute: function () {\n        this._isMuted = false;\n        this._updateVolume();\n      },\n      getVolume: function () {\n        return this._volume;\n      },\n      _updateVolume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n  const createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value2;\n      switch (type) {\n        case \"int16\":\n        case \"uint8c\":\n          value2 = 1;\n          break;\n        default:\n          value2 = 1.1;\n          break;\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value2);\n      }\n      return arr;\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === \"float32\") {\n        return new Float32Array(len);\n      }\n      if (type === \"int16\") {\n        return new Int16Array(len);\n      }\n      if (type === \"uint8c\") {\n        return new Uint8ClampedArray(len);\n      }\n      return createRegularArray(type, len);\n    }\n    if (typeof Uint8ClampedArray === \"function\" && typeof Float32Array === \"function\") {\n      return createTypedArrayFactory;\n    }\n    return createRegularArray;\n  }();\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n  let subframeEnabled = true;\n  let expressionsPlugin = null;\n  let idPrefix$1 = \"\";\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  const bmPow = Math.pow;\n  const bmSqrt = Math.sqrt;\n  const bmFloor = Math.floor;\n  const bmMin = Math.min;\n  const BMMath = {};\n  (function () {\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n    var i;\n    var len = propertyNames.length;\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n  BMMath.random = Math.random;\n  BMMath.abs = function (val2) {\n    var tOfVal = typeof val2;\n    if (tOfVal === \"object\" && val2.length) {\n      var absArr = createSizedArray(val2.length);\n      var i;\n      var len = val2.length;\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val2[i]);\n      }\n      return absArr;\n    }\n    return Math.abs(val2);\n  };\n  let defaultCurveSegments = 150;\n  const degToRads = Math.PI / 180;\n  const roundCorner = 0.5519;\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = \"renderFrameError\";\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n  function BMConfigErrorEvent(nativeError) {\n    this.type = \"configError\";\n    this.nativeError = nativeError;\n  }\n  const createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + \"__lottie_element_\" + _count;\n    };\n  }();\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return [r, g, b];\n  }\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n    return [h, s, v];\n  }\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  (function () {\n    var colorMap = [];\n    var i;\n    var hex;\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? \"0\" + hex : hex;\n    }\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n      if (g < 0) {\n        g = 0;\n      }\n      if (b < 0) {\n        b = 0;\n      }\n      return \"#\" + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  })();\n  const setSubframeEnabled = flag => {\n    subframeEnabled = !!flag;\n  };\n  const getSubframeEnabled = () => subframeEnabled;\n  const setExpressionsPlugin = value2 => {\n    expressionsPlugin = value2;\n  };\n  const getExpressionsPlugin = () => expressionsPlugin;\n  const setDefaultCurveSegments = value2 => {\n    defaultCurveSegments = value2;\n  };\n  const getDefaultCurveSegments = () => defaultCurveSegments;\n  const setIdPrefix = value2 => {\n    idPrefix$1 = value2;\n  };\n  function createNS(type) {\n    return document.createElementNS(svgNS, type);\n  }\n  const dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function (data2) {\n        workerProxy.onmessage({\n          data: data2\n        });\n      }\n    };\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob([\"var _workerSelf = self; self.onmessage = \", fn.toString()], {\n          type: \"text/javascript\"\n        });\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n      workerFn = fn;\n      return workerProxy;\n    }\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n                if (\"ks\" in layerData && !layerData.completed) {\n                  layerData.completed = true;\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets);\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n                i += 1;\n              }\n              return null;\n            }\n            function findCompLayers(id, comps) {\n              var comp2 = findComp(id, comps);\n              if (comp2) {\n                if (!comp2.layers.__used) {\n                  comp2.layers.__used = true;\n                  return comp2.layers;\n                }\n                return JSON.parse(JSON.stringify(comp2.layers));\n              }\n              return null;\n            }\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === \"sh\") {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === \"gr\") {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split(\".\") : [100, 100, 100];\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n              return null;\n            }\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: \"no\"\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: \"tr\"\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n                if (typeof pathData.a === \"number\") {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n                if (typeof pathData.p === \"number\") {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n                if (typeof pathData.r === \"number\") {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === \"gr\") {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === \"fl\" || shapes[i].ty === \"st\") {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === \"sh\") {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === \"gr\") {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n            function completeText(data2) {\n              if (data2.t.a.length === 0 && !(\"m\" in data2.t.p)) ;\n            }\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                var contentTypeHeader = xhr.getResponseHeader(\"content-type\");\n                if (contentTypeHeader && xhr.responseType === \"json\" && contentTypeHeader.indexOf(\"json\") !== -1) {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"object\") {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"string\") {\n                  return JSON.parse(xhr.response);\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n                return null;\n              }\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest();\n                try {\n                  xhr.responseType = \"json\";\n                } catch (err) {}\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n                try {\n                  xhr.open(\"GET\", path, true);\n                } catch (error) {\n                  xhr.open(\"GET\", fullPath + \"/\" + path, true);\n                }\n                xhr.send();\n              }\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n          if (e.data.type === \"loadAnimation\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data2) {\n              _workerSelf.dataManager.completeData(data2);\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data2,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          } else if (e.data.type === \"complete\") {\n            var animation = e.data.animation;\n            _workerSelf.dataManager.completeData(animation);\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: \"success\"\n            });\n          } else if (e.data.type === \"loadData\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data2) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data2,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          }\n        });\n        workerInstance.onmessage = function (event) {\n          var data2 = event.data;\n          var id = data2.id;\n          var process = processes[id];\n          processes[id] = null;\n          if (data2.status === \"success\") {\n            process.onComplete(data2.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = \"processId_\" + _counterId;\n      processes[id] = {\n        onComplete,\n        onError\n      };\n      return id;\n    }\n    function loadAnimation2(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadAnimation\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadData\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"complete\",\n        animation: anim,\n        id: processId\n      });\n    }\n    return {\n      loadAnimation: loadAnimation2,\n      loadData,\n      completeAnimation\n    };\n  }();\n  const ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = \"rgba(0,0,0,0)\";\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n    function imageLoaded() {\n      this.loadedAssets += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = \"\";\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n        if (imagePath.indexOf(\"images/\") !== -1) {\n          imagePath = imagePath.split(\"/\")[1];\n        }\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : \"\";\n        path += assetData.p;\n      }\n      return path;\n    }\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n          clearInterval(intervalId);\n        }\n        _count += 1;\n      }.bind(this), 50);\n    }\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS(\"image\");\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener(\"load\", this._imageLoaded, false);\n      }\n      img.addEventListener(\"error\", function () {\n        ob2.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", path);\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n      var ob2 = {\n        img,\n        assetData\n      };\n      return ob2;\n    }\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag(\"img\");\n      img.crossOrigin = \"anonymous\";\n      img.addEventListener(\"load\", this._imageLoaded, false);\n      img.addEventListener(\"error\", function () {\n        ob2.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob2 = {\n        img,\n        assetData\n      };\n      return ob2;\n    }\n    function createFootageData(data2) {\n      var ob2 = {\n        assetData: data2\n      };\n      var path = getAssetsPath(data2, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob2.img = footageData;\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob2.img = {};\n        this._footageLoaded();\n      }.bind(this));\n      return ob2;\n    }\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === \"seq\") {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n    function setPath(path) {\n      this.path = path || \"\";\n    }\n    function setAssetsPath(path) {\n      this.assetsPath = path || \"\";\n    }\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n        i += 1;\n      }\n      return null;\n    }\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n    function setCacheType(type, elementHelper) {\n      if (type === \"svg\") {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = \"\";\n      this.path = \"\";\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n    ImagePreloaderFactory.prototype = {\n      loadAssets,\n      setAssetsPath,\n      setPath,\n      loadedImages,\n      loadedFootages,\n      destroy,\n      getAsset,\n      createImgData,\n      createImageData,\n      imageLoaded,\n      footageLoaded,\n      setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n      this._cbs[eventName].push(callback);\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n            i -= 1;\n            len -= 1;\n          }\n          i += 1;\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n  const markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split(\"\\r\\n\");\n      var keys = {};\n      var line;\n      var keysCount = 0;\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(\":\");\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error();\n      }\n      return keys;\n    }\n    return function (_markers) {\n      var markers = [];\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n        markers.push(markerData);\n      }\n      return markers;\n    };\n  }();\n  const ProjectInterface = function () {\n    function registerComposition(comp2) {\n      this.compositions.push(comp2);\n    }\n    return function () {\n      function _thisProjectFunction(name2) {\n        var i = 0;\n        var len = this.compositions.length;\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name2) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n            return this.compositions[i].compInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n  const renderers = {};\n  const registerRenderer = (key2, value2) => {\n    renderers[key2] = value2;\n  };\n  function getRenderer(key2) {\n    return renderers[key2];\n  }\n  const AnimationItem = function () {\n    this._cbs = [];\n    this.name = \"\";\n    this.path = \"\";\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = \"\";\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent(\"drawnFrame\", 0, 0, 0);\n  };\n  extendPrototype([BaseEvent], AnimationItem);\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n    var animType = \"svg\";\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n    const RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n    if (params.loop === \"\" || params.loop === null || params.loop === void 0 || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n    this.autoplay = \"autoplay\" in params ? params.autoplay : true;\n    this.name = params.name ? params.name : \"\";\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, \"autoloadSegments\") ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf(\"\\\\\") !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"\\\\\") + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"/\") + 1);\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf(\"/\") + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(\".json\"));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger(\"data_failed\");\n  };\n  AnimationItem.prototype.setupAnimation = function (data2) {\n    dataManager.completeAnimation(data2, this.configAnimation);\n  };\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== \"object\") {\n        animationData = JSON.parse(animationData);\n      }\n    }\n    var params = {\n      wrapper,\n      animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem(\"data-animation-path\") ? wrapperAttributes.getNamedItem(\"data-animation-path\").value : wrapperAttributes.getNamedItem(\"data-bm-path\") ? wrapperAttributes.getNamedItem(\"data-bm-path\").value : wrapperAttributes.getNamedItem(\"bm-path\") ? wrapperAttributes.getNamedItem(\"bm-path\").value : \"\";\n    params.animType = wrapperAttributes.getNamedItem(\"data-anim-type\") ? wrapperAttributes.getNamedItem(\"data-anim-type\").value : wrapperAttributes.getNamedItem(\"data-bm-type\") ? wrapperAttributes.getNamedItem(\"data-bm-type\").value : wrapperAttributes.getNamedItem(\"bm-type\") ? wrapperAttributes.getNamedItem(\"bm-type\").value : wrapperAttributes.getNamedItem(\"data-bm-renderer\") ? wrapperAttributes.getNamedItem(\"data-bm-renderer\").value : wrapperAttributes.getNamedItem(\"bm-renderer\") ? wrapperAttributes.getNamedItem(\"bm-renderer\").value : \"canvas\";\n    var loop = wrapperAttributes.getNamedItem(\"data-anim-loop\") ? wrapperAttributes.getNamedItem(\"data-anim-loop\").value : wrapperAttributes.getNamedItem(\"data-bm-loop\") ? wrapperAttributes.getNamedItem(\"data-bm-loop\").value : wrapperAttributes.getNamedItem(\"bm-loop\") ? wrapperAttributes.getNamedItem(\"bm-loop\").value : \"\";\n    if (loop === \"false\") {\n      params.loop = false;\n    } else if (loop === \"true\") {\n      params.loop = true;\n    } else if (loop !== \"\") {\n      params.loop = parseInt(loop, 10);\n    }\n    var autoplay = wrapperAttributes.getNamedItem(\"data-anim-autoplay\") ? wrapperAttributes.getNamedItem(\"data-anim-autoplay\").value : wrapperAttributes.getNamedItem(\"data-bm-autoplay\") ? wrapperAttributes.getNamedItem(\"data-bm-autoplay\").value : wrapperAttributes.getNamedItem(\"bm-autoplay\") ? wrapperAttributes.getNamedItem(\"bm-autoplay\").value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem(\"data-name\") ? wrapperAttributes.getNamedItem(\"data-name\").value : wrapperAttributes.getNamedItem(\"data-bm-name\") ? wrapperAttributes.getNamedItem(\"data-bm-name\").value : wrapperAttributes.getNamedItem(\"bm-name\") ? wrapperAttributes.getNamedItem(\"bm-name\").value : \"\";\n    var prerender = wrapperAttributes.getNamedItem(\"data-anim-prerender\") ? wrapperAttributes.getNamedItem(\"data-anim-prerender\").value : wrapperAttributes.getNamedItem(\"data-bm-prerender\") ? wrapperAttributes.getNamedItem(\"data-bm-prerender\").value : wrapperAttributes.getNamedItem(\"bm-prerender\") ? wrapperAttributes.getNamedItem(\"bm-prerender\").value : \"\";\n    if (prerender === \"false\") {\n      params.prerender = false;\n    }\n    this.setParams(params);\n  };\n  AnimationItem.prototype.includeLayers = function (data2) {\n    if (data2.op > this.animationData.op) {\n      this.animationData.op = data2.op;\n      this.totalFrames = Math.floor(data2.op - this.animationData.ip);\n    }\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data2.layers;\n    var j;\n    var jLen = newLayers.length;\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n        i += 1;\n      }\n    }\n    if (data2.chars || data2.fonts) {\n      this.renderer.globalData.fontManager.addChars(data2.chars);\n      this.renderer.globalData.fontManager.addFonts(data2.fonts, this.renderer.globalData.defs);\n    }\n    if (data2.assets) {\n      len = data2.assets.length;\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data2.assets[i]);\n      }\n    }\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n  AnimationItem.prototype.onSegmentComplete = function (data2) {\n    this.animationData = data2;\n    var expressionsPlugin2 = getExpressionsPlugin();\n    if (expressionsPlugin2) {\n      expressionsPlugin2.initExpressions(this);\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger(\"data_ready\");\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + \"_\" + this.segmentPos + \".json\";\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger(\"data_failed\");\n    }.bind(this));\n  };\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger(\"loaded_images\");\n    this.checkLoaded();\n  };\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n    try {\n      this.animationData = animData;\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n      this.renderer.configAnimation(animData);\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1e3;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger(\"config_ready\");\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== \"canvas\") && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin2 = getExpressionsPlugin();\n      if (expressionsPlugin2) {\n        expressionsPlugin2.initExpressions(this);\n      }\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger(\"DOMLoaded\");\n      }.bind(this), 0);\n      this.gotoFrame();\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n    this.trigger(\"enterFrame\");\n    this.renderFrame();\n    this.trigger(\"drawnFrame\");\n  };\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n  AnimationItem.prototype.play = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger(\"_pause\");\n      this.audioController.resume();\n      if (this._idle) {\n        this._idle = false;\n        this.trigger(\"_active\");\n      }\n    }\n  };\n  AnimationItem.prototype.pause = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger(\"_play\");\n      this._idle = true;\n      this.trigger(\"_idle\");\n      this.audioController.pause();\n    }\n  };\n  AnimationItem.prototype.togglePause = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n  AnimationItem.prototype.stop = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n    return null;\n  };\n  AnimationItem.prototype.goToAndStop = function (value2, isFrame, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    var numValue = Number(value2);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value2);\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value2);\n    } else {\n      this.setCurrentRawFrameValue(value2 * this.frameModifier);\n    }\n    this.pause();\n  };\n  AnimationItem.prototype.goToAndPlay = function (value2, isFrame, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    var numValue = Number(value2);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value2);\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name2);\n    }\n    this.play();\n  };\n  AnimationItem.prototype.advanceTime = function (value2) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n    var nextValue = this.currentRawFrame + value2 * this.frameModifier;\n    var _isComplete = false;\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger(\"loopComplete\");\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger(\"loopComplete\");\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger(\"complete\");\n    }\n  };\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(1e-3 + offset);\n    }\n    this.trigger(\"segmentStart\");\n  };\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n    if (typeof arr[0] === \"object\") {\n      var i;\n      var len = arr.length;\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n    return false;\n  };\n  AnimationItem.prototype.destroy = function (name2) {\n    if (name2 && this.name !== name2 || !this.renderer) {\n      return;\n    }\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger(\"destroy\");\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value2) {\n    this.currentRawFrame = value2;\n    this.gotoFrame();\n  };\n  AnimationItem.prototype.setSpeed = function (val2) {\n    this.playSpeed = val2;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setDirection = function (val2) {\n    this.playDirection = val2 < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setVolume = function (val2, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.setVolume(val2);\n  };\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n  AnimationItem.prototype.mute = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.mute();\n  };\n  AnimationItem.prototype.unmute = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.unmute();\n  };\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = \"\";\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n      if (imagePath.indexOf(\"images/\") !== -1) {\n        imagePath = imagePath.split(\"/\")[1];\n      }\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : \"\";\n      path += assetData.p;\n    }\n    return path;\n  };\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n      i += 1;\n    }\n    return null;\n  };\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index2) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index2);\n    } catch (error) {}\n  };\n  AnimationItem.prototype.trigger = function (name2) {\n    if (this._cbs && this._cbs[name2]) {\n      switch (name2) {\n        case \"enterFrame\":\n          this.triggerEvent(name2, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n        case \"drawnFrame\":\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name2, this.drawnFrameEvent);\n          break;\n        case \"loopComplete\":\n          this.triggerEvent(name2, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));\n          break;\n        case \"complete\":\n          this.triggerEvent(name2, new BMCompleteEvent(name2, this.frameMult));\n          break;\n        case \"segmentStart\":\n          this.triggerEvent(name2, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));\n          break;\n        case \"destroy\":\n          this.triggerEvent(name2, new BMDestroyEvent(name2, this));\n          break;\n        default:\n          this.triggerEvent(name2);\n      }\n    }\n    if (name2 === \"enterFrame\" && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n    if (name2 === \"loopComplete\" && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));\n    }\n    if (name2 === \"complete\" && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name2, this.frameMult));\n    }\n    if (name2 === \"segmentStart\" && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));\n    }\n    if (name2 === \"destroy\" && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name2, this));\n    }\n  };\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  const animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n        i += 1;\n      }\n    }\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n      var i = 0;\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n        i += 1;\n      }\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n      return animations;\n    }\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener(\"destroy\", removeElement);\n      animItem.addEventListener(\"_active\", addPlayingCount);\n      animItem.addEventListener(\"_idle\", subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n    function loadAnimation2(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n    function setSpeed(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val2, animation);\n      }\n    }\n    function setDirection(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val2, animation);\n      }\n    }\n    function play(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n      initTime = nowTime;\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n    function pause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n    function goToAndStop(value2, isFrame, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value2, isFrame, animation);\n      }\n    }\n    function stop(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n    function togglePause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n    function destroy(animation) {\n      var i;\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n    function searchAnimations2(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName(\"lottie\")), [].slice.call(document.getElementsByClassName(\"bodymovin\")));\n      var i;\n      var lenAnims = animElements.length;\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute(\"data-bm-type\", renderer);\n        }\n        registerAnimation(animElements[i], animationData);\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = \"svg\";\n        }\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.innerText = \"\";\n        var div2 = createTag(\"div\");\n        div2.style.width = \"100%\";\n        div2.style.height = \"100%\";\n        div2.setAttribute(\"data-bm-type\", renderer);\n        body.appendChild(div2);\n        registerAnimation(div2, animationData);\n      }\n    }\n    function resize() {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n    function freeze() {\n      _isFrozen = true;\n    }\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n    function setVolume(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val2, animation);\n      }\n    }\n    function mute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n    function unmute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation2;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations2;\n    moduleOb.resize = resize;\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n  const BezierFactory = function () {\n    var ob2 = {};\n    ob2.getBezierEasing = getBezierEasing;\n    var beziers = {};\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || (\"bez_\" + a + \"_\" + b + \"_\" + c + \"_\" + d).replace(/\\./g, \"p\");\n      if (beziers[str]) {\n        return beziers[str];\n      }\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    }\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 1e-3;\n    var SUBDIVISION_PRECISION = 1e-7;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1 / (kSplineTableSize - 1);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n    function A(aA1, aA2) {\n      return 1 - 3 * aA2 + 3 * aA1;\n    }\n    function B(aA1, aA2) {\n      return 3 * aA2 - 6 * aA1;\n    }\n    function C(aA1) {\n      return 3 * aA1;\n    }\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    function getSlope(aT, aA1, aA2) {\n      return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n      return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    }\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x;\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2];\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues;\n        var intervalStart = 0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        if (initialSlope === 0) {\n          return guessForT;\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob2;\n  }();\n  const pooling = function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n    return {\n      double\n    };\n  }();\n  const poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob2 = {\n        newElement,\n        release\n      };\n      function newElement() {\n        var element;\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n        return element;\n      }\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool);\n          _maxLength *= 2;\n        }\n        if (_release) {\n          _release(element);\n        }\n        pool[_length] = element;\n        _length += 1;\n      }\n      return ob2;\n    };\n  }();\n  const bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray(\"float32\", getDefaultCurveSegments()),\n        lengths: createTypedArray(\"float32\", getDefaultCurveSegments())\n      };\n    }\n    return poolFactory(8, create);\n  }();\n  const segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n      element.lengths.length = 0;\n    }\n    return poolFactory(8, create, release);\n  }();\n  function bezFunction() {\n    var math = Math;\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -1e-3 && det1 < 1e-3;\n    }\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n      return diffDist > -1e-4 && diffDist < 1e-4;\n    }\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n            lastPoint[i] = point[i];\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n    function BezierData(length2) {\n      this.segmentLength = 0;\n      this.points = new Array(length2);\n    }\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + \"_\" + pt1[1] + \"_\" + pt2[0] + \"_\" + pt2[1] + \"_\" + pt3[0] + \"_\" + pt3[1] + \"_\" + pt4[0] + \"_\" + pt4[1]).replace(/\\./g, \"p\");\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n        return storedData[bezierName];\n      };\n    }();\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n          flag = false;\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;\n      return [ptX, ptY];\n    }\n    var bezierSegmentPoints = createTypedArray(\"float32\", 8);\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3;\n      var t0t0u0_3 = t0 * t0 * u0 * 3;\n      var t0t0t0 = t0 * t0 * t0;\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;\n      var t0t0t1 = t0 * t0 * t1;\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;\n      var t0t1t1 = t0 * t1 * t1;\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;\n      var t1t1t1 = t1 * t1 * t1;\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1e3) / 1e3;\n      }\n      return bezierSegmentPoints;\n    }\n    return {\n      getSegmentsLength,\n      getNewSegment,\n      getPointInSegment,\n      buildBezierData,\n      pointOnLine2D,\n      pointOnLine3D\n    };\n  }\n  const bez = bezFunction();\n  const PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n      if (this.propType === \"multidimensional\") {\n        newValue = createTypedArray(\"float32\", this.pv.length);\n      }\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n          iterationIndex = 0;\n          break;\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n        var bezierData = keyframeMetadata.bezierData;\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          }\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n              break;\n            }\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time2 = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time2));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === void 0 ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === void 0 ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === void 0 ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === void 0 ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n            if (this.propType === \"multidimensional\") {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    }\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n      if (cosom < 0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n      if (1 - cosom > 1e-6) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1 - t;\n        scale1 = t;\n      }\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function setVValue(val2) {\n      var multipliedValue;\n      if (this.propType === \"unidimensional\") {\n        multipliedValue = val2 * this.mult;\n        if (mathAbs(this.v - multipliedValue) > 1e-5) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n        while (i < len) {\n          multipliedValue = val2[i] * this.mult;\n          if (mathAbs(this.v[i] - multipliedValue) > 1e-5) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n          i += 1;\n        }\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    function ValueProperty(elem2, data2, mult, container) {\n      this.propType = \"unidimensional\";\n      this.mult = mult || 1;\n      this.data = data2;\n      this.v = mult ? data2.k * mult : data2.k;\n      this.pv = data2.k;\n      this._mdf = false;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function MultiDimensionalProperty(elem2, data2, mult, container) {\n      this.propType = \"multidimensional\";\n      this.mult = mult || 1;\n      this.data = data2;\n      this._mdf = false;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data2.k.length;\n      this.v = createTypedArray(\"float32\", len);\n      this.pv = createTypedArray(\"float32\", len);\n      this.vel = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data2.k[i] * this.mult;\n        this.pv[i] = data2.k[i];\n      }\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function KeyframedValueProperty(elem2, data2, mult, container) {\n      this.propType = \"unidimensional\";\n      this.keyframes = data2.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem2.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data2;\n      this.mult = mult || 1;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n    function KeyframedMultidimensionalProperty(elem2, data2, mult, container) {\n      this.propType = \"multidimensional\";\n      var i;\n      var len = data2.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n      for (i = 0; i < len - 1; i += 1) {\n        if (data2.k[i].to && data2.k[i].s && data2.k[i + 1] && data2.k[i + 1].s) {\n          s = data2.k[i].s;\n          e = data2.k[i + 1].s;\n          to = data2.k[i].to;\n          ti = data2.k[i].ti;\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data2.k[i].to = null;\n            data2.k[i].ti = null;\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data2.k[i].to = null;\n              data2.k[i].ti = null;\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data2;\n      this.keyframes = data2.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem2.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data2.k[0].s.length;\n      this.v = createTypedArray(\"float32\", arrLen);\n      this.pv = createTypedArray(\"float32\", arrLen);\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray(\"float32\", arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n    function getProp(elem2, data2, type, mult, container) {\n      var p;\n      if (!data2.k.length) {\n        p = new ValueProperty(elem2, data2, mult, container);\n      } else if (typeof data2.k[0] === \"number\") {\n        p = new MultiDimensionalProperty(elem2, data2, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem2, data2, mult, container);\n            break;\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem2, data2, mult, container);\n            break;\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n      return p;\n    }\n    var ob2 = {\n      getProp\n    };\n    return ob2;\n  }();\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n  const pointPool = function () {\n    function create() {\n      return createTypedArray(\"float32\", 2);\n    }\n    return poolFactory(8, create);\n  }();\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n    this._length = len;\n  };\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n    switch (type) {\n      case \"v\":\n        arr = this.v;\n        break;\n      case \"i\":\n        arr = this.i;\n        break;\n      case \"o\":\n        arr = this.o;\n        break;\n      default:\n        arr = [];\n        break;\n    }\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, \"v\", pos, replace);\n    this.setXYAt(oX, oY, \"o\", pos, replace);\n    this.setXYAt(iX, iY, \"i\", pos, replace);\n  };\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n    return newPath;\n  };\n  const shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === void 0 ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n      return cloned;\n    }\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n    this._length = 0;\n  };\n  const shapeCollectionPool = function () {\n    var ob2 = {\n      newShapeCollection,\n      release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n    function newShapeCollection() {\n      var shapeCollection;\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n      return shapeCollection;\n    }\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n      shapeCollection._length = 0;\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength *= 2;\n      }\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n    return ob2;\n  }();\n  const ShapePropertyFactory = function () {\n    var initFrame = -999999;\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n        keyPropS = keyData.s[0];\n      }\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching);\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n      var i;\n      var len = shape1._length;\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n      var i;\n      var len = this.effectsSequence.length;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function ShapeProperty(elem2, data2, type) {\n      this.propType = \"shape\";\n      this.comp = elem2.comp;\n      this.container = elem2;\n      this.elem = elem2;\n      this.data = data2;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data2.pt.k : data2.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n    function KeyframedShapeProperty(elem2, data2, type) {\n      this.propType = \"shape\";\n      this.comp = elem2.comp;\n      this.elem = elem2;\n      this.container = elem2;\n      this.offsetTime = elem2.data.st;\n      this.keyframes = type === 3 ? data2.pt.k : data2.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n      function EllShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data2.d;\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem2);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n          var _cw = this.d !== 3;\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.data = data2;\n        this.frameId = -1;\n        this.d = data2.d;\n        this.initDynamicPropertyContainer(elem2);\n        if (data2.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem2, data2.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem2, data2.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n        this.pt = PropertyFactory.getProp(elem2, data2.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem2, data2.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem2, data2.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem2, data2.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.frameId = -1;\n        this.d = data2.d;\n        this.initDynamicPropertyContainer(elem2);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem2, data2.r, 0, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n    function getShapeProp(elem2, data2, type) {\n      var prop;\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data2.pt : data2.ks;\n        var keys = dataProp.k;\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem2, data2, type);\n        } else {\n          prop = new ShapeProperty(elem2, data2, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem2, data2);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem2, data2);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem2, data2);\n      }\n      if (prop.k) {\n        elem2.addDynamicProperty(prop);\n      }\n      return prop;\n    }\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n    var ob2 = {};\n    ob2.getShapeProp = getShapeProp;\n    ob2.getConstructorFunction = getConstructorFunction;\n    ob2.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob2;\n  }();\n  /*!\n  Transformation Matrix v2.0\n  (c) Epistemex 2014-2015\n  www.epistemex.com\n  By Ken Fyrstenberg\n  Contributions by leeoniya.\n  License: MIT, header required.\n  */\n  const Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function scale2(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n      return this;\n    }\n    function transform2(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2;\n        this._identityCalculated = false;\n        return this;\n      }\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n      return this._identity;\n    }\n    function equals(matr) {\n      var i = 0;\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n        i += 1;\n      }\n      return true;\n    }\n    function clone(matr) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n      return matr;\n    }\n    function cloneFromProps(props) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n      return retPts;\n    }\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray(\"float32\", 6);\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n      return arr;\n    }\n    function applyToPointArray(x, y, z) {\n      var arr;\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n      return arr;\n    }\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + \",\" + y;\n      }\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + \",\" + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n    function toCSS() {\n      var i = 0;\n      var props = this.props;\n      var cssValue = \"matrix3d(\";\n      var v = 1e4;\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? \")\" : \",\";\n        i += 1;\n      }\n      return cssValue;\n    }\n    function roundMatrixProperty(val2) {\n      var v = 1e4;\n      if (val2 < 1e-6 && val2 > 0 || val2 > -1e-6 && val2 < 0) {\n        return _rnd(val2 * v) / v;\n      }\n      return val2;\n    }\n    function to2dCSS() {\n      var props = this.props;\n      var _a = roundMatrixProperty(props[0]);\n      var _b = roundMatrixProperty(props[1]);\n      var _c = roundMatrixProperty(props[4]);\n      var _d = roundMatrixProperty(props[5]);\n      var _e = roundMatrixProperty(props[12]);\n      var _f = roundMatrixProperty(props[13]);\n      return \"matrix(\" + _a + \",\" + _b + \",\" + _c + \",\" + _d + \",\" + _e + \",\" + _f + \")\";\n    }\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale2;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform2;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray(\"float32\", 16);\n      this.reset();\n    };\n  }();\n  const lottie = {};\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n  function searchAnimations() {\n    {\n      animationManager.searchAnimations();\n    }\n  }\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n  function loadAnimation(params) {\n    return animationManager.loadAnimation(params);\n  }\n  function setQuality(value2) {\n    if (typeof value2 === \"string\") {\n      switch (value2) {\n        case \"high\":\n          setDefaultCurveSegments(200);\n          break;\n        default:\n        case \"medium\":\n          setDefaultCurveSegments(50);\n          break;\n        case \"low\":\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value2) && value2 > 1) {\n      setDefaultCurveSegments(value2);\n    }\n  }\n  function inBrowser() {\n    return typeof navigator !== \"undefined\";\n  }\n  function installPlugin(type, plugin) {\n    if (type === \"expressions\") {\n      setExpressionsPlugin(plugin);\n    }\n  }\n  function getFactory(name2) {\n    switch (name2) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n      case \"matrix\":\n        return Matrix;\n      default:\n        return null;\n    }\n  }\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize;\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = \"[[BM_VERSION]]\";\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n  function getQueryVariable(variable) {\n    var vars = queryString.split(\"&\");\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split(\"=\");\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n    return null;\n  }\n  var queryString = \"\";\n  {\n    var scripts = document.getElementsByTagName(\"script\");\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: \"\"\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, \"\") : \"\";\n    getQueryVariable(\"renderer\");\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  try {\n    if (!(typeof exports === \"object\" && typeof module !== \"undefined\") && !(typeof define === \"function\" && define.amd)) {\n      window.bodymovin = lottie;\n    }\n  } catch (err) {}\n  const ShapeModifiers = function () {\n    var ob2 = {};\n    var modifiers = {};\n    ob2.registerModifier = registerModifier;\n    ob2.getModifier = getModifier;\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n    function getModifier(nm, elem2, data2) {\n      return new modifiers[nm](elem2, data2);\n    }\n    return ob2;\n  }();\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {};\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n  ShapeModifier.prototype.addShape = function (data2) {\n    if (!this.closed) {\n      data2.sh.container.addDynamicProperty(data2.sh);\n      var shapeData = {\n        shape: data2.sh,\n        data: data2,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n      if (this._isAnimated) {\n        data2.setAsAnimated();\n      }\n    }\n  };\n  ShapeModifier.prototype.init = function (elem2, data2) {\n    this.shapes = [];\n    this.elem = elem2;\n    this.initDynamicPropertyContainer(elem2);\n    this.initModifierProperties(elem2, data2);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier);\n  TrimModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.s = PropertyFactory.getProp(elem2, data2.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data2.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n    if (e <= 1) {\n      segments.push({\n        s,\n        e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n    return shapeSegments;\n  };\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n    pathsData.length = 0;\n    return pathsData;\n  };\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n      if (o < 0) {\n        o += 1;\n      }\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n      s = Math.round(s * 1e4) * 1e-4;\n      e = Math.round(e * 1e4) * 1e-4;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes();\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n          jLen = edges.length;\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], \"o\", pos);\n    shapePath.setXYAt(pt3[0], pt3[1], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], \"v\", pos);\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], \"o\", pos);\n    shapePath.setXYAt(points[2], points[6], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], \"v\", pos);\n    }\n    shapePath.setXYAt(points[3], points[7], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n    shapes.push(shapePath);\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], \"i\", initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], \"o\", shapePath._length - 1);\n      }\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n    return shapes;\n  };\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem2, data2.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n    return clonedPath;\n  };\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  const TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n      this.iterateDynamicProperties();\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n    function autoOrient() {}\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n    function TransformProperty(elem2, data2, container) {\n      this.elem = elem2;\n      this.frameId = -1;\n      this.propType = \"transform\";\n      this.data = data2;\n      this.v = new Matrix();\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem2);\n      if (data2.p && data2.p.s) {\n        this.px = PropertyFactory.getProp(elem2, data2.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem2, data2.p.y, 0, 0, this);\n        if (data2.p.z) {\n          this.pz = PropertyFactory.getProp(elem2, data2.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem2, data2.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n      if (data2.rx) {\n        this.rx = PropertyFactory.getProp(elem2, data2.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem2, data2.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem2, data2.rz, 0, degToRads, this);\n        if (data2.or.k[0].ti) {\n          var i;\n          var len = data2.or.k.length;\n          for (i = 0; i < len; i += 1) {\n            data2.or.k[i].to = null;\n            data2.or.k[i].ti = null;\n          }\n        }\n        this.or = PropertyFactory.getProp(elem2, data2.or, 1, degToRads, this);\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem2, data2.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n      if (data2.sk) {\n        this.sk = PropertyFactory.getProp(elem2, data2.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem2, data2.sa, 0, degToRads, this);\n      }\n      this.a = PropertyFactory.getProp(elem2, data2.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem2, data2.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this);\n      if (data2.o) {\n        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, elem2);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n      this._isDirty = true;\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n    TransformProperty.prototype = {\n      applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix,\n      autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n    function getTransformProperty(elem2, data2, container) {\n      return new TransformProperty(elem2, data2, container);\n    }\n    return {\n      getTransformProperty\n    };\n  }();\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier);\n  RepeaterModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem2, data2.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem2, data2.tr, this);\n    this.so = PropertyFactory.getProp(elem2, data2.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem2, data2.tr.eo, 0, 0.01, this);\n    this.data = data2;\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform2, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform2.s.v[0] + (1 - transform2.s.v[0]) * (1 - perc);\n    var scaleY = transform2.s.v[1] + (1 - transform2.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform2.p.v[0] * dir * perc, transform2.p.v[1] * dir * perc, transform2.p.v[2]);\n    rMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);\n    rMatrix.rotate(-transform2.r.v * dir * perc);\n    rMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);\n    sMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);\n  };\n  RepeaterModifier.prototype.init = function (elem2, arr, pos, elemsData) {\n    this.elem = elem2;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem2);\n    this.initModifierProperties(elem2, arr[pos]);\n    while (pos > 0) {\n      pos -= 1;\n      this._elements.unshift(arr[pos]);\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n      if (elements[i].ty === \"gr\") {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n      if (elements[i].ty === \"gr\") {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: \"gr\"\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: \"Transform\",\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n          this._groups.splice(0, 0, group);\n          this._currentCopies += 1;\n        }\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n      cont = 0;\n      var renderFlag;\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n        cont += 1;\n      }\n      this._currentCopies = copies;\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n    return hasReloaded;\n  };\n  RepeaterModifier.prototype.addShape = function () {};\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n  RoundCornersModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem2, data2.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index2 = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);\n          index2 += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index2);\n        index2 += 1;\n      }\n    }\n    return clonedPath;\n  };\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(\" \") : [];\n    var fWeight = \"normal\";\n    var fStyle = \"normal\";\n    var len = styles.length;\n    var styleName;\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n      switch (styleName) {\n        case \"italic\":\n          fStyle = \"italic\";\n          break;\n        case \"bold\":\n          fWeight = \"700\";\n          break;\n        case \"black\":\n          fWeight = \"900\";\n          break;\n        case \"medium\":\n          fWeight = \"500\";\n          break;\n        case \"regular\":\n        case \"normal\":\n          fWeight = \"400\";\n          break;\n        case \"light\":\n        case \"thin\":\n          fWeight = \"200\";\n          break;\n      }\n    }\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n  const FontManager = function () {\n    var maxWaitingTime = 5e3;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = [];\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = [\"d83cdffb\", \"d83cdffc\", \"d83cdffd\", \"d83cdffe\", \"d83cdfff\"];\n    var zeroWidthJoiner = [65039, 8205];\n    function trimFontOptions(font) {\n      var familyArray = font.split(\",\");\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== \"sans-serif\" && familyArray[i] !== \"monospace\") {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n      return enabledFamilies.join(\",\");\n    }\n    function setUpNode(font, family) {\n      var parentNode = createTag(\"span\");\n      parentNode.setAttribute(\"aria-hidden\", true);\n      parentNode.style.fontFamily = family;\n      var node = createTag(\"span\");\n      node.innerText = \"giItT1WQy@!-/#\";\n      parentNode.style.position = \"absolute\";\n      parentNode.style.left = \"-10000px\";\n      parentNode.style.top = \"-10000px\";\n      parentNode.style.fontSize = \"300px\";\n      parentNode.style.fontVariant = \"normal\";\n      parentNode.style.fontStyle = \"normal\";\n      parentNode.style.fontWeight = \"normal\";\n      parentNode.style.letterSpacing = \"0\";\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode);\n      var width2 = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + \", \" + family;\n      return {\n        node,\n        w: width2,\n        parent: parentNode\n      };\n    }\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === \"n\" || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? \"svg\" : \"canvas\";\n      var helper;\n      var fontProps = getFontProperties(fontData);\n      if (engine === \"svg\") {\n        var tHelper = createNS(\"text\");\n        tHelper.style.fontSize = \"100px\";\n        tHelper.setAttribute(\"font-family\", fontData.fFamily);\n        tHelper.setAttribute(\"font-style\", fontProps.style);\n        tHelper.setAttribute(\"font-weight\", fontProps.weight);\n        tHelper.textContent = \"1\";\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = \"inherit\";\n          tHelper.setAttribute(\"class\", fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext(\"2d\");\n        tCanvasHelper.font = fontProps.style + \" \" + fontProps.weight + \" 100px \" + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n      function measure(text2) {\n        if (engine === \"svg\") {\n          helper.textContent = text2;\n          return helper.getComputedTextLength();\n        }\n        return helper.measureText(text2).width;\n      }\n      return {\n        measureText: measure\n      };\n    }\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(data2 => {\n          data2.helper = createHelper(data2);\n          data2.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, \"monospace\");\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, \"sans-serif\");\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === \"p\" || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n          if (shouldLoadFont) {\n            var s = createTag(\"style\");\n            s.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            s.setAttribute(\"f-origin\", fontArr[i].origin);\n            s.setAttribute(\"f-family\", fontArr[i].fFamily);\n            s.type = \"text/css\";\n            s.innerText = \"@font-face {font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === \"g\" || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var l = createTag(\"link\");\n            l.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            l.setAttribute(\"f-origin\", fontArr[i].origin);\n            l.type = \"text/css\";\n            l.rel = \"stylesheet\";\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === \"t\" || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var sc = createTag(\"link\");\n            sc.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            sc.setAttribute(\"f-origin\", fontArr[i].origin);\n            sc.setAttribute(\"rel\", \"stylesheet\");\n            sc.setAttribute(\"href\", fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n      if (!this.chars) {\n        this.chars = [];\n      }\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n          j += 1;\n        }\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n    function getCharData(char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n        i += 1;\n      }\n      if ((typeof char === \"string\" && char.charCodeAt(0) !== 13 || !char) && console && console.warn &&\n      // eslint-disable-line no-console\n      !this._warned) {\n        this._warned = true;\n        console.warn(\"Missing character from exported characters list: \", char, style, font);\n      }\n      return emptyChar;\n    }\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n      var index2 = char.charCodeAt(0);\n      if (!fontData.cache[index2 + 1]) {\n        var tHelper = fontData.helper;\n        if (char === \" \") {\n          var doubleSize = tHelper.measureText(\"|\" + char + \"|\");\n          var singleSize = tHelper.measureText(\"||\");\n          fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index2 + 1] = tHelper.measureText(char) / 100;\n        }\n      }\n      return fontData.cache[index2 + 1] * size;\n    }\n    function getFontByName(name2) {\n      var i = 0;\n      var len = this.fonts.length;\n      while (i < len) {\n        if (this.fonts[i].fName === name2) {\n          return this.fonts[i];\n        }\n        i += 1;\n      }\n      return this.fonts[0];\n    }\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum2 = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum2) !== -1;\n    }\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1;\n    }\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n    var Font = function () {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars,\n      addFonts,\n      getCharData,\n      getFontByName,\n      measureText,\n      checkLoadedFonts,\n      setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n  function RenderableElement() {}\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      this.isInRange = false;\n      this.hidden = false;\n      this.isTransparent = false;\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function () {\n      var i;\n      var len = this.renderableComponents.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n  const MaskManagerInterface = function () {\n    function MaskInterface(mask2, data2) {\n      this._mask = mask2;\n      this._data = data2;\n    }\n    Object.defineProperty(MaskInterface.prototype, \"maskPath\", {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, \"maskOpacity\", {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n        return this._mask.op.v * 100;\n      }\n    });\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n      var i;\n      var len = maskManager.viewData.length;\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n      var maskFunction = function (name2) {\n        i = 0;\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name2) {\n            return _masksInterfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      };\n      return maskFunction;\n    };\n    return MaskManager;\n  }();\n  const ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n    function completeProperty(expressionValue, property2, type) {\n      Object.defineProperty(expressionValue, \"velocity\", {\n        get: function () {\n          return property2.getVelocityAtTime(property2.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property2.keyframes ? property2.keyframes.length : 0;\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n        var value2 = \"\";\n        if (\"s\" in property2.keyframes[pos - 1]) {\n          value2 = property2.keyframes[pos - 1].s;\n        } else if (\"e\" in property2.keyframes[pos - 2]) {\n          value2 = property2.keyframes[pos - 2].e;\n        } else {\n          value2 = property2.keyframes[pos - 2].s;\n        }\n        var valueProp = type === \"unidimensional\" ? new Number(value2) : Object.assign({}, value2);\n        valueProp.time = property2.keyframes[pos - 1].t / property2.elem.comp.globalData.frameRate;\n        valueProp.value = type === \"unidimensional\" ? value2[0] : value2;\n        return valueProp;\n      };\n      expressionValue.valueAtTime = property2.getValueAtTime;\n      expressionValue.speedAtTime = property2.getSpeedAtTime;\n      expressionValue.velocityAtTime = property2.getVelocityAtTime;\n      expressionValue.propertyGroup = property2.propertyGroup;\n    }\n    function UnidimensionalPropertyInterface(property2) {\n      if (!property2 || !(\"pv\" in property2)) {\n        property2 = defaultUnidimensionalValue;\n      }\n      var mult = 1 / property2.mult;\n      var val2 = property2.pv * mult;\n      var expressionValue = new Number(val2);\n      expressionValue.value = val2;\n      completeProperty(expressionValue, property2, \"unidimensional\");\n      return function () {\n        if (property2.k) {\n          property2.getValue();\n        }\n        val2 = property2.v * mult;\n        if (expressionValue.value !== val2) {\n          expressionValue = new Number(val2);\n          expressionValue.value = val2;\n          completeProperty(expressionValue, property2, \"unidimensional\");\n        }\n        return expressionValue;\n      };\n    }\n    function MultidimensionalPropertyInterface(property2) {\n      if (!property2 || !(\"pv\" in property2)) {\n        property2 = defaultMultidimensionalValue;\n      }\n      var mult = 1 / property2.mult;\n      var len = property2.data && property2.data.l || property2.pv.length;\n      var expressionValue = createTypedArray(\"float32\", len);\n      var arrValue = createTypedArray(\"float32\", len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property2, \"multidimensional\");\n      return function () {\n        if (property2.k) {\n          property2.getValue();\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property2.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n        return expressionValue;\n      };\n    }\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n    return function (property2) {\n      if (!property2) {\n        return defaultGetter;\n      }\n      if (property2.propType === \"unidimensional\") {\n        return UnidimensionalPropertyInterface(property2);\n      }\n      return MultidimensionalPropertyInterface(property2);\n    };\n  }();\n  const TransformExpressionInterface = function () {\n    return function (transform2) {\n      function _thisFunction(name2) {\n        switch (name2) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n          case \"ADBE Rotate X\":\n            return _thisFunction.xRotation;\n          case \"ADBE Rotate Y\":\n            return _thisFunction.yRotation;\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return _thisFunction.position;\n          case \"ADBE Position_0\":\n            return _thisFunction.xPosition;\n          case \"ADBE Position_1\":\n            return _thisFunction.yPosition;\n          case \"ADBE Position_2\":\n            return _thisFunction.zPosition;\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: ExpressionPropertyInterface(transform2.r || transform2.rz)\n      });\n      Object.defineProperty(_thisFunction, \"zRotation\", {\n        get: ExpressionPropertyInterface(transform2.rz || transform2.r)\n      });\n      Object.defineProperty(_thisFunction, \"xRotation\", {\n        get: ExpressionPropertyInterface(transform2.rx)\n      });\n      Object.defineProperty(_thisFunction, \"yRotation\", {\n        get: ExpressionPropertyInterface(transform2.ry)\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: ExpressionPropertyInterface(transform2.s)\n      });\n      var _px;\n      var _py;\n      var _pz;\n      var _transformFactory;\n      if (transform2.p) {\n        _transformFactory = ExpressionPropertyInterface(transform2.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform2.px);\n        _py = ExpressionPropertyInterface(transform2.py);\n        if (transform2.pz) {\n          _pz = ExpressionPropertyInterface(transform2.pz);\n        }\n      }\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function () {\n          if (transform2.p) {\n            return _transformFactory();\n          }\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: ExpressionPropertyInterface(transform2.px)\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: ExpressionPropertyInterface(transform2.py)\n      });\n      Object.defineProperty(_thisFunction, \"zPosition\", {\n        get: ExpressionPropertyInterface(transform2.pz)\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: ExpressionPropertyInterface(transform2.a)\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: ExpressionPropertyInterface(transform2.o)\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: ExpressionPropertyInterface(transform2.sk)\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: ExpressionPropertyInterface(transform2.sa)\n      });\n      Object.defineProperty(_thisFunction, \"orientation\", {\n        get: ExpressionPropertyInterface(transform2.or)\n      });\n      return _thisFunction;\n    };\n  }();\n  const LayerExpressionInterface = function () {\n    function getMatrix(time2) {\n      var toWorldMat = new Matrix();\n      if (time2 !== void 0) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time2);\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n      return toWorldMat;\n    }\n    function toWorldVec(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function toWorld2(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function fromWorldVec(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function fromWorld2(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.inversePoint(arr);\n    }\n    function fromComp2(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n        return toWorldMat.inversePoint(arr);\n      }\n      return toWorldMat.inversePoint(arr);\n    }\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n    return function (elem2) {\n      var transformInterface;\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem2);\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n      function _thisLayerFunction(name2) {\n        switch (name2) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n          case 4:\n          case \"ADBE Effect Parade\":\n          case \"effects\":\n          case \"Effects\":\n            return _thisLayerFunction.effect;\n          case \"ADBE Text Properties\":\n            return _thisLayerFunction.textInterface;\n          default:\n            return null;\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld2;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld2;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld2;\n      _thisLayerFunction.fromComp = fromComp2;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem2.sourceRectAtTime.bind(elem2);\n      _thisLayerFunction._elem = elem2;\n      transformInterface = TransformExpressionInterface(elem2.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, \"anchorPoint\");\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem2.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function () {\n            return elem2.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, \"rotation\"),\n        scale: getDescriptor(transformInterface, \"scale\"),\n        position: getDescriptor(transformInterface, \"position\"),\n        opacity: getDescriptor(transformInterface, \"opacity\"),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function () {\n            return elem2.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem2.data.st;\n      _thisLayerFunction.index = elem2.data.ind;\n      _thisLayerFunction.source = elem2.data.refId;\n      _thisLayerFunction.height = elem2.data.ty === 0 ? elem2.data.h : 100;\n      _thisLayerFunction.width = elem2.data.ty === 0 ? elem2.data.w : 100;\n      _thisLayerFunction.inPoint = elem2.data.ip / elem2.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem2.data.op / elem2.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem2.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n  const propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val2) {\n        val2 = val2 === void 0 ? 1 : val2;\n        if (val2 <= 0) {\n          return interfaceFunction;\n        }\n        return parentPropertyGroup(val2 - 1);\n      };\n    };\n  }();\n  const PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n      function _propertyGroup(val2) {\n        val2 = val2 === void 0 ? 1 : val2;\n        if (val2 <= 0) {\n          return interfaceFunction;\n        }\n        return propertyGroup(val2 - 1);\n      }\n      return _propertyGroup;\n    };\n  }();\n  const EffectsExpressionInterface = function () {\n    var ob2 = {\n      createEffectsInterface\n    };\n    function createEffectsInterface(elem2, propertyGroup) {\n      if (elem2.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem2.data.ef;\n        var i;\n        var len = elem2.effectsManager.effectElements.length;\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem2.effectsManager.effectElements[i], propertyGroup, elem2));\n        }\n        var effects = elem2.data.ef || [];\n        var groupInterface = function (name2) {\n          i = 0;\n          len = effects.length;\n          while (i < len) {\n            if (name2 === effects[i].nm || name2 === effects[i].mn || name2 === effects[i].ix) {\n              return effectElements[i];\n            }\n            i += 1;\n          }\n          return null;\n        };\n        Object.defineProperty(groupInterface, \"numProperties\", {\n          get: function () {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n      return null;\n    }\n    function createGroupInterface(data2, elements, propertyGroup, elem2) {\n      function groupInterface(name2) {\n        var effects = data2.ef;\n        var i2 = 0;\n        var len2 = effects.length;\n        while (i2 < len2) {\n          if (name2 === effects[i2].nm || name2 === effects[i2].mn || name2 === effects[i2].ix) {\n            if (effects[i2].ty === 5) {\n              return effectElements[i2];\n            }\n            return effectElements[i2]();\n          }\n          i2 += 1;\n        }\n        throw new Error();\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n      var effectElements = [];\n      var i;\n      var len = data2.ef.length;\n      for (i = 0; i < len; i += 1) {\n        if (data2.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data2.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem2));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data2.ef[i].ty, elem2, _propertyGroup));\n        }\n      }\n      if (data2.mn === \"ADBE Color Control\") {\n        Object.defineProperty(groupInterface, \"color\", {\n          get: function () {\n            return effectElements[0]();\n          }\n        });\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data2.np;\n          }\n        },\n        _name: {\n          value: data2.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data2.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n    function createValueInterface(element, type, elem2, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem2.comp.compInterface(element.p.v);\n        }\n        return expressionProperty();\n      }\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface(\"\", propertyGroup));\n      }\n      return interfaceFunction;\n    }\n    return ob2;\n  }();\n  const CompExpressionInterface = function () {\n    return function (comp2) {\n      function _thisLayerFunction(name2) {\n        var i = 0;\n        var len = comp2.layers.length;\n        while (i < len) {\n          if (comp2.layers[i].nm === name2 || comp2.layers[i].ind === name2) {\n            return comp2.elements[i].layerInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp2.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp2.data.h || comp2.globalData.compSize.h;\n      _thisLayerFunction.width = comp2.data.w || comp2.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp2.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp2.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n  const ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n      function interfaceFunction(val2) {\n        if (val2 === \"Shape\" || val2 === \"shape\" || val2 === \"Path\" || val2 === \"path\" || val2 === \"ADBE Vector Shape\" || val2 === 2) {\n          return interfaceFunction.path;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      prop.setGroupProperty(PropertyInterface(\"Path\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n  const ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === \"gr\") {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"fl\") {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"st\") {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tm\") {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tr\") ;else if (shapes[i].ty === \"el\") {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sr\") {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sh\") {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rc\") {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rd\") {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rp\") {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"gf\") {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i]));\n        }\n      }\n      return arr;\n    }\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n      var interfaceFunction = function _interfaceFunction(value2) {\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value2 || interfaces[i].mn === value2 || interfaces[i].propertyIndex === value2 || interfaces[i].ix === value2 || interfaces[i].ind === value2) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        if (typeof value2 === \"number\") {\n          return interfaces[value2 - 1];\n        }\n        return null;\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value2) {\n        switch (value2) {\n          case \"ADBE Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return interfaceFunction.content;\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content2 = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content2;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, \"_name\", {\n        get: function () {\n          return shape.nm;\n        }\n      });\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === \"Color\" || val2 === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === \"Start Point\" || val2 === \"start point\") {\n          return interfaceFunction.startPoint;\n        }\n        if (val2 === \"End Point\" || val2 === \"end point\") {\n          return interfaceFunction.endPoint;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function () {\n            return \"a\";\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface(\"Start Point\", propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End Point\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n      return interfaceFunction;\n    }\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n      function addPropertyToDashOb(i2) {\n        Object.defineProperty(dashOb, shape.d[i2].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i2].p)\n        });\n      }\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n      function interfaceFunction(val2) {\n        if (val2 === \"Color\" || val2 === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (val2 === \"Stroke Width\" || val2 === \"stroke width\") {\n          return interfaceFunction.strokeWidth;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function () {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface(\"Stroke Width\", _propertyGroup));\n      return interfaceFunction;\n    }\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === shape.e.ix || val2 === \"End\" || val2 === \"end\") {\n          return interfaceFunction.end;\n        }\n        if (val2 === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n        if (val2 === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface(\"Start\", _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.a.ix === value2 || value2 === \"Anchor Point\") {\n          return interfaceFunction.anchorPoint;\n        }\n        if (shape.o.ix === value2 || value2 === \"Opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (shape.p.ix === value2 || value2 === \"Position\") {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2 || value2 === \"Rotation\" || value2 === \"ADBE Vector Rotation\") {\n          return interfaceFunction.rotation;\n        }\n        if (shape.s.ix === value2 || value2 === \"Scale\") {\n          return interfaceFunction.scale;\n        }\n        if (shape.sk && shape.sk.ix === value2 || value2 === \"Skew\") {\n          return interfaceFunction.skew;\n        }\n        if (shape.sa && shape.sa.ix === value2 || value2 === \"Skew Axis\") {\n          return interfaceFunction.skewAxis;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      view.transform.mProps.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface(\"Anchor Point\", _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface(\"Scale\", _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface(\"Skew\", _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface(\"Skew Angle\", _propertyGroup));\n      }\n      view.transform.op.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = \"tr\";\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.s.ix === value2) {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2) {\n          return interfaceFunction.rotation;\n        }\n        if (shape.pt.ix === value2) {\n          return interfaceFunction.points;\n        }\n        if (shape.or.ix === value2 || value2 === \"ADBE Vector Star Outer Radius\") {\n          return interfaceFunction.outerRadius;\n        }\n        if (shape.os.ix === value2) {\n          return interfaceFunction.outerRoundness;\n        }\n        if (shape.ir && (shape.ir.ix === value2 || value2 === \"ADBE Vector Star Inner Radius\")) {\n          return interfaceFunction.innerRadius;\n        }\n        if (shape.is && shape.is.ix === value2) {\n          return interfaceFunction.innerRoundness;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface(\"Outer Radius\", _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface(\"Outer Roundness\", _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface(\"Points\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface(\"Inner Radius\", _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface(\"Inner Roundness\", _propertyGroup));\n      }\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2) {\n          return interfaceFunction.roundness;\n        }\n        if (shape.s.ix === value2 || value2 === \"Size\" || value2 === \"ADBE Vector Rect Size\") {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.r.ix === value2 || value2 === \"Round Corners 1\") {\n          return interfaceFunction.radius;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface(\"Radius\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.c.ix === value2 || value2 === \"Copies\") {\n          return interfaceFunction.copies;\n        }\n        if (shape.o.ix === value2 || value2 === \"Offset\") {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface(\"Copies\", _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n      function _interfaceFunction(value2) {\n        if (typeof value2 === \"number\") {\n          value2 = value2 === void 0 ? 1 : value2;\n          if (value2 === 0) {\n            return propertyGroup;\n          }\n          return interfaces[value2 - 1];\n        }\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value2) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      }\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = \"Contents\";\n      return _interfaceFunction;\n    };\n  }();\n  const TextExpressionInterface = function () {\n    return function (elem2) {\n      var _prevValue;\n      var _sourceText;\n      function _thisLayerFunction(name2) {\n        switch (name2) {\n          case \"ADBE Text Document\":\n            return _thisLayerFunction.sourceText;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function () {\n          elem2.textProperty.getValue();\n          var stringValue = elem2.textProperty.currentData.t;\n          if (stringValue !== _prevValue) {\n            elem2.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue);\n            _sourceText.value = stringValue || new String(stringValue);\n          }\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n  const getBlendMode = function () {\n    var blendModeEnums = {\n      0: \"source-over\",\n      1: \"multiply\",\n      2: \"screen\",\n      3: \"overlay\",\n      4: \"darken\",\n      5: \"lighten\",\n      6: \"color-dodge\",\n      7: \"color-burn\",\n      8: \"hard-light\",\n      9: \"soft-light\",\n      10: \"difference\",\n      11: \"exclusion\",\n      12: \"hue\",\n      13: \"saturation\",\n      14: \"color\",\n      15: \"luminosity\"\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || \"\";\n    };\n  }();\n  function SliderEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function AngleEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function ColorEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);\n  }\n  function PointEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);\n  }\n  function LayerIndexEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function MaskIndexEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function CheckboxEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function NoValueEffect() {\n    this.p = {};\n  }\n  function EffectsManager(data2, element) {\n    var effects = data2.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n  function GroupEffect(data2, element) {\n    this.init(data2, element);\n  }\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n  GroupEffect.prototype.init = function (data2, element) {\n    this.data = data2;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n        case 5:\n          eff = new EffectsManager(effects[i], element);\n          break;\n        default:\n          eff = new NoValueEffect(effects[i]);\n          break;\n      }\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n  function BaseElement() {}\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false;\n      }\n      var i = 0;\n      var len = this.data.masksProperties.length;\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== \"n\" && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n        i += 1;\n      }\n      return false;\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this);\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem2 = this.baseElement || this.layerElement;\n      elem2.style[\"mix-blend-mode\"] = blendModeValue;\n    },\n    initBaseData: function (data2, globalData2, comp2) {\n      this.globalData = globalData2;\n      this.comp = comp2;\n      this.data = data2;\n      this.layerId = createElementID();\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      }\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function () {\n      return this.type;\n    },\n    sourceRectAtTime: function () {}\n  };\n  function FrameElement() {}\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      this._isFirstFrame = false;\n      this.dynamicProperties = [];\n      this._mdf = false;\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === \"transform\") {\n          this.dynamicProperties[i].getValue();\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n  const FootageInterface = function () {\n    var outlineInterfaceFactory = function (elem2) {\n      var currentPropertyName = \"\";\n      var currentProperty = elem2.getFootageData();\n      function init() {\n        currentPropertyName = \"\";\n        currentProperty = elem2.getFootageData();\n        return searchProperty;\n      }\n      function searchProperty(value2) {\n        if (currentProperty[value2]) {\n          currentPropertyName = value2;\n          currentProperty = currentProperty[value2];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        var propertyNameIndex = value2.indexOf(currentPropertyName);\n        if (propertyNameIndex !== -1) {\n          var index2 = parseInt(value2.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index2];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        return \"\";\n      }\n      return init;\n    };\n    var dataInterfaceFactory = function (elem2) {\n      function interfaceFunction(value2) {\n        if (value2 === \"Outline\") {\n          return interfaceFunction.outlineInterface();\n        }\n        return null;\n      }\n      interfaceFunction._name = \"Outline\";\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem2);\n      return interfaceFunction;\n    };\n    return function (elem2) {\n      function _interfaceFunction(value2) {\n        if (value2 === \"Data\") {\n          return _interfaceFunction.dataInterface;\n        }\n        return null;\n      }\n      _interfaceFunction._name = \"Data\";\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem2);\n      return _interfaceFunction;\n    };\n  }();\n  function FootageElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.footageData = globalData2.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data2, globalData2, comp2);\n  }\n  FootageElement.prototype.prepareFrame = function () {};\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  FootageElement.prototype.renderFrame = function () {};\n  FootageElement.prototype.destroy = function () {};\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n  function AudioElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.initBaseData(data2, globalData2, comp2);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data2.au && data2.au.lv ? data2.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n  AudioElement.prototype.show = function () {};\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  AudioElement.prototype.destroy = function () {};\n  AudioElement.prototype.sourceRectAtTime = function () {};\n  AudioElement.prototype.initExpressions = function () {};\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data2;\n    this.completeLayers = true;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data2 = this.layers[i];\n        if (data2.ip - data2.st <= num - this.layers[i].st && data2.op - data2.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n      case 0:\n        return this.createComp(layer);\n      case 1:\n        return this.createSolid(layer);\n      case 3:\n        return this.createNull(layer);\n      case 4:\n        return this.createShape(layer);\n      case 5:\n        return this.createText(layer);\n      case 6:\n        return this.createAudio(layer);\n      case 13:\n        return this.createCamera(layer);\n      case 15:\n        return this.createFootage(layer);\n      default:\n        return this.createNull(layer);\n    }\n  };\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\");\n  };\n  BaseRenderer.prototype.createAudio = function (data2) {\n    return new AudioElement(data2, this.globalData, this);\n  };\n  BaseRenderer.prototype.createFootage = function (data2) {\n    return new FootageElement(data2, this.globalData, this);\n  };\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n        j += 1;\n      }\n    }\n  };\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n          if (layers[i].parent !== void 0) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n      i += 1;\n    }\n  };\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp2 = this.createComp(assets[i]);\n        comp2.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp2);\n      }\n    }\n  };\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n    if (typeof pathValue === \"number\") {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element;\n    }\n    return element.getElementByPath(path);\n  };\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n  function TransformElement() {}\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      }\n      if (this.data.ty !== 11) ;\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length;\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n            i += 1;\n          }\n        }\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp2 = this.comp;\n      while (flag) {\n        if (comp2.finalTransform) {\n          if (comp2.data.hasMask) {\n            transforms.splice(0, 0, comp2.finalTransform);\n          }\n          comp2 = comp2.comp;\n        } else {\n          flag = false;\n        }\n      }\n      var i;\n      var len = transforms.length;\n      var ptNew;\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n  function MaskElement(data2, element, globalData2) {\n    this.data = data2;\n    this.element = element;\n    this.globalData = globalData2;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = \"\";\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = \"clipPath\";\n    var maskRef = \"clip-path\";\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== \"a\" && properties[i].mode !== \"n\" || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = \"mask\";\n        maskRef = \"mask\";\n      }\n      if ((properties[i].mode === \"s\" || properties[i].mode === \"i\") && count === 0) {\n        rect = createNS(\"rect\");\n        rect.setAttribute(\"fill\", \"#ffffff\");\n        rect.setAttribute(\"width\", this.element.comp.data.w || 0);\n        rect.setAttribute(\"height\", this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n      path = createNS(\"path\");\n      if (properties[i].mode === \"n\") {\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: \"\"\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute(\"fill\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        path.setAttribute(\"clip-rule\", \"nonzero\");\n        var filterID;\n        if (properties[i].x.k !== 0) {\n          maskType = \"mask\";\n          maskRef = \"mask\";\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS(\"filter\");\n          expansor.setAttribute(\"id\", filterID);\n          feMorph = createNS(\"feMorphology\");\n          feMorph.setAttribute(\"operator\", \"erode\");\n          feMorph.setAttribute(\"in\", \"SourceGraphic\");\n          feMorph.setAttribute(\"radius\", \"0\");\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute(\"stroke\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        } else {\n          feMorph = null;\n          x = null;\n        }\n        this.storedData[i] = {\n          elem: path,\n          x,\n          expan: feMorph,\n          lastPath: \"\",\n          lastOperator: \"\",\n          filterId: filterID,\n          lastRadius: 0\n        };\n        if (properties[i].mode === \"i\") {\n          jLen = currentMasks.length;\n          var g = createNS(\"g\");\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n          var mask2 = createNS(\"mask\");\n          mask2.setAttribute(\"mask-type\", \"alpha\");\n          mask2.setAttribute(\"id\", layerId + \"_\" + count);\n          mask2.appendChild(path);\n          defs.appendChild(mask2);\n          g.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + layerId + \"_\" + count + \")\");\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        }\n        this.viewData[i] = {\n          elem: path,\n          lastPath: \"\",\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n    if (count > 0) {\n      this.maskElement.setAttribute(\"id\", layerId);\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + getLocationHref() + \"#\" + layerId + \")\");\n      defs.appendChild(this.maskElement);\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute(\"fill-opacity\", this.viewData[i].op.v);\n      }\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute(\"transform\", finalMat.getInverseMatrix().to2dCSS());\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== \"erode\") {\n              this.storedData[i].lastOperator = \"erode\";\n              this.storedData[i].elem.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + this.storedData[i].filterId + \")\");\n            }\n            feMorph.setAttribute(\"radius\", -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== \"dilate\") {\n              this.storedData[i].lastOperator = \"dilate\";\n              this.storedData[i].elem.setAttribute(\"filter\", null);\n            }\n            this.storedData[i].elem.setAttribute(\"stroke-width\", this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = \"M0,0 \";\n    path += \" h\" + this.globalData.compSize.w;\n    path += \" v\" + this.globalData.compSize.h;\n    path += \" h-\" + this.globalData.compSize.w;\n    path += \" v-\" + this.globalData.compSize.h + \" \";\n    return path;\n  };\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n    for (i = 1; i < len; i += 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[i][0] + \",\" + pathNodes.i[i][1] + \" \" + pathNodes.v[i][0] + \",\" + pathNodes.v[i][1];\n    }\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[0][0] + \",\" + pathNodes.i[0][1] + \" \" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    }\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = \"\";\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n        viewData.elem.setAttribute(\"d\", pathShapeValue);\n      }\n      viewData.lastPath = pathString;\n    }\n  };\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n  const filtersFactory = function () {\n    var ob2 = {};\n    ob2.createFilter = createFilter;\n    ob2.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS(\"filter\");\n      fil.setAttribute(\"id\", filId);\n      if (skipCoordinates !== true) {\n        fil.setAttribute(\"filterUnits\", \"objectBoundingBox\");\n        fil.setAttribute(\"x\", \"0%\");\n        fil.setAttribute(\"y\", \"0%\");\n        fil.setAttribute(\"width\", \"100%\");\n        fil.setAttribute(\"height\", \"100%\");\n      }\n      return fil;\n    }\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS(\"feColorMatrix\");\n      feColorMatrix.setAttribute(\"type\", \"matrix\");\n      feColorMatrix.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n      feColorMatrix.setAttribute(\"values\", \"0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1\");\n      return feColorMatrix;\n    }\n    return ob2;\n  }();\n  const featureSupport = function () {\n    var ob2 = {\n      maskType: true\n    };\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob2.maskType = false;\n    }\n    return ob2;\n  }();\n  var registeredEffects = {};\n  var idPrefix = \"filter_result_\";\n  function SVGEffects(elem2) {\n    var i;\n    var source = \"SourceGraphic\";\n    var len = elem2.data.ef ? elem2.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem2.data.ef[i].ty;\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem2.effectsManager.effectElements[i], elem2, idPrefix + count, source);\n        source = idPrefix + count;\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n    if (count) {\n      elem2.globalData.defs.appendChild(fil);\n      elem2.layerElement.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n    }\n    if (this.filters.length) {\n      elem2.addRenderableComponent(this);\n    }\n  }\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n  function SVGBaseElement() {}\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS(\"g\");\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS(\"g\");\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null;\n      var filId;\n      var fil;\n      var gg;\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          var masker = createNS(\"mask\");\n          masker.setAttribute(\"id\", this.layerId);\n          masker.setAttribute(\"mask-type\", this.data.td == 3 ? \"luminance\" : \"alpha\");\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker);\n          if (!featureSupport.maskType && this.data.td == 1) {\n            masker.setAttribute(\"mask-type\", \"luminance\");\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          }\n        } else if (this.data.td == 2) {\n          var maskGroup = createNS(\"mask\");\n          maskGroup.setAttribute(\"id\", this.layerId);\n          maskGroup.setAttribute(\"mask-type\", \"alpha\");\n          var maskGrouper = createNS(\"g\");\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId);\n          var feCTr = createNS(\"feComponentTransfer\");\n          feCTr.setAttribute(\"in\", \"SourceGraphic\");\n          fil.appendChild(feCTr);\n          var feFunc = createNS(\"feFuncA\");\n          feFunc.setAttribute(\"type\", \"table\");\n          feFunc.setAttribute(\"tableValues\", \"1.0 0.0\");\n          feCTr.appendChild(feFunc);\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS(\"rect\");\n          alphaRect.setAttribute(\"width\", this.comp.data.w);\n          alphaRect.setAttribute(\"height\", this.comp.data.h);\n          alphaRect.setAttribute(\"x\", \"0\");\n          alphaRect.setAttribute(\"y\", \"0\");\n          alphaRect.setAttribute(\"fill\", \"#ffffff\");\n          alphaRect.setAttribute(\"opacity\", \"0\");\n          maskGrouper.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute(\"mask-type\", \"luminance\");\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute(\"id\", this.data.ln);\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute(\"class\", this.data.cl);\n      }\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS(\"clipPath\");\n        var pt = createNS(\"path\");\n        pt.setAttribute(\"d\", \"M0,0 L\" + this.data.w + \",0 L\" + this.data.w + \",\" + this.data.h + \" L0,\" + this.data.h + \"z\");\n        var clipId = createElementID();\n        cp.setAttribute(\"id\", clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n        if (this.checkMasks()) {\n          var cpGroup = createNS(\"g\");\n          cpGroup.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute(\"transform\", this.finalTransform.mat.to2dCSS());\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute(\"opacity\", this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null;\n      }\n      return this.baseElement;\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return;\n      }\n      this.matteElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + id + \")\");\n    }\n  };\n  function HierarchyElement() {}\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      this.hierarchy = [];\n      this._isParent = false;\n      this.checkParenting();\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true;\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== void 0) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n  function RenderableDOMElement() {}\n  (function () {\n    var _prototype = {\n      initElement: function (data2, globalData2, comp2) {\n        this.initFrame();\n        this.initBaseData(data2, globalData2, comp2);\n        this.initTransform(data2, globalData2, comp2);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function () {\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem2 = this.baseElement || this.layerElement;\n          elem2.style.display = \"none\";\n          this.hidden = true;\n        }\n      },\n      show: function () {\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem2 = this.baseElement || this.layerElement;\n            elem2.style.display = \"block\";\n          }\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function () {\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function () {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n  function IImageElement(data2, globalData2, comp2) {\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.initElement(data2, globalData2, comp2);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS(\"image\");\n    this.innerElem.setAttribute(\"width\", this.assetData.w + \"px\");\n    this.innerElem.setAttribute(\"height\", this.assetData.h + \"px\");\n    this.innerElem.setAttribute(\"preserveAspectRatio\", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n  function ProcessedElement(element, position2) {\n    this.elem = element;\n    this.pos = position2;\n  }\n  function IShapeElement() {}\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data2) {\n      var i;\n      var len = this.shapeModifiers.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data2);\n      }\n    },\n    isShapeInAnimatedModifiers: function (data2) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data2)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n      var i;\n      var len = this.shapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function (elem2) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n      while (i < len) {\n        if (elements[i].elem === elem2) {\n          return elements[i].pos;\n        }\n        i += 1;\n      }\n      return 0;\n    },\n    addProcessedElement: function (elem2, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n      while (i) {\n        i -= 1;\n        if (elements[i].elem === elem2) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n      elements.push(new ProcessedElement(elem2, pos));\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n  const lineCapEnum = {\n    1: \"butt\",\n    2: \"round\",\n    3: \"square\"\n  };\n  const lineJoinEnum = {\n    1: \"miter\",\n    2: \"round\",\n    3: \"bevel\"\n  };\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = \"\";\n    this.sh = shape;\n    this.lvl = level;\n    this._isAnimated = !!shape.k;\n    var i = 0;\n    var len = transformers.length;\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n      i += 1;\n    }\n  }\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n  function SVGStyleData(data2, level) {\n    this.data = data2;\n    this.type = data2.ty;\n    this.d = \"\";\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data2.hd === true;\n    this.pElem = createNS(\"path\");\n    this.msElem = null;\n  }\n  SVGStyleData.prototype.reset = function () {\n    this.d = \"\";\n    this._mdf = false;\n  };\n  function DashProperty(elem2, data2, renderer, container) {\n    this.elem = elem2;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data2.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = \"\";\n    this.dashArray = createTypedArray(\"float32\", data2.length ? data2.length - 1 : 0);\n    this.dashoffset = createTypedArray(\"float32\", 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data2.length || 0;\n    var prop;\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem2, data2[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data2[i].n,\n        p: prop\n      };\n    }\n    if (!this.k) {\n      this.getValue(true);\n    }\n    this._isAnimated = this.k;\n  }\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n      if (this.renderer === \"svg\") {\n        this.dashStr = \"\";\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== \"o\") {\n          if (this.renderer === \"svg\") {\n            this.dashStr += \" \" + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n  function SVGStrokeStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);\n    this.d = new DashProperty(elem2, data2.d || {}, \"svg\", this);\n    this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n  function SVGFillStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n  function SVGNoStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n  function GradientProperty(elem2, data2, container) {\n    this.data = data2;\n    this.c = createTypedArray(\"uint8c\", data2.p * 4);\n    var cLength = data2.k.k[0].s ? data2.k.k[0].s.length - data2.p * 4 : data2.k.k.length - data2.p * 4;\n    this.o = createTypedArray(\"float32\", cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem2, data2.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n      if (diff > 0.01) {\n        return false;\n      }\n      i += 1;\n    }\n    return true;\n  };\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n    return true;\n  };\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val2;\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val2 = Math.round(this.prop.v[i] * mult);\n        if (this.c[i] !== val2) {\n          this.c[i] = val2;\n          this._cmdf = !forceRender;\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length;\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val2 = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n          if (this.o[i - this.data.p * 4] !== val2) {\n            this.o[i - this.data.p * 4] = val2;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n      this._mdf = !forceRender;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n  function SVGGradientFillStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem2, data2, styleOb);\n  }\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem2, data2, styleOb) {\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem2, data2.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem2, data2.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem2, data2.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem2, data2.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem2, data2.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data2);\n    this.setGradientOpacity(data2, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data2) {\n    var gradientId = createElementID();\n    var gfill = createNS(data2.t === 1 ? \"linearGradient\" : \"radialGradient\");\n    gfill.setAttribute(\"id\", gradientId);\n    gfill.setAttribute(\"spreadMethod\", \"pad\");\n    gfill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data2.g.p * 4;\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS(\"stop\");\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n    pathElement.setAttribute(data2.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + gradientId + \")\");\n    this.gf = gfill;\n    this.cst = stops;\n  };\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data2, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask2 = createNS(\"mask\");\n      var maskElement = createNS(\"path\");\n      mask2.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask2.setAttribute(\"id\", maskId);\n      var opFill = createNS(data2.t === 1 ? \"linearGradient\" : \"radialGradient\");\n      opFill.setAttribute(\"id\", opacityId);\n      opFill.setAttribute(\"spreadMethod\", \"pad\");\n      opFill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n      jLen = data2.g.k.k[0].s ? data2.g.k.k[0].s.length : data2.g.k.k.length;\n      var stops = this.stops;\n      for (j = data2.g.p * 4; j < jLen; j += 2) {\n        stop = createNS(\"stop\");\n        stop.setAttribute(\"stop-color\", \"rgb(255,255,255)\");\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n      maskElement.setAttribute(data2.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + opacityId + \")\");\n      if (data2.ty === \"gs\") {\n        maskElement.setAttribute(\"stroke-linecap\", lineCapEnum[data2.lc || 2]);\n        maskElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data2.lj || 2]);\n        if (data2.lj === 1) {\n          maskElement.setAttribute(\"stroke-miterlimit\", data2.ml);\n        }\n      }\n      this.of = opFill;\n      this.ms = mask2;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n  function SVGGradientStrokeStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);\n    this.d = new DashProperty(elem2, data2.d || {}, \"svg\", this);\n    this.initGradientData(elem2, data2, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS(\"g\");\n  }\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps,\n      op,\n      container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n  const buildShapeString = function (pathNodes, length2, closed, mat) {\n    if (length2 === 0) {\n      return \"\";\n    }\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n    for (i = 1; i < length2; i += 1) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n    if (closed && length2) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += \"z\";\n    }\n    return shapeString;\n  };\n  const SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n    var _matrixHelper = new Matrix();\n    var ob2 = {\n      createRenderFunction\n    };\n    function createRenderFunction(data2) {\n      switch (data2.ty) {\n        case \"fl\":\n          return renderFill;\n        case \"gf\":\n          return renderGradient;\n        case \"gs\":\n          return renderGradientStroke;\n        case \"st\":\n          return renderStroke;\n        case \"sh\":\n        case \"el\":\n        case \"rc\":\n        case \"sr\":\n          return renderPath;\n        case \"tr\":\n          return renderContentTransform;\n        case \"no\":\n          return renderNoop;\n        default:\n          return null;\n      }\n    }\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute(\"opacity\", itemData.transform.op.v);\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute(\"transform\", itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n    function renderNoop() {}\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n        if (redraw) {\n          pathStringTransformed = \"\";\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n        itemData.styles[l].d += styleData.hd === true ? \"\" : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill-opacity\", itemData.o.v);\n      }\n    }\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === \"gf\" ? \"fill-opacity\" : \"stroke-opacity\";\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? \"x1\" : \"cx\";\n        var attr2 = attr1 === \"x1\" ? \"y1\" : \"cy\";\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n      var stops;\n      var i;\n      var len;\n      var stop;\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute(\"offset\", cValues[i * 4] + \"%\");\n          stop.setAttribute(\"stop-color\", \"rgb(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \")\");\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          if (!itemData.g._collapsable) {\n            stop.setAttribute(\"offset\", oValues[i * 2] + \"%\");\n          }\n          stop.setAttribute(\"stop-opacity\", oValues[i * 2 + 1]);\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute(\"x2\", pt2[0]);\n          gfill.setAttribute(\"y2\", pt2[1]);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"x2\", pt2[0]);\n            itemData.of.setAttribute(\"y2\", pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute(\"r\", rad);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"r\", rad);\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute(\"fx\", x);\n          gfill.setAttribute(\"fy\", y);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"fx\", x);\n            itemData.of.setAttribute(\"fy\", y);\n          }\n        }\n      }\n    }\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute(\"stroke-dasharray\", d.dashStr);\n        styleElem.pElem.setAttribute(\"stroke-dashoffset\", d.dashoffset[0]);\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\"stroke\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-opacity\", itemData.o.v);\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-width\", itemData.w.v);\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute(\"stroke-width\", itemData.w.v);\n        }\n      }\n    }\n    return ob2;\n  }();\n  function SVGShapeElement(data2, globalData2, comp2) {\n    this.shapes = [];\n    this.shapesData = data2.shapes;\n    this.stylesList = [];\n    this.shapeModifiers = [];\n    this.itemsData = [];\n    this.processedElements = [];\n    this.animatedContents = [];\n    this.initElement(data2, globalData2, comp2);\n    this.prevViewData = [];\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n  SVGShapeElement.prototype.createStyleElement = function (data2, level) {\n    var elementData;\n    var styleOb = new SVGStyleData(data2, level);\n    var pathElement = styleOb.pElem;\n    if (data2.ty === \"st\") {\n      elementData = new SVGStrokeStyleData(this, data2, styleOb);\n    } else if (data2.ty === \"fl\") {\n      elementData = new SVGFillStyleData(this, data2, styleOb);\n    } else if (data2.ty === \"gf\" || data2.ty === \"gs\") {\n      var GradientConstructor = data2.ty === \"gf\" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data2, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + elementData.maskId + \")\");\n      }\n    } else if (data2.ty === \"no\") {\n      elementData = new SVGNoStyleData(this, data2, styleOb);\n    }\n    if (data2.ty === \"st\" || data2.ty === \"gs\") {\n      pathElement.setAttribute(\"stroke-linecap\", lineCapEnum[data2.lc || 2]);\n      pathElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data2.lj || 2]);\n      pathElement.setAttribute(\"fill-opacity\", \"0\");\n      if (data2.lj === 1) {\n        pathElement.setAttribute(\"stroke-miterlimit\", data2.ml);\n      }\n    }\n    if (data2.r === 2) {\n      pathElement.setAttribute(\"fill-rule\", \"evenodd\");\n    }\n    if (data2.ln) {\n      pathElement.setAttribute(\"id\", data2.ln);\n    }\n    if (data2.cl) {\n      pathElement.setAttribute(\"class\", data2.cl);\n    }\n    if (data2.bm) {\n      pathElement.style[\"mix-blend-mode\"] = getBlendMode(data2.bm);\n    }\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createGroupElement = function (data2) {\n    var elementData = new ShapeGroupData();\n    if (data2.ln) {\n      elementData.gr.setAttribute(\"id\", data2.ln);\n    }\n    if (data2.cl) {\n      elementData.gr.setAttribute(\"class\", data2.cl);\n    }\n    if (data2.bm) {\n      elementData.gr.style[\"mix-blend-mode\"] = getBlendMode(data2.bm);\n    }\n    return elementData;\n  };\n  SVGShapeElement.prototype.createTransformElement = function (data2, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data2, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createShapeElement = function (data2, ownTransformers, level) {\n    var ty = 4;\n    if (data2.ty === \"rc\") {\n      ty = 5;\n    } else if (data2.ty === \"el\") {\n      ty = 6;\n    } else if (data2.ty === \"sr\") {\n      ty = 7;\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data2, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.addToAnimatedContents = function (data2, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n      i += 1;\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data2),\n      element,\n      data: data2\n    });\n  };\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n  };\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\" || arr[i].ty === \"no\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"ms\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    len = ownStyles.length;\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n    this.renderShape();\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute(\"d\", this.stylesList[i].d);\n          this.stylesList[i].d = \"M0 0\" + this.stylesList[i].d;\n        }\n        this.stylesList[i].pElem.setAttribute(\"d\", this.stylesList[i].d || \"M0 0\");\n      }\n    }\n  };\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n    return updated;\n  };\n  function TextProperty(elem2, data2) {\n    this._frameId = initialDefaultFrame;\n    this.pv = \"\";\n    this.v = \"\";\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data2;\n    this.elem = elem2;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: \"\",\n      fStyle: \"\",\n      fWeight: \"\",\n      fc: \"\",\n      j: \"\",\n      justifyOffset: \"\",\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: \"\",\n      of: \"\",\n      s: \"\",\n      sc: \"\",\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n  TextProperty.prototype.copyData = function (obj, data2) {\n    for (var s in data2) {\n      if (Object.prototype.hasOwnProperty.call(data2, s)) {\n        obj[s] = data2[s];\n      }\n    }\n    return obj;\n  };\n  TextProperty.prototype.setCurrentData = function (data2) {\n    if (!data2.__complete) {\n      this.completeTextData(data2);\n    }\n    this.currentData = data2;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n    return this.kf;\n  };\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n    for (i = 0; i < len; i += 1) {\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n      i += 1;\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n    return this.data.d.k[this.keysIndex].s;\n  };\n  TextProperty.prototype.buildFinalText = function (text2) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text2.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n    while (i < len) {\n      charCode = text2.charCodeAt(i);\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text2.charAt(i);\n      } else if (charCode >= 55296 && charCode <= 56319) {\n        secondCharCode = text2.charCodeAt(i + 1);\n        if (secondCharCode >= 56320 && secondCharCode <= 57343) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text2.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text2.substr(i, 2));\n          }\n          i += 1;\n        } else {\n          charactersArray.push(text2.charAt(i));\n        }\n      } else if (charCode > 56319) {\n        secondCharCode = text2.charCodeAt(i + 1);\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text2.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text2.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text2.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text2.charAt(i));\n      }\n      i += 1;\n    }\n    return charactersArray;\n  };\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data2 = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index2 = 0;\n    var val2;\n    var anchorGrouping = data2.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n    var charCode;\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n          if (finalText[i] === \" \") {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== \" \") {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, \"\\r\");\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val2 = \"\";\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val2 = currentChar;\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        cLength = fontManager.measureText(val2, documentData.f, documentData.finalSize);\n      }\n      if (currentChar === \" \") {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val2,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n        if (val2 === \"\" || val2 === \" \" || i === len - 1) {\n          if (val2 === \"\" || val2 === \" \") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          index2 += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n        if (val2 === \"\" || i === len - 1) {\n          if (val2 === \"\") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          currentSize = 0;\n          index2 += 1;\n        }\n      } else {\n        letters[index2].ind = index2;\n        letters[index2].extra = 0;\n        index2 += 1;\n      }\n    }\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n    documentData.lineWidths = lineWidths;\n    var animators = data2.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n      ind = 0;\n      based = animatorData.s.b;\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n        if (based == 1 && letterData.val !== \"\" || based == 2 && letterData.val !== \"\" && letterData.val !== \" \" || based == 3 && (letterData.n || letterData.val == \" \" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n          ind += 1;\n        }\n      }\n      data2.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n  TextProperty.prototype.updateDocumentData = function (newData, index2) {\n    index2 = index2 === void 0 ? this.keysIndex : index2;\n    var dData = this.copyData({}, this.data.d.k[index2].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index2].s = dData;\n    this.recalculate(index2);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.recalculate = function (index2) {\n    var dData = this.data.d.k[index2].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  const TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n    function TextSelectorPropFactory(elem2, data2) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data2;\n      this.elem = elem2;\n      this.comp = elem2.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem2);\n      this.s = PropertyFactory.getProp(elem2, data2.s || {\n        k: 0\n      }, 0, 0, this);\n      if (\"e\" in data2) {\n        this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n      this.o = PropertyFactory.getProp(elem2, data2.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem2, data2.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem2, data2.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem2, data2.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem2, data2.a, 0, 0.01, this);\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100;\n        } else {\n          y1 = -this.ne.v / 100;\n        }\n        if (this.xe.v > 0) {\n          x2 = 1 - this.xe.v / 100;\n        } else {\n          y2 = 1 + this.xe.v / 100;\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n          }\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n          mult = easer(mult);\n        }\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n          if (smoothness === 0) {\n            smoothness = 1e-8;\n          }\n          var threshold = 0.5 - smoothness * 0.5;\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n        return mult * this.a.v;\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n    function getTextSelectorProp(elem2, data2, arr) {\n      return new TextSelectorPropFactory(elem2, data2);\n    }\n    return {\n      getTextSelectorProp\n    };\n  }();\n  function TextAnimatorDataProperty(elem2, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem2, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem2, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem2, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem2, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem2, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem2, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem2, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem2, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem2, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem2, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem2, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem2, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem2, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem2, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem2, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem2, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem2, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n  function TextAnimatorProperty(textData, renderType, elem2) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem2;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem2);\n  }\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n    if (this._textData.p && \"m\" in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask2;\n    if (this._hasMaskedPath) {\n      mask2 = this._pathData.m;\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask2.v;\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        }\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        i = len;\n        if (mask2.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        this._pathData.pi = pathInfo;\n      }\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n      if (currentLength < 0 && mask2.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = \"\";\n    var letterP = this.defaultPropsArray;\n    var letterO;\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n          isNewLine = false;\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    }\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n        letterM = \"\";\n        letterFc = \"\";\n        letterSw = \"\";\n        letterO = \"\";\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n            currentLine = letters[i].line;\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n          currentLength += alignment[0] * letters[i].an * 5e-3;\n          var animatorOffset = 0;\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n          flag = true;\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n                if (!segments[segmentInd]) {\n                  if (mask2.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n          matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -alignment[1] * yOff * 0.01, 0);\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc = \"rgb(\" + Math.round(sc[0] * 255) + \",\" + Math.round(sc[1] * 255) + \",\" + Math.round(sc[2] * 255) + \")\";\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = \"rgb(\" + Math.round(fc[0] * 255) + \",\" + Math.round(fc[1] * 255) + \",\" + Math.round(fc[2] * 255) + \")\";\n        }\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 5e-3;\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 1e-3 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n          if (documentData.ps) {\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 5e-3, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 1e-3 * documentData.finalSize;\n        }\n        if (renderType === \"html\") {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === \"svg\") {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n        letterO = elemOpacity;\n      }\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n  function ITextElement() {}\n  ITextElement.prototype.initElement = function (data2, globalData2, comp2) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.textProperty = new TextProperty(this, data2.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data2.t, this.renderType, this);\n    this.initTransform(data2, globalData2, comp2);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = \"\";\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === \"sh\") {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n    return shapeStr;\n  };\n  ITextElement.prototype.updateDocumentData = function (newData, index2) {\n    this.textProperty.updateDocumentData(newData, index2);\n  };\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n    matrixHelper.translate(0, -documentData.ls, 0);\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n  ITextElement.prototype.buildColor = function (colorData) {\n    return \"rgb(\" + Math.round(colorData[0] * 255) + \",\" + Math.round(colorData[1] * 255) + \",\" + Math.round(colorData[2] * 255) + \")\";\n  };\n  ITextElement.prototype.emptyProp = new LetterProps();\n  ITextElement.prototype.destroy = function () {};\n  var emptyShapeData = {\n    shapes: []\n  };\n  function SVGTextLottieElement(data2, globalData2, comp2) {\n    this.textSpans = [];\n    this.renderType = \"svg\";\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS(\"text\");\n    }\n  };\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = \"\";\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = \"\";\n      } else {\n        currentTextContent += textArray[i];\n      }\n      i += 1;\n    }\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n  SVGTextLottieElement.prototype.buildShapeData = function (data2, scale2) {\n    if (data2.shapes && data2.shapes.length) {\n      var shape = data2.shapes[0];\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale2;\n          shapeItem.s.k[1] = scale2;\n        }\n      }\n    }\n    return data2;\n  };\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n    if (documentData.fc) {\n      this.layerElement.setAttribute(\"fill\", this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute(\"fill\", \"rgba(0,0,0,0)\");\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute(\"stroke\", this.buildColor(documentData.sc));\n      this.layerElement.setAttribute(\"stroke-width\", documentData.sw);\n    }\n    this.layerElement.setAttribute(\"font-size\", documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    if (fontData.fClass) {\n      this.layerElement.setAttribute(\"class\", fontData.fClass);\n    } else {\n      this.layerElement.setAttribute(\"font-family\", fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute(\"font-style\", fStyle);\n      this.layerElement.setAttribute(\"font-weight\", fWeight);\n    }\n    this.layerElement.setAttribute(\"aria-label\", documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = \"\";\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = \"start\";\n      switch (documentData.j) {\n        case 1:\n          justify = \"end\";\n          break;\n        case 2:\n          justify = \"middle\";\n          break;\n        default:\n          justify = \"start\";\n          break;\n      }\n      tElement.setAttribute(\"text-anchor\", justify);\n      tElement.setAttribute(\"letter-spacing\", trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS(\"tspan\");\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute(\"x\", 0);\n        tSpan.setAttribute(\"y\", yPos);\n        tSpan.style.display = \"inherit\";\n        tElement.appendChild(tSpan);\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? \"g\" : \"text\");\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute(\"stroke-linecap\", \"butt\");\n            tSpan.setAttribute(\"stroke-linejoin\", \"round\");\n            tSpan.setAttribute(\"stroke-miterlimit\", \"4\");\n            this.textSpans[i].span = tSpan;\n            if (usesGlyphs) {\n              var childSpan = createNS(\"g\");\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n          tSpan.style.display = \"inherit\";\n        }\n        matrixHelper.reset();\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0;\n          xPos += trackingOffset;\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement;\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data2 = emptyShapeData;\n            if (charData.data && charData.data.shapes) {\n              data2 = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n            glyphElement = new SVGShapeElement(data2, this.globalData, this);\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\"transform\", \"scale(\" + documentData.finalSize / 100 + \",\" + documentData.finalSize / 100 + \")\");\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\n          }\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        }\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute(\"d\", shapeStr);\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = \"none\";\n      i += 1;\n    }\n    this._sizeChanged = true;\n  };\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n    return this.bbox;\n  };\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute(\"transform\", renderedLetter.m);\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute(\"opacity\", renderedLetter.o);\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute(\"stroke-width\", renderedLetter.sw);\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute(\"stroke\", renderedLetter.sc);\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute(\"fill\", renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n  function ISolidElement(data2, globalData2, comp2) {\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([IImageElement], ISolidElement);\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", this.data.sw);\n    rect.setAttribute(\"height\", this.data.sh);\n    rect.setAttribute(\"fill\", this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n  function NullElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.initFrame();\n    this.initTransform(data2, globalData2, comp2);\n    this.initHierarchy();\n  }\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n  NullElement.prototype.renderFrame = function () {};\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  NullElement.prototype.destroy = function () {};\n  NullElement.prototype.sourceRectAtTime = function () {};\n  NullElement.prototype.hide = function () {};\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n  function SVGRendererBase() {}\n  extendPrototype([BaseRenderer], SVGRendererBase);\n  SVGRendererBase.prototype.createNull = function (data2) {\n    return new NullElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createShape = function (data2) {\n    return new SVGShapeElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createText = function (data2) {\n    return new SVGTextLottieElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createImage = function (data2) {\n    return new IImageElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createSolid = function (data2) {\n    return new ISolidElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute(\"viewBox\", this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute(\"viewBox\", \"0 0 \" + animData.w + \" \" + animData.h);\n    }\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute(\"width\", animData.w);\n      this.svgElement.setAttribute(\"height\", animData.h);\n      this.svgElement.style.width = \"100%\";\n      this.svgElement.style.height = \"100%\";\n      this.svgElement.style.transform = \"translate3d(0,0,0)\";\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute(\"width\", this.renderConfig.width);\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute(\"height\", this.renderConfig.height);\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute(\"class\", this.renderConfig.className);\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute(\"id\", this.renderConfig.id);\n    }\n    if (this.renderConfig.focusable !== void 0) {\n      this.svgElement.setAttribute(\"focusable\", this.renderConfig.focusable);\n    }\n    this.svgElement.setAttribute(\"preserveAspectRatio\", this.renderConfig.preserveAspectRatio);\n    this.animationItem.wrapper.appendChild(this.svgElement);\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS(\"clipPath\");\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", animData.w);\n    rect.setAttribute(\"height\", animData.h);\n    rect.setAttribute(\"x\", 0);\n    rect.setAttribute(\"y\", 0);\n    var maskId = createElementID();\n    maskElement.setAttribute(\"id\", maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + maskId + \")\");\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n      element.initExpressions();\n    }\n    this.appendElementInPos(element, pos);\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n          i += 1;\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    }\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n    if (!newElement) {\n      return;\n    }\n    var i = 0;\n    var nextElement;\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n      i += 1;\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = \"none\";\n  };\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = \"block\";\n  };\n  function ICompElement() {}\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n  ICompElement.prototype.initElement = function (data2, globalData2, comp2) {\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.initTransform(data2, globalData2, comp2);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    if (this.data.xt || !globalData2.progressiveLoad) {\n      this.buildAllItems();\n    }\n    this.hide();\n  };\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n    var i;\n    var len = this.elements.length;\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n  function SVGCompElement(data2, globalData2, comp2) {\n    this.layers = data2.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data2, globalData2, comp2);\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n  SVGCompElement.prototype.createComp = function (data2) {\n    return new SVGCompElement(data2, this.globalData, this);\n  };\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS(\"svg\");\n    var ariaLabel = \"\";\n    if (config && config.title) {\n      var titleElement = createNS(\"title\");\n      var titleId = createElementID();\n      titleElement.setAttribute(\"id\", titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n    if (config && config.description) {\n      var descElement = createNS(\"desc\");\n      var descId = createElementID();\n      descElement.setAttribute(\"id\", descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += \" \" + descId;\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute(\"aria-labelledby\", ariaLabel);\n    }\n    var defs = createNS(\"defs\");\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS(\"g\");\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || \"\",\n      id: config && config.id || \"\",\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || \"100%\",\n        height: config && config.filterSize && config.filterSize.height || \"100%\",\n        x: config && config.filterSize && config.filterSize.x || \"0%\",\n        y: config && config.filterSize && config.filterSize.y || \"0%\"\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = \"svg\";\n  }\n  extendPrototype([SVGRendererBase], SVGRenderer);\n  SVGRenderer.prototype.createComp = function (data2) {\n    return new SVGCompElement(data2, this.globalData, this);\n  };\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray(\"float32\", len);\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = len;\n  }\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray(\"float32\", newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = newLength;\n  };\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i;\n      var len = transforms.length;\n      var key2 = \"_\";\n      for (i = 0; i < len; i += 1) {\n        key2 += transforms[i].transform.key + \"_\";\n      }\n      var sequence = this.sequences[key2];\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key2] = sequence;\n        this.sequenceList.push(sequence);\n      }\n      return sequence;\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n        i += 1;\n      }\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n      sequence._mdf = _mdf;\n    },\n    processSequences: function (isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1;\n      return \"_\" + this.transform_key_count;\n    }\n  };\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {};\n  function CVMaskElement(data2, element) {\n    this.data = data2;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        hasMasks = true;\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n    this.hasMasks = hasMasks;\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n    var transform2 = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data2;\n    ctx.beginPath();\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n        data2 = this.viewData[i].v;\n        pt = transform2.applyToPointArray(data2.v[0][0], data2.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data2._length;\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[j], data2.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n        pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[0], data2.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n  function CVBaseElement() {}\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects();\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData2 = this.globalData;\n      if (globalData2.blendMode !== this.data.bm) {\n        globalData2.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData2.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n  function CVShapeData(element, data2, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n    if (data2.ty === \"rc\") {\n      ty = 5;\n    } else if (data2.ty === \"el\") {\n      ty = 6;\n    } else if (data2.ty === \"sr\") {\n      ty = 7;\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data2, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n  function CVShapeElement(data2, globalData2, comp2) {\n    this.shapes = [];\n    this.shapesData = data2.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n  CVShapeElement.prototype.createStyleElement = function (data2, transforms) {\n    var styleElem = {\n      data: data2,\n      type: data2.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data2.hd === true\n    };\n    var elementData = {};\n    if (data2.ty === \"fl\" || data2.ty === \"st\") {\n      elementData.c = PropertyFactory.getProp(this, data2.c, 1, 255, this);\n      if (!elementData.c.k) {\n        styleElem.co = \"rgb(\" + bmFloor(elementData.c.v[0]) + \",\" + bmFloor(elementData.c.v[1]) + \",\" + bmFloor(elementData.c.v[2]) + \")\";\n      }\n    } else if (data2.ty === \"gf\" || data2.ty === \"gs\") {\n      elementData.s = PropertyFactory.getProp(this, data2.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data2.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data2.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data2.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data2.g, this);\n    }\n    elementData.o = PropertyFactory.getProp(this, data2.o, 0, 0.01, this);\n    if (data2.ty === \"st\" || data2.ty === \"gs\") {\n      styleElem.lc = lineCapEnum[data2.lc || 2];\n      styleElem.lj = lineJoinEnum[data2.lj || 2];\n      if (data2.lj == 1) {\n        styleElem.ml = data2.ml;\n      }\n      elementData.w = PropertyFactory.getProp(this, data2.w, 0, null, this);\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n      if (data2.d) {\n        var d = new DashProperty(this, data2.d, \"canvas\", this);\n        elementData.d = d;\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem.do = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data2.r === 2 ? \"evenodd\" : \"nonzero\";\n    }\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createTransformElement = function (data2) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data2.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data2, this)\n      }\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createShapeElement = function (data2) {\n    var elementData = new CVShapeData(this, data2, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n  CVShapeElement.prototype.addTransformToStyleList = function (transform2) {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform2);\n      }\n    }\n  };\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type;\n      if (!((type === \"st\" || type === \"gs\") && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n        if (type === \"st\" || type === \"gs\") {\n          ctx.strokeStyle = type === \"st\" ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === \"fl\" ? currentStyle.co : currentStyle.grd;\n        }\n        renderer.ctxOpacity(currentStyle.coOp);\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.beginPath();\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n        for (j = 0; j < jLen; j += 1) {\n          if (type === \"st\" || type === \"gs\") {\n            ctx.beginPath();\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle.do;\n            }\n          }\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === \"m\") {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === \"c\") {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n          if (type === \"st\" || type === \"gs\") {\n            ctx.stroke();\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.fill(currentStyle.r);\n        }\n        renderer.restore();\n      }\n    }\n  };\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data2, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === \"tr\") {\n        groupTransform = data2[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === \"sh\" || items[i].ty === \"el\" || items[i].ty === \"rc\" || items[i].ty === \"sr\") {\n        this.renderPath(items[i], data2[i]);\n      } else if (items[i].ty === \"fl\") {\n        this.renderFill(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"st\") {\n        this.renderStroke(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"gf\" || items[i].ty === \"gs\") {\n        this.renderGradientFill(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"gr\") {\n        this.renderShape(groupTransform, items[i].it, data2[i].it);\n      } else if (items[i].ty === \"tm\") ;\n    }\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: \"m\",\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: \"m\",\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: \"z\"\n            });\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n        grd.addColorStop(cValues[i * 4] / 100, \"rgba(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \",\" + opacity + \")\");\n      }\n      styleElem.grd = grd;\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem.do = d.dashoffset[0];\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n  function CVTextElement(data2, globalData2, comp2) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = \"canvas\";\n    this.values = {\n      fill: \"rgba(0,0,0,0)\",\n      stroke: \"rgba(0,0,0,0)\",\n      sWidth: 0,\n      fValue: \"\"\n    };\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag(\"canvas\").getContext(\"2d\");\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = \"rgba(0,0,0,0)\";\n    }\n    this.fill = hasFill;\n    var hasStroke = false;\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + \"px \" + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length;\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === \"sh\") {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n      cnt += 1;\n    }\n  };\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 4;\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill();\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke();\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n  function CVImageElement(data2, globalData2, comp2) {\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.img = globalData2.imageLoader.getAsset(this.assetData);\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag(\"canvas\");\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext(\"2d\");\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n      if (imgRel > canvasRel && par === \"xMidYMid slice\" || imgRel < canvasRel && par !== \"xMidYMid slice\") {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n  function CVSolidElement(data2, globalData2, comp2) {\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\n  };\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n  CanvasRendererBase.prototype.createShape = function (data2) {\n    return new CVShapeElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createText = function (data2) {\n    return new CVTextElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createImage = function (data2) {\n    return new CVImageElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createSolid = function (data2) {\n    return new CVSolidElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n    this.contextData.cO *= op < 0 ? 0 : op;\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    this.contextData.reset();\n  };\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n    var props = this.contextData.cTr.props;\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = \"source-over\";\n    }\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag(\"canvas\");\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = \"100%\";\n      containerStyle.height = \"100%\";\n      var origin = \"0px 0px 0px\";\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle[\"-webkit-transform\"] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext(\"2d\");\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute(\"class\", this.renderConfig.className);\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute(\"id\", this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute(\"width\", elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute(\"height\", elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n    var elementRel;\n    var animationRel;\n    if (this.renderConfig.preserveAspectRatio.indexOf(\"meet\") !== -1 || this.renderConfig.preserveAspectRatio.indexOf(\"slice\") !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(\" \");\n      var fillType = par[1] || \"meet\";\n      var pos = par[0] || \"xMidYMid\";\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n      if (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\") {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n      if (xPos === \"xMid\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === \"xMax\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n      if (yPos === \"YMid\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === \"YMax\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === \"none\") {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n  };\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = \"none\";\n  };\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = \"block\";\n  };\n  function CVCompElement(data2, globalData2, comp2) {\n    this.completeLayers = false;\n    this.layers = data2.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data2, globalData2, comp2);\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.layers = null;\n    this.elements = null;\n  };\n  CVCompElement.prototype.createComp = function (data2) {\n    return new CVCompElement(data2, this.globalData, this);\n  };\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n  CanvasRenderer.prototype.createComp = function (data2) {\n    return new CVCompElement(data2, this.globalData, this);\n  };\n  registerRenderer(\"canvas\", CanvasRenderer);\n  ShapeModifiers.registerModifier(\"tm\", TrimModifier);\n  ShapeModifiers.registerModifier(\"pb\", PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier(\"rp\", RepeaterModifier);\n  ShapeModifiers.registerModifier(\"rd\", RoundCornersModifier);\n  const Expressions = function () {\n    var ob2 = {};\n    ob2.initExpressions = initExpressions;\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n      function pushExpression() {\n        stackCount += 1;\n      }\n      function popExpression() {\n        stackCount -= 1;\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n        registers.length = 0;\n      }\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n    return ob2;\n  }();\n  function seedRandom(pool, math) {\n    var global = this,\n      width2 = 256,\n      chunks = 6,\n      digits = 52,\n      rngname = \"random\",\n      startdenom = math.pow(width2, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask2 = width2 - 1,\n      nodecrypto;\n    function seedrandom(seed, options, callback) {\n      var key2 = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {};\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key2);\n      var arc4 = new ARC4(key2);\n      var prng = function () {\n        var n = arc4.g(chunks),\n          d = startdenom,\n          x = 0;\n        while (n < significance) {\n          n = (n + x) * width2;\n          d *= width2;\n          x = arc4.g(1);\n        }\n        while (n >= overflow) {\n          n /= 2;\n          d /= 2;\n          x >>>= 1;\n        }\n        return (n + x) / d;\n      };\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n      prng.quick = function () {\n        return arc4.g(4) / 4294967296;\n      };\n      prng.double = prng;\n      mixkey(tostring(arc4.S), pool);\n      return (options.pass || callback || function (prng2, seed2, is_math_call, state) {\n        if (state) {\n          if (state.S) {\n            copy(state, arc4);\n          }\n          prng2.state = function () {\n            return copy(arc4, {});\n          };\n        }\n        if (is_math_call) {\n          math[rngname] = prng2;\n          return seed2;\n        } else return prng2;\n      })(prng, shortseed, \"global\" in options ? options.global : this == math, options.state);\n    }\n    math[\"seed\" + rngname] = seedrandom;\n    function ARC4(key2) {\n      var t,\n        keylen = key2.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = [];\n      if (!keylen) {\n        key2 = [keylen++];\n      }\n      while (i < width2) {\n        s[i] = i++;\n      }\n      for (i = 0; i < width2; i++) {\n        s[i] = s[j = mask2 & j + key2[i % keylen] + (t = s[i])];\n        s[j] = t;\n      }\n      me.g = function (count) {\n        var t2,\n          r = 0,\n          i2 = me.i,\n          j2 = me.j,\n          s2 = me.S;\n        while (count--) {\n          t2 = s2[i2 = mask2 & i2 + 1];\n          r = r * width2 + s2[mask2 & (s2[i2] = s2[j2 = mask2 & j2 + t2]) + (s2[j2] = t2)];\n        }\n        me.i = i2;\n        me.j = j2;\n        return r;\n      };\n    }\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    }\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop;\n      if (depth && typ == \"object\") {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == \"string\" ? obj : obj + \"\\0\";\n    }\n    function mixkey(seed, key2) {\n      var stringseed = seed + \"\",\n        smear,\n        j = 0;\n      while (j < stringseed.length) {\n        key2[mask2 & j] = mask2 & (smear ^= key2[mask2 & j] * 19) + stringseed.charCodeAt(j++);\n      }\n      return tostring(key2);\n    }\n    function autoseed() {\n      try {\n        if (nodecrypto) ;\n        var out = new Uint8Array(width2);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins;\n        return [+ /* @__PURE__ */new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    }\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    }\n    mixkey(math.random(), pool);\n  }\n  function initialize$2(BMMath2) {\n    seedRandom([], BMMath2);\n  }\n  var propTypes = {\n    SHAPE: \"shape\"\n  };\n  const ExpressionManager = function () {\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n    function isNumerable(tOfV, v) {\n      return tOfV === \"number\" || tOfV === \"boolean\" || tOfV === \"string\" || v instanceof Number;\n    }\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n      if (tOfA === \"number\" || tOfA === \"boolean\" || a instanceof Number) {\n        return -a;\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n        return retArr;\n      }\n      if (a.propType) {\n        return a.v;\n      }\n      return -a;\n    }\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, \"easeIn\").get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, \"easeOut\").get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, \"easeInOut\").get;\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (tOfA === \"string\" || tOfB === \"string\") {\n        return a + b;\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    var add = sum;\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === \"string\") {\n          a = parseInt(a, 10);\n        }\n        if (tOfB === \"string\") {\n          b = parseInt(b, 10);\n        }\n        return a - b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function mod(a, b) {\n      if (typeof a === \"string\") {\n        a = parseInt(a, 10);\n      }\n      if (typeof b === \"string\") {\n        b = parseInt(b, 10);\n      }\n      return a % b;\n    }\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n      return Math.min(Math.max(num, min), max);\n    }\n    function radiansToDegrees(val2) {\n      return val2 / degToRads;\n    }\n    var radians_to_degrees = radiansToDegrees;\n    function degreesToRadians(val2) {\n      return val2 * degToRads;\n    }\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n    function length(arr1, arr2) {\n      if (typeof arr1 === \"number\" || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n      return Math.sqrt(addedLength);\n    }\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n    function rgbToHsl(val2) {\n      var r = val2[0];\n      var g = val2[1];\n      var b = val2[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n      if (max === min) {\n        h = 0;\n        s = 0;\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return [h, s, l, val2[3]];\n    }\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    function hslToRgb(val2) {\n      var h = val2[0];\n      var s = val2[1];\n      var l = val2[2];\n      var r;\n      var g;\n      var b;\n      if (s === 0) {\n        r = l;\n        b = l;\n        g = l;\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n      return [r, g, b, val2[3]];\n    }\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === void 0 || value2 === void 0) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n      if (t <= tMin) {\n        return value1;\n      }\n      if (t >= tMax) {\n        return value2;\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n      return arr;\n    }\n    function random(min, max) {\n      if (max === void 0) {\n        if (min === void 0) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = void 0;\n        }\n      }\n      if (max.length) {\n        var i;\n        var len = max.length;\n        if (!min) {\n          min = createTypedArray(\"float32\", len);\n        }\n        var arr = createTypedArray(\"float32\", len);\n        var rnd = BMMath.random();\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n        return arr;\n      }\n      if (min === void 0) {\n        min = 0;\n      }\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n      return path;\n    }\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n      var _needsRandom = val.indexOf(\"random\") !== -1;\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, \"value\", {\n        get: function () {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt;\n      var expression_function = eval(\"[function _expression_function(){\" + val + \";scoped_bm_rt=$bm_rt}]\")[0];\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n      var wiggle = function wiggle2(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray(\"float32\", lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n        while (iWiggle < iterations) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random();\n          }\n          iWiggle += 1;\n        }\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray(\"float32\", lenWiggle);\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc;\n          }\n          return arr;\n        }\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === void 0) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n        var mult = fn(t);\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray(\"float32\", lenKey);\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n          return arr;\n        }\n        return (val2 - val1) * mult + val1;\n      }\n      function nearestKey(time2) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index2;\n        var keyTime;\n        if (!data.k.length || typeof data.k[0] === \"number\") {\n          index2 = 0;\n          keyTime = 0;\n        } else {\n          index2 = -1;\n          time2 *= elem.comp.globalData.frameRate;\n          if (time2 < data.k[0].t) {\n            index2 = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time2 === data.k[iKey].t) {\n                index2 = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time2 > data.k[iKey].t && time2 < data.k[iKey + 1].t) {\n                if (time2 - data.k[iKey].t > data.k[iKey + 1].t - time2) {\n                  index2 = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index2 = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n                break;\n              }\n            }\n            if (index2 === -1) {\n              index2 = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n        var obKey = {};\n        obKey.index = index2;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n        if (!data.k.length || typeof data.k[0] === \"number\") {\n          throw new Error(\"The property has no keyframe at index \" + ind);\n        }\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], \"s\") ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n        return obKey;\n      }\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n        return fr / fps;\n      }\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n        return t * fps;\n      }\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n      function substring(init, end) {\n        if (typeof value === \"string\") {\n          if (end === void 0) {\n            return value.substring(init);\n          }\n          return value.substring(init, end);\n        }\n        return \"\";\n      }\n      function substr(init, end) {\n        if (typeof value === \"string\") {\n          if (end === void 0) {\n            return value.substr(init);\n          }\n          return value.substr(init, end);\n        }\n        return \"\";\n      }\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1e6);\n      var globalData = elem.globalData;\n      function executeExpression(_value) {\n        value = _value;\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== \"textSelector\") {\n          return value;\n        }\n        if (this.propType === \"textSelector\") {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n        if (!transform) {\n          transform = elem.layerInterface(\"ADBE Transform Group\");\n          $bm_transform = transform;\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n          }\n        }\n        if (elemType === 4 && !content) {\n          content = thisLayer(\"ADBE Root Vectors Group\");\n        }\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId;\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      }\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n  const expressionHelpers = function () {\n    function searchExpressions(elem2, data2, prop) {\n      if (data2.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem2, data2, prop).bind(prop));\n      }\n    }\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n      return this._cachingAtTime.value;\n    }\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n      if (v1.length) {\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n      return speed;\n    }\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== void 0) {\n        return this.vel;\n      }\n      var delta = -1e-3;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity2;\n      if (v1.length) {\n        velocity2 = createTypedArray(\"float32\", v1.length);\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          velocity2[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity2 = (v2 - v1) / delta;\n      }\n      return velocity2;\n    }\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n    return {\n      searchExpressions,\n      getSpeedAtTime,\n      getVelocityAtTime,\n      getValueAtTime,\n      getStaticValueAtTime,\n      setGroupProperty\n    };\n  }();\n  function addPropertyDecorator() {\n    function loopOut2(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var firstKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n          return ret;\n        }\n        return (endV - initV) * repeats + current;\n      } else if (type === \"continue\") {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 5e-4;\n          }\n          return ret;\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 1e-3);\n      }\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n    }\n    function loopIn2(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var lastKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n          return ret;\n        }\n        return current - (endV - initV) * repeats;\n      } else if (type === \"continue\") {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 1e-3;\n          }\n          return ret;\n        }\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 1e-3;\n      }\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0);\n    }\n    function smooth2(width2, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n      width2 = (width2 || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n      if (samples <= 1) {\n        return this.pv;\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width2;\n      var endFrame = currentTime + width2;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value2;\n      if (this.pv.length) {\n        value2 = createTypedArray(\"float32\", this.pv.length);\n      } else {\n        value2 = 0;\n      }\n      var sampleValue;\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value2[j] += sampleValue[j];\n          }\n        } else {\n          value2 += sampleValue;\n        }\n        i += 1;\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value2[j] /= samples;\n        }\n      } else {\n        value2 /= samples;\n      }\n      return value2;\n    }\n    function getTransformValueAtTime(time2) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      }\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time2);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n      if (this.appliedTransformations < 2) {\n        var scale2 = this.s.getValueAtTime(time2);\n        matrix.scale(scale2[0] * this.s.mult, scale2[1] * this.s.mult, scale2[2] * this.s.mult);\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time2);\n        var skewAxis = this.sa.getValueAtTime(time2);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation2 = this.r.getValueAtTime(time2);\n        matrix.rotate(-rotation2 * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time2);\n        var rotationY = this.ry.getValueAtTime(time2);\n        var rotationX = this.rx.getValueAtTime(time2);\n        var orientation = this.or.getValueAtTime(time2);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time2);\n        var positionY = this.py.getValueAtTime(time2);\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time2);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position2 = this.p.getValueAtTime(time2);\n        matrix.translate(position2[0] * this.p.mult, position2[1] * this.p.mult, -position2[2] * this.p.mult);\n      }\n      return matrix;\n    }\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n    TransformPropertyFactory.getTransformProperty = function (elem2, data2, container) {\n      var prop = getTransformProperty(elem2, data2, container);\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n    var propertyGetProp = PropertyFactory.getProp;\n    PropertyFactory.getProp = function (elem2, data2, type, mult, container) {\n      var prop = propertyGetProp(elem2, data2, type, mult, container);\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut2;\n      prop.loopIn = loopIn2;\n      prop.smooth = smooth2;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data2.a === 1 ? data2.k.length : 0;\n      prop.propertyIndex = data2.ix;\n      var value2 = 0;\n      if (type !== 0) {\n        value2 = createTypedArray(\"float32\", data2.a === 1 ? data2.k[0].s.length : data2.k.length);\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value2\n      };\n      expressionHelpers.searchExpressions(elem2, data2, prop);\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n    function getShapeValueAtTime(frameNum) {\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n      return this._cachingAtTime.shapeValue;\n    }\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time2) {\n        if (this.k) {\n          this.getValue();\n        }\n        var shapePath = this.v;\n        if (time2 !== void 0) {\n          shapePath = this.getValueAtTime(time2, 0);\n        }\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n        for (i = 0; i < len; i += 1) {\n          if (prop === \"i\" || prop === \"o\") {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n        return arr;\n      },\n      points: function (time2) {\n        return this.vertices(\"v\", time2);\n      },\n      inTangents: function (time2) {\n        return this.vertices(\"i\", time2);\n      },\n      outTangents: function (time2) {\n        return this.vertices(\"o\", time2);\n      },\n      isClosed: function () {\n        return this.v.c;\n      },\n      pointOnPath: function (perc, time2) {\n        var shapePath = this.v;\n        if (time2 !== void 0) {\n          shapePath = this.getValueAtTime(time2, 0);\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n          i += 1;\n        }\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n        return pt;\n      },\n      vectorOnPath: function (perc, time2, vectorType) {\n        if (perc == 1) {\n          perc = this.v.c;\n        } else if (perc == 0) {\n          perc = 0.999;\n        }\n        var pt1 = this.pointOnPath(perc, time2);\n        var pt2 = this.pointOnPath(perc + 1e-3, time2);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n        var unitVector = vectorType === \"tangent\" ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function (perc, time2) {\n        return this.vectorOnPath(perc, time2, \"tangent\");\n      },\n      normalOnPath: function (perc, time2) {\n        return this.vectorOnPath(perc, time2, \"normal\");\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n    ShapePropertyFactory.getShapeProp = function (elem2, data2, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem2, data2, type, arr, trims);\n      prop.propertyIndex = data2.ix;\n      prop.lock = false;\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem2, data2.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem2, data2.ks, prop);\n      }\n      if (prop.k) {\n        elem2.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n  }\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n      return null;\n    }\n    TextProperty.prototype.getExpressionValue = function (currentValue, text2) {\n      var newValue = this.calculateExpression(text2);\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n      return currentValue;\n    };\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n  function initialize() {\n    addDecorator();\n  }\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize();\n  return lottie;\n})();\nexport { lottie as default };","map":{"version":3,"names":["lottie","navigator","document","svgNS","locationHref","_useWebWorker","initialDefaultFrame","setWebWorker","flag","getWebWorker","setLocationHref","value2","getLocationHref","createTag","type","createElement","extendPrototype","sources","destination","i","len","length","sourcePrototype","prototype","attr","Object","hasOwnProperty","call","getDescriptor","object","prop","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","audioControllerFactory","AudioController","audioFactory","audios","_volume","_isMuted","addAudio","audio","push","pause","resume","setRate","rateValue","createAudio","assetPath","window","Howl","src","isPlaying","play","seek","playing","rate","setVolume","setAudioFactory","_updateVolume","mute","unmute","getVolume","volume","createTypedArray","createRegularArray","arr","createTypedArrayFactory","Float32Array","Int16Array","Uint8ClampedArray","createSizedArray","Array","apply","subframeEnabled","expressionsPlugin","idPrefix$1","isSafari","test","userAgent","bmPow","Math","pow","bmSqrt","sqrt","bmFloor","floor","bmMin","min","BMMath","propertyNames","random","abs","val2","tOfVal","absArr","defaultCurveSegments","degToRads","PI","roundCorner","BMEnterFrameEvent","currentTime","totalTime","frameMultiplier","direction","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","firstFrame","totalFrames","BMDestroyEvent","target","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","createElementID","_count","createID","HSVtoRGB","h","s","v","r","g","b","f","p","q","t","RGBtoHSV","max","d","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","colorMap","hex","toString","setSubframeEnabled","getSubframeEnabled","setExpressionsPlugin","getExpressionsPlugin","setDefaultCurveSegments","getDefaultCurveSegments","setIdPrefix","createNS","createElementNS","dataManager","_counterId","processes","workerFn","workerInstance","workerProxy","onmessage","postMessage","path","data","_workerSelf","data2","createWorker","fn","Worker","Blob","blob","url","URL","createObjectURL","setupWorker","workerStart","e","dataFunctionManager","completeLayers","layers","comps","layerData","j","jLen","k","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","completeChars","chars","assets","findComp","id","comp2","__used","JSON","parse","stringify","ks","it","o","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","animationData","checkChars","charData","ip","op","st","sr","a","sk","sa","checkPathProperties","pathData","checkColors","iterateShapes","c","checkShapes","completeClosingShapes","closed","cl","completeData","__complete","moduleOb","assetLoader","formatResponse","xhr","contentTypeHeader","getResponseHeader","responseType","indexOf","response","responseText","loadAsset","fullPath","callback","errorCallback","XMLHttpRequest","err","onreadystatechange","readyState","status","open","error","send","load","payload","animation","event","process","onComplete","onError","createProcess","loadAnimation2","processId","location","origin","pathname","loadData","completeAnimation","anim","loadAnimation","ImagePreloader","proxyImage","canvas","width","height","ctx","getContext","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","loadedFootagesCount","totalFootages","imagesLoadedCb","footageLoaded","getAssetsPath","assetData","assetsPath","originalPath","imagePath","u","testImageLoaded","img","intervalId","setInterval","box","getBBox","_imageLoaded","clearInterval","bind","createImageData","addEventListener","ob2","setAttributeNS","_elementHelper","append","appendChild","createImgData","crossOrigin","createFootageData","footageData","_footageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getAsset","destroy","loadedImages","loadedFootages","setCacheType","elementHelper","ImagePreloaderFactory","BaseEvent","triggerEvent","eventName","args","_cbs","callbacks","removeEventListener","splice","markerParser","parsePayloadLines","lines","keys","line","keysCount","trim","Error","_markers","markers","_marker","markerData","time","tm","duration","dr","cm","_","__","name","ProjectInterface","registerComposition","compositions","_thisProjectFunction","name2","nm","prepareFrame","xt","currentFrame","compInterface","renderers","registerRenderer","key2","getRenderer","AnimationItem","isLoaded","currentRawFrame","frameRate","frameMult","playSpeed","playDirection","playCount","isPaused","autoplay","loop","renderer","animationID","timeCompleted","segmentPos","isSubframeEnabled","segments","_idle","_completedLoop","projectInterface","imagePreloader","audioController","configAnimation","onSetupError","onSegmentComplete","drawnFrameEvent","setParams","params","wrapper","container","animType","RendererClass","rendererSettings","globalData","defs","setProjectInterface","parseInt","autoloadSegments","initialSegment","setupAnimation","lastIndexOf","substr","fileName","trigger","setData","wrapperAttributes","attributes","getNamedItem","value","prerender","includeLayers","newLayers","fonts","fontManager","addChars","addFonts","expressionsPlugin2","initExpressions","loadNextSegment","segment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","animData","round","fr","searchExtraCompositions","updaFrameModifier","waitForFontsLoaded","triggerConfigError","setTimeout","rendererType","initItems","gotoFrame","resize","updateContainerSize","setSubframe","renderFrame","triggerRenderFrameError","togglePause","stop","setCurrentRawFrameValue","getMarkerData","markerName","marker","goToAndStop","isFrame","numValue","Number","isNaN","frameModifier","goToAndPlay","playSegments","advanceTime","nextValue","_isComplete","checkSegments","adjustSegment","setSpeed","setDirection","setSegment","init","end","pendingFrame","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onSegmentStart","onDestroy","getPath","getAssetData","hide","show","getDuration","updateDocumentData","index2","element","getElementByPath","animationManager","registeredAnimations","initTime","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","subtractPlayingCount","registerAnimation","elem","getRegisteredAnimations","lenAnims","animations","addPlayingCount","activate","nowTime","elapsedTime","requestAnimationFrame","first","searchAnimations2","standalone","animElements","concat","slice","getElementsByClassName","setAttribute","body","getElementsByTagName","innerText","div2","style","freeze","unfreeze","searchAnimations","BezierFactory","getBezierEasing","beziers","str","replace","bezEasing","BezierEasing","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonRaphsonIterate","aGuessT","currentSlope","points","_p","_mSampleValues","_precomputed","get","x","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","pooling","double","poolFactory","initialLength","_create","_release","_length","_maxLength","pool","newElement","release","bezierLengthPool","create","addedLength","percents","lengths","segmentsLengthPool","totalLength","bezFunction","math","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","dist1","dist2","dist3","diffDist","getBezierLength","pt1","pt2","pt3","pt4","curveSegments","ptCoord","perc","ptDistance","point","lastPoint","lengthData","getSegmentsLength","shapeData","segmentsLength","pathV","pathO","pathI","BezierData","length2","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","getPointInSegment","percent","t1","u1","ptX","ptY","bezierSegmentPoints","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bez","PropertyFactory","initFrame","mathAbs","interpolateValue","frameNum","caching","offsetTime","newValue","propType","pv","iterationIndex","lastIndex","keyframes","keyData","nextKeyData","keyframeMetadata","keyframesMetadata","fnc","nextKeyTime","keyTime","endValue","to","ti","ind","__fnct","y","n","distanceInLine","segmentPerc","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","time2","quaternionToEuler","slerp","constructor","out","ax","ay","az","aw","bx","by","bz","bw","omega","cosom","sinom","scale0","scale1","acos","sin","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","values","c1","cos","c2","c3","s1","s2","s3","w","z","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","_mdf","processEffectsSequence","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","addDynamicProperty","ValueProperty","elem2","vel","getValue","MultiDimensionalProperty","KeyframedValueProperty","KeyframedMultidimensionalProperty","arrLen","getProp","DynamicPropertyContainer","dynamicProperties","_isAnimated","iterateDynamicProperties","initDynamicPropertyContainer","pointPool","ShapePath","setPathData","setLength","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","shapePool","shapePath","clone","shape","cloned","factory","ShapeCollection","addShape","releaseShapes","shapeCollectionPool","newShapeCollection","shapeCollection","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","paths","localShapeCollection","shapesEqual","shape1","shape2","ShapeProperty","reset","KeyframedShapeProperty","EllShapeProperty","cPoint","EllShapePropertyFactory","convertEllToPath","p0","p1","s0","_cw","_v","StarShapeProperty","StarShapePropertyFactory","sy","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","or","os","numPts","angle","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","rad","roundness","perimSegment","currentAng","ox","oy","RectShapeProperty","RectShapePropertyFactory","convertRectToPath","v0","v1","getShapeProp","dataProp","getConstructorFunction","getKeyframedConstructorFunction","Matrix","_cos","_sin","_tan","tan","_rnd","props","rotate","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","skew","skewFromAxis","scale2","sz","setTransform","l","m","translate","tx","tz","transform2","a2","b2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","isIdentity","_identity","equals","matr","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_a","_b","_c","_d","_e","_f","scale","transform","setLocation","href","setSubframeRendering","setPrefix","prefix","setQuality","inBrowser","installPlugin","plugin","getFactory","useWebWorker","setIDPrefix","__getFactory","version","checkReady","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","scripts","index","myScript","exports","module","define","amd","bodymovin","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","initModifierProperties","addShapeToModifier","setAsAnimated","processKeys","TrimModifier","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","shapeSegments","segmentOb","shapeS","shapeE","releasePathsData","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","PuckerAndBloatModifier","amount","processPath","centerPoint","pathLength","clonedPath","TransformPropertyFactory","defaultVector","applyToMatrix","mat","rz","ry","rx","px","py","pz","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","v2","getValueAtTime","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","RepeaterModifier","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","hasReloaded","copies","ceil","group","ix","reloadShapes","elems","transformData","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","RoundCornersModifier","rd","currentV","currentI","currentO","closerV","distance","newPosPerc","getFontProperties","fontData","styles","fStyle","fWeight","styleName","toLowerCase","weight","FontManager","maxWaitingTime","emptyChar","size","combinedCharacters","surrogateModifiers","zeroWidthJoiner","trimFontOptions","font","familyArray","enabledFamilies","join","setUpNode","family","parentNode","fontFamily","node","position","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","width2","offsetWidth","parent","checkLoadedFonts","loadedCount","loaded","fOrigin","monoCase","sansCase","removeChild","Date","now","checkLoadedFontsBinded","setIsLoadedBinded","createHelper","def","engine","helper","fontProps","tHelper","fFamily","textContent","fClass","tCanvasHelper","OffscreenCanvas","measure","text2","getComputedTextLength","measureText","list","forEach","cache","fontArr","_pendingFonts","shouldLoadFont","loadedSelector","fPath","querySelectorAll","rel","sc","found","ch","getCharData","char","charCodeAt","console","warn","_warned","fontName","getFontByName","doubleSize","singleSize","fName","isModifier","firstCharCode","secondCharCode","sum2","isZeroWidthJoiner","isCombinedCharacter","setIsLoaded","Font","typekitLoaded","fontPrototype","RenderableElement","initRenderable","isInRange","hidden","isTransparent","renderableComponents","addRenderableComponent","component","removeRenderableComponent","prepareRenderableFrame","num","checkLayerLimits","checkTransparency","finalTransform","mProp","renderConfig","hideOnTransparent","renderRenderable","sourceRectAtTime","getLayerSize","textData","MaskManagerInterface","MaskInterface","mask2","_mask","_data","defineProperty","MaskManager","maskManager","_masksInterfaces","viewData","maskFunction","ExpressionPropertyInterface","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","property2","getVelocityAtTime","numKeys","key","valueProp","assign","valueAtTime","speedAtTime","getSpeedAtTime","velocityAtTime","propertyGroup","UnidimensionalPropertyInterface","MultidimensionalPropertyInterface","arrValue","defaultGetter","TransformExpressionInterface","_thisFunction","rotation","xRotation","yRotation","xPosition","yPosition","zPosition","anchorPoint","opacity","_px","_py","_pz","_transformFactory","LayerExpressionInterface","getMatrix","toWorldMat","propMatrix","_elem","transformMat","toWorldVec","applyPoint","toWorld2","fromWorldVec","invertPoint","fromWorld2","hierarchy","fromComp2","sampleImage","transformInterface","_registerMaskInterface","_thisLayerFunction","mask","_registerEffectsInterface","effects","effect","shapeInterface","textInterface","toWorld","fromWorld","toComp","fromComp","anchorPointDescriptor","defineProperties","hasParent","layerInterface","anchor_point","active","startTime","source","inPoint","outPoint","_name","registerMaskInterface","registerEffectsInterface","propertyGroupFactory","interfaceFunction","parentPropertyGroup","PropertyInterface","propertyName","_propertyGroup","EffectsExpressionInterface","createEffectsInterface","effectsManager","effectElements","effectsData","ef","createGroupInterface","groupInterface","mn","len2","createValueInterface","numProperties","np","enabled","en","expressionProperty","setGroupProperty","CompExpressionInterface","layer","pixelAspect","compSize","frameDuration","displayStartTime","numLayers","ShapePathInterface","pathInterfaceFactory","view","propertyIndex","ShapeExpressionInterface","iterateElements","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","gradientFillInterfaceFactory","defaultInterfaceFactory","contentsInterfaceFactory","interfaces","_interfaceFunction","transformInterfaceFactory","cix","content","content2","startPoint","endPoint","_dashPropertyGroup","dashOb","addPropertyToDashOb","dataProps","strokeWidth","dash","start","skewAxis","outerRadius","outerRoundness","innerRadius","innerRoundness","radius","parentGroupWrapper","TextExpressionInterface","_prevValue","_sourceText","sourceText","textProperty","stringValue","currentData","String","getBlendMode","blendModeEnums","mode","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effectItem","GroupEffect","eff","BaseElement","checkMasks","effectsInterface","shapesData","itemsData","text","setBlendMode","blendModeValue","bm","baseElement","layerElement","initBaseData","globalData2","layerId","getType","FrameElement","prepareProperties","isVisible","_isParent","FootageInterface","outlineInterfaceFactory","currentPropertyName","currentProperty","getFootageData","searchProperty","propertyNameIndex","dataInterfaceFactory","outlineInterface","dataInterface","FootageElement","imageLoader","getBaseElement","AudioElement","_isPlaying","_canPlay","_currentTime","_volumeMultiplier","_previousVolume","_placeholder","lv","au","timeRemapped","totalVolume","volumeValue","BaseRenderer","checkLayers","buildItem","checkPendingElements","createItem","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","createFootage","buildAllItems","pInterface","progressiveLoad","buildElementParenting","parentName","addPendingElement","setAsParent","setHierarchy","pendingElements","pathValue","setupGlobalData","fontsContainer","animationItem","TransformElement","initTransform","_matMdf","_opMdf","ao","renderTransform","finalMat","globalToLocal","transforms","ptNew","mHelper","MaskElement","maskElement","solidPath","properties","count","currentMasks","rect","expansor","feMorph","maskType","maskRef","lastPath","filterID","expan","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","getMaskProperty","isFirstFrame","getMaskelement","pathNodes","pathString","pathShapeValue","filtersFactory","createFilter","createAlphaToLuminanceFilter","filId","skipCoordinates","fil","feColorMatrix","featureSupport","registeredEffects","idPrefix","SVGEffects","filters","filterManager","Effect","countsAsEffect","SVGBaseElement","initRendererElement","createContainerElements","matteElement","transformedElement","_sizeChanged","layerElementParent","gg","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","hd","cp","clipId","cpGroup","renderElement","destroyBaseElement","createRenderableComponents","renderableEffectsManager","setMatte","HierarchyElement","initHierarchy","checkParenting","RenderableDOMElement","_prototype","initElement","createContent","display","renderInnerContent","innerElem","IImageElement","sourceRect","pr","imagePreserveAspectRatio","ProcessedElement","position2","IShapeElement","addShapeToModifiers","shapeModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","shouldBreakProcess","searchProcessedElement","processedElements","addProcessedElement","lineCapEnum","lineJoinEnum","SVGShapeData","transformers","level","caches","lStr","lvl","SVGStyleData","pElem","msElem","DashProperty","dashStr","dashArray","dashoffset","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGNoStyleData","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","comparePoints","diff","SVGGradientFillStyleData","initGradientData","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","maskId","opFill","lc","lj","ml","of","ms","ost","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","SVGTransformData","buildShapeString","_o","_i","shapeString","SVGElementsRenderer","_identityMatrix","_matrixHelper","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","renderNoop","styleData","itemData","pathStringTransformed","redraw","lLen","iterations","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","SVGShapeElement","stylesList","animatedContents","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","GradientConstructor","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","setElementStyles","render","ownStyles","ownModifiers","currentTransform","modifier","processedPos","renderShape","animatedContent","LetterProps","sw","fc","update","updated","TextProperty","_frameId","keysIndex","canResize","minimumFontSize","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","completeTextData","obj","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","charactersArray","charCode","shouldCombine","charAt","letters","newLineFlag","anchorGrouping","currentSize","currentPos","currentLine","lineWidth","maxLineWidth","trackingOffset","boxHeight","currentHeight","lastSpaceIndex","uncollapsedSpaces","currentChar","an","add","anIndexes","val","animatorJustifyOffset","extra","animators","animatorData","letterData","based","indexes","fh","fs","fb","rn","totalChars","currentInd","newInd","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","TextSelectorProp","TextSelectorPropFactory","_currentTextLength","finalS","finalE","xe","ne","sm","getMult","easer","tot","smoothness","threshold","newCharsFlag","divisor","getTextSelectorProp","TextAnimatorDataProperty","animatorProps","defaultData","textAnimatorAnimatables","TextAnimatorProperty","renderType","_hasMaskedPath","_textData","_renderType","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","searchProperties","getMeasures","matrixHelper","renderedLettersCount","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","tLength","pi","yOff","firstLine","animatorSelector","letterValue","offf","xPathPos","yPathPos","initPathPos","initSegmentInd","initPointInd","elemOpacity","letterSw","letterSc","letterFc","letterM","letterP","defaultPropsArray","letterO","animatorFirstCharOffset","justifyOffsetMult","isNewLine","animatorOffset","rot","atan","ITextElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","emptyShapeData","SVGTextLottieElement","textSpans","singleShape","textContainer","buildTextContents","textArray","textContents","currentTextContent","fromCharCode","buildShapeData","shapeItem","usesGlyphs","tSpan","tElement","justify","span","glyph","cachedSpansLength","childSpan","glyphElement","SVGCompElement","_debug","textBox","bbox","renderedLetter","textSpan","ISolidElement","NullElement","SVGRendererBase","svgElement","viewBoxSize","viewBoxOnly","contentVisibility","className","focusable","preserveAspectRatio","destroyed","appendElementInPos","nextElement","insertBefore","ICompElement","setElements","getElements","destroyElements","supports3d","SVGRenderer","config","ariaLabel","title","titleElement","titleId","description","descElement","descId","filterSize","CVContextData","saved","cArrPos","cTr","cO","savedOp","duplicate","newLength","currentSavedOp","set","ShapeTransformManager","sequences","sequenceList","transform_key_count","addTransformSequence","sequence","processSequence","processSequences","getNewKey","CVEffects","CVMaskElement","hasMasks","canvasContext","beginPath","moveTo","lineTo","bezierCurveTo","save","clip","CVBaseElement","createElements","blendMode","globalCompositeOperation","hideElement","showElement","forceRealStack","ctxTransform","ctxOpacity","restore","CVShapeData","transformsManager","styledShapes","styledShape","trNodes","CVShapeElement","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","currentGlobalAlpha","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","closePath","stroke","fill","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","CVTextElement","currentRender","sWidth","fValue","hasFill","hasStroke","commands","pathArr","commandsCounter","lastFill","lastStroke","lastStrokeW","CVImageElement","imgW","imgH","imgRel","canvasRel","widthCrop","heightCrop","par","drawImage","CVSolidElement","CanvasRendererBase","clearCanvas","context","dpr","devicePixelRatio","contextData","cProps","trProps","globalAlpha","actionFlag","popped","containerStyle","transformOrigin","mozTransformOrigin","webkitTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","offsetHeight","elementRel","animationRel","fillType","clearRect","CVCompElement","CanvasRenderer","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","seedRandom","global","chunks","digits","rngname","startdenom","significance","overflow","nodecrypto","seedrandom","seed","options","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","int32","quick","S","pass","prng2","seed2","is_math_call","state","copy","keylen","me","t2","depth","result","typ","stringseed","smear","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","screen","initialize$2","BMMath2","propTypes","SHAPE","ExpressionManager","ob","fetch","frames","$bm_isInstanceOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","div","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","_tMin","rnd","rndm","createPath","inTangents","outTangents","arrPlaceholder","inVertexPoint","outVertexPoint","initiateExpression","property","needsVelocity","_needsRandom","elemType","$bm_transform","thisProperty","loopIn","loop_in","loopOut","loop_out","smooth","fromCompToSurface","thisLayer","thisComp","scoped_bm_rt","expression_function","eval","wiggle","wiggle2","freq","amp","iWiggle","lenWiggle","addedAmps","periods","loopInDuration","loopOutDuration","lookAt","elem1","fVec","pitch","yaw","easeOut","val1","applyEase","easeIn","ease","iKey","lenKey","nearestKey","obKey","framesToTime","fps","timeToFrames","randSeed","substring","posterizeTime","framesPerSecond","velocity","textIndex","textTotal","selectorValue","executeExpression","_value","frameExpressionId","__preventDeadCodeRemoval","expressionHelpers","searchExpressions","_cachingAtTime","delta","speed","velocity2","getStaticValueAtTime","addPropertyDecorator","loopOut2","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","loopIn2","firstValue","nextFirstValue","smooth2","samples","endFrame","sampleFrequency","sampleValue","getTransformValueAtTime","_transformCachingAtTime","anchor","rotation2","rotationZ","rotationY","rotationX","orientation","positionX","positionY","positionZ","getTransformStaticValueAtTime","propertyGetProp","getShapeValueAtTime","shapeValue","lastTime","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","initialize$1","addDecorator","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","initialize"],"sources":["D:\\valentines_website\\node_modules\\src\\libs\\lottie.js"],"sourcesContent":["const lottie = (() => {\n  if (typeof navigator === 'undefined' || typeof document === 'undefined') return {}\n\n  const svgNS = 'http://www.w3.org/2000/svg'\n\n  let locationHref = ''\n  let _useWebWorker = false\n\n  const initialDefaultFrame = -999999\n\n  const setWebWorker = (flag) => {\n    _useWebWorker = !!flag\n  }\n  const getWebWorker = () => _useWebWorker\n\n  const setLocationHref = (value) => {\n    locationHref = value\n  }\n  const getLocationHref = () => locationHref\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type)\n  }\n\n  function extendPrototype(sources, destination) {\n    var i\n    var len = sources.length\n    var sourcePrototype\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr))\n          destination.prototype[attr] = sourcePrototype[attr]\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop)\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype\n    return ProxyFunction\n  }\n\n  // import Howl from '../../3rd_party/howler';\n\n  const audioControllerFactory = (function () {\n    function AudioController(audioFactory) {\n      this.audios = []\n      this.audioFactory = audioFactory\n      this._volume = 1\n      this._isMuted = false\n    }\n\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio)\n      },\n      pause: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause()\n        }\n      },\n      resume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume()\n        }\n      },\n      setRate: function (rateValue) {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue)\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath)\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath],\n          })\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true\n          },\n          seek: function () {\n            this.isPlaying = false\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {},\n        }\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory\n      },\n      setVolume: function (value) {\n        this._volume = value\n        this._updateVolume()\n      },\n      mute: function () {\n        this._isMuted = true\n        this._updateVolume()\n      },\n      unmute: function () {\n        this._isMuted = false\n        this._updateVolume()\n      },\n      getVolume: function () {\n        return this._volume\n      },\n      _updateVolume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1))\n        }\n      },\n    }\n\n    return function () {\n      return new AudioController()\n    }\n  })()\n\n  const createTypedArray = (function () {\n    function createRegularArray(type, len) {\n      var i = 0\n      var arr = []\n      var value\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1\n          break\n        default:\n          value = 1.1\n          break\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value)\n      }\n      return arr\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len)\n      }\n      if (type === 'int16') {\n        return new Int16Array(len)\n      }\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len)\n      }\n      return createRegularArray(type, len)\n    }\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory\n    }\n    return createRegularArray\n  })()\n\n  function createSizedArray(len) {\n    return Array.apply(null, { length: len })\n  }\n\n  let subframeEnabled = true\n  let expressionsPlugin = null\n  let idPrefix$1 = ''\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  let _shouldRoundValues = false\n  const bmPow = Math.pow\n  const bmSqrt = Math.sqrt\n  const bmFloor = Math.floor\n  const bmMax = Math.max\n  const bmMin = Math.min\n\n  const BMMath = {}\n  ;(function () {\n    var propertyNames = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atanh',\n      'atan2',\n      'ceil',\n      'cbrt',\n      'expm1',\n      'clz32',\n      'cos',\n      'cosh',\n      'exp',\n      'floor',\n      'fround',\n      'hypot',\n      'imul',\n      'log',\n      'log1p',\n      'log2',\n      'log10',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n      'E',\n      'LN10',\n      'LN2',\n      'LOG10E',\n      'LOG2E',\n      'PI',\n      'SQRT1_2',\n      'SQRT2',\n    ]\n    var i\n    var len = propertyNames.length\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]]\n    }\n  })()\n\n  function ProjectInterface$1() {\n    return {}\n  }\n  BMMath.random = Math.random\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length)\n      var i\n      var len = val.length\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i])\n      }\n      return absArr\n    }\n    return Math.abs(val)\n  }\n  let defaultCurveSegments = 150\n  const degToRads = Math.PI / 180\n  const roundCorner = 0.5519\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value)\n    }\n    return value\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute'\n    element.style.top = 0\n    element.style.left = 0\n    element.style.display = 'block'\n    element.style.transformOrigin = '0 0'\n    element.style.webkitTransformOrigin = '0 0'\n    element.style.backfaceVisibility = 'visible'\n    element.style.webkitBackfaceVisibility = 'visible'\n    element.style.transformStyle = 'preserve-3d'\n    element.style.webkitTransformStyle = 'preserve-3d'\n    element.style.mozTransformStyle = 'preserve-3d'\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type\n    this.currentTime = currentTime\n    this.totalTime = totalTime\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type\n    this.currentLoop = currentLoop\n    this.totalLoops = totalLoops\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type\n    this.firstFrame = firstFrame\n    this.totalFrames = totalFrames\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type\n    this.target = target\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError'\n    this.nativeError = nativeError\n    this.currentTime = currentTime\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError'\n    this.nativeError = nativeError\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type\n    this.nativeError = nativeError\n  }\n\n  const createElementID = (function () {\n    var _count = 0\n    return function createID() {\n      _count += 1\n      return idPrefix$1 + '__lottie_element_' + _count\n    }\n  })()\n\n  function HSVtoRGB(h, s, v) {\n    var r\n    var g\n    var b\n    var i\n    var f\n    var p\n    var q\n    var t\n    i = Math.floor(h * 6)\n    f = h * 6 - i\n    p = v * (1 - s)\n    q = v * (1 - f * s)\n    t = v * (1 - (1 - f) * s)\n    switch (i % 6) {\n      case 0:\n        r = v\n        g = t\n        b = p\n        break\n      case 1:\n        r = q\n        g = v\n        b = p\n        break\n      case 2:\n        r = p\n        g = v\n        b = t\n        break\n      case 3:\n        r = p\n        g = q\n        b = v\n        break\n      case 4:\n        r = t\n        g = p\n        b = v\n        break\n      case 5:\n        r = v\n        g = p\n        b = q\n        break\n      default:\n        break\n    }\n    return [r, g, b]\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b)\n    var min = Math.min(r, g, b)\n    var d = max - min\n    var h\n    var s = max === 0 ? 0 : d / max\n    var v = max / 255\n\n    switch (max) {\n      case min:\n        h = 0\n        break\n      case r:\n        h = g - b + d * (g < b ? 6 : 0)\n        h /= 6 * d\n        break\n      case g:\n        h = b - r + d * 2\n        h /= 6 * d\n        break\n      case b:\n        h = r - g + d * 4\n        h /= 6 * d\n        break\n      default:\n        break\n    }\n\n    return [h, s, v]\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[1] += offset\n    if (hsv[1] > 1) {\n      hsv[1] = 1\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[2] += offset\n    if (hsv[2] > 1) {\n      hsv[2] = 1\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[0] += offset / 360\n    if (hsv[0] > 1) {\n      hsv[0] -= 1\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  const rgbToHex = (function () {\n    var colorMap = []\n    var i\n    var hex\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16)\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0\n      }\n      if (g < 0) {\n        g = 0\n      }\n      if (b < 0) {\n        b = 0\n      }\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b]\n    }\n  })()\n\n  const setSubframeEnabled = (flag) => {\n    subframeEnabled = !!flag\n  }\n  const getSubframeEnabled = () => subframeEnabled\n  const setExpressionsPlugin = (value) => {\n    expressionsPlugin = value\n  }\n  const getExpressionsPlugin = () => expressionsPlugin\n  const setDefaultCurveSegments = (value) => {\n    defaultCurveSegments = value\n  }\n  const getDefaultCurveSegments = () => defaultCurveSegments\n  const setIdPrefix = (value) => {\n    idPrefix$1 = value\n  }\n  const getIdPrefix = () => idPrefix$1\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type)\n  }\n\n  const dataManager = (function () {\n    var _counterId = 1\n    var processes = []\n    var workerFn\n    var workerInstance\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path,\n        })\n      },\n    }\n    var _workerSelf = {\n      postMessage: function (data) {\n        workerProxy.onmessage({\n          data: data,\n        })\n      },\n    }\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], { type: 'text/javascript' })\n        // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n        var url = URL.createObjectURL(blob)\n        return new Worker(url)\n      }\n      workerFn = fn\n      return workerProxy\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData\n              var i\n              var len = layers.length\n              var j\n              var jLen\n              var k\n              var kLen\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i]\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k)\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0])\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0])\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps)\n                    completeLayers(layerData.layers, comps)\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes)\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData)\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0\n                var len = chars.length\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets)\n                    // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n                    completeLayers(chars[i].data.layers, assets)\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0\n              var len = comps.length\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i]\n                }\n                i += 1\n              }\n              return null\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps)\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true\n                  return comp.layers\n                }\n                return JSON.parse(JSON.stringify(comp.layers))\n              }\n              return null\n            }\n\n            function completeShapes(arr) {\n              var i\n              var len = arr.length\n              var j\n              var jLen\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k)\n                  } else {\n                    jLen = arr[i].ks.k.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0])\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0])\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it)\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i\n              var len = path.i.length\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0]\n                path.i[i][1] += path.v[i][1]\n                path.o[i][0] += path.v[i][0]\n                path.o[i][1] += path.v[i][1]\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100]\n              if (minimum[0] > animVersion[0]) {\n                return true\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false\n              }\n              return null\n            }\n\n            var checkText = (function () {\n              var minimumVersion = [4, 4, 14]\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d\n                textLayer.t.d = {\n                  k: [\n                    {\n                      s: documentData,\n                      t: 0,\n                    },\n                  ],\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkChars = (function () {\n              var minimumVersion = [4, 7, 99]\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i\n                  var len = animationData.chars.length\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i]\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes)\n                      charData.data.ip = 0\n                      charData.data.op = 99999\n                      charData.data.st = 0\n                      charData.data.sr = 1\n                      charData.data.ks = {\n                        p: { k: [0, 0], a: 0 },\n                        s: { k: [100, 100], a: 0 },\n                        a: { k: [0, 0], a: 0 },\n                        r: { k: 0, a: 0 },\n                        o: { k: 100, a: 0 },\n                      }\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no',\n                        })\n                        charData.data.shapes[0].it.push({\n                          p: { k: [0, 0], a: 0 },\n                          s: { k: [100, 100], a: 0 },\n                          a: { k: [0, 0], a: 0 },\n                          r: { k: 0, a: 0 },\n                          o: { k: 100, a: 0 },\n                          sk: { k: 0, a: 0 },\n                          sa: { k: 0, a: 0 },\n                          ty: 'tr',\n                        })\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkPathProperties = (function () {\n              var minimumVersion = [5, 7, 15]\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a,\n                  }\n                }\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p,\n                  }\n                }\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r,\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkColors = (function () {\n              var minimumVersion = [4, 1, 9]\n\n              function iterateShapes(shapes) {\n                var i\n                var len = shapes.length\n                var j\n                var jLen\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it)\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255\n                          shapes[i].c.k[j].s[1] /= 255\n                          shapes[i].c.k[j].s[2] /= 255\n                          shapes[i].c.k[j].s[3] /= 255\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255\n                          shapes[i].c.k[j].e[1] /= 255\n                          shapes[i].c.k[j].e[2] /= 255\n                          shapes[i].c.k[j].e[3] /= 255\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255\n                      shapes[i].c.k[1] /= 255\n                      shapes[i].c.k[2] /= 255\n                      shapes[i].c.k[3] /= 255\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkShapes = (function () {\n              var minimumVersion = [4, 4, 18]\n\n              function completeClosingShapes(arr) {\n                var i\n                var len = arr.length\n                var j\n                var jLen\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed\n                    } else {\n                      jLen = arr[i].ks.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it)\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData\n                var i\n                var len = layers.length\n                var j\n                var jLen\n                var k\n                var kLen\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i]\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return\n              }\n              checkColors(animationData)\n              checkText(animationData)\n              checkChars(animationData)\n              checkPathProperties(animationData)\n              checkShapes(animationData)\n              completeLayers(animationData.layers, animationData.assets)\n              completeChars(animationData.chars, animationData.assets)\n              animationData.__complete = true\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {\n                // data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {}\n            moduleOb.completeData = completeData\n            moduleOb.checkColors = checkColors\n            moduleOb.checkChars = checkChars\n            moduleOb.checkPathProperties = checkPathProperties\n            moduleOb.checkShapes = checkShapes\n            moduleOb.completeLayers = completeLayers\n\n            return moduleOb\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager()\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = (function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type')\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'object') {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response)\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText)\n                }\n                return null\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response\n                var xhr = new XMLHttpRequest()\n                // set responseType after calling open or IE will break.\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json'\n                } catch (err) {} // eslint-disable-line no-empty\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr)\n                      callback(response)\n                    } else {\n                      try {\n                        response = formatResponse(xhr)\n                        callback(response)\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err)\n                        }\n                      }\n                    }\n                  }\n                }\n                try {\n                  xhr.open('GET', path, true)\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true)\n                }\n                xhr.send()\n              }\n              return {\n                load: loadAsset,\n              }\n            })()\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.dataManager.completeData(data)\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation\n            _workerSelf.dataManager.completeData(animation)\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success',\n            })\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          }\n        })\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data\n          var id = data.id\n          var process = processes[id]\n          processes[id] = null\n          if (data.status === 'success') {\n            process.onComplete(data.payload)\n          } else if (process.onError) {\n            process.onError()\n          }\n        }\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1\n      var id = 'processId_' + _counterId\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError,\n      }\n      return id\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId,\n      })\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation,\n    }\n  })()\n\n  const ImagePreloader = (function () {\n    var proxyImage = (function () {\n      var canvas = createTag('canvas')\n      canvas.width = 1\n      canvas.height = 1\n      var ctx = canvas.getContext('2d')\n      ctx.fillStyle = 'rgba(0,0,0,0)'\n      ctx.fillRect(0, 0, 1, 1)\n      return canvas\n    })()\n\n    function imageLoaded() {\n      this.loadedAssets += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = ''\n      if (assetData.e) {\n        path = assetData.p\n      } else if (assetsPath) {\n        var imagePath = assetData.p\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1]\n        }\n        path = assetsPath + imagePath\n      } else {\n        path = originalPath\n        path += assetData.u ? assetData.u : ''\n        path += assetData.p\n      }\n      return path\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0\n      var intervalId = setInterval(\n        function () {\n          var box = img.getBBox()\n          if (box.width || _count > 500) {\n            this._imageLoaded()\n            clearInterval(intervalId)\n          }\n          _count += 1\n        }.bind(this),\n        50,\n      )\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createNS('image')\n      if (isSafari) {\n        this.testImageLoaded(img)\n      } else {\n        img.addEventListener('load', this._imageLoaded, false)\n      }\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path)\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img)\n      } else {\n        this._elementHelper.appendChild(img)\n      }\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createTag('img')\n      img.crossOrigin = 'anonymous'\n      img.addEventListener('load', this._imageLoaded, false)\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.src = path\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data,\n      }\n      var path = getAssetsPath(data, this.assetsPath, this.path)\n      dataManager.loadData(\n        path,\n        function (footageData) {\n          ob.img = footageData\n          this._footageLoaded()\n        }.bind(this),\n        function () {\n          ob.img = {}\n          this._footageLoaded()\n        }.bind(this),\n      )\n      return ob\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb\n      var i\n      var len = assets.length\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1\n            this.images.push(this._createImageData(assets[i]))\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1\n            this.images.push(this.createFootageData(assets[i]))\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || ''\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || ''\n    }\n\n    function getAsset(assetData) {\n      var i = 0\n      var len = this.images.length\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img\n        }\n        i += 1\n      }\n      return null\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null\n      this.images.length = 0\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper\n        this._createImageData = this.createImageData.bind(this)\n      } else {\n        this._createImageData = this.createImgData.bind(this)\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this)\n      this._footageLoaded = footageLoaded.bind(this)\n      this.testImageLoaded = testImageLoaded.bind(this)\n      this.createFootageData = createFootageData.bind(this)\n      this.assetsPath = ''\n      this.path = ''\n      this.totalImages = 0\n      this.totalFootages = 0\n      this.loadedAssets = 0\n      this.loadedFootagesCount = 0\n      this.imagesLoadedCb = null\n      this.images = []\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType,\n    }\n\n    return ImagePreloaderFactory\n  })()\n\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName]\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args)\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = []\n      }\n      this._cbs[eventName].push(callback)\n\n      return function () {\n        this.removeEventListener(eventName, callback)\n      }.bind(this)\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null\n      } else if (this._cbs[eventName]) {\n        var i = 0\n        var len = this._cbs[eventName].length\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1)\n            i -= 1\n            len -= 1\n          }\n          i += 1\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null\n        }\n      }\n    },\n  }\n\n  const markerParser = (function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n')\n      var keys = {}\n      var line\n      var keysCount = 0\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':')\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim()\n          keysCount += 1\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error()\n      }\n      return keys\n    }\n\n    return function (_markers) {\n      var markers = []\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i]\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr,\n        }\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm)\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm)\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm,\n            }\n          }\n        }\n        markers.push(markerData)\n      }\n      return markers\n    }\n  })()\n\n  const ProjectInterface = (function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp)\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0\n        var len = this.compositions.length\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame)\n            }\n            return this.compositions[i].compInterface\n          }\n          i += 1\n        }\n        return null\n      }\n\n      _thisProjectFunction.compositions = []\n      _thisProjectFunction.currentFrame = 0\n\n      _thisProjectFunction.registerComposition = registerComposition\n\n      return _thisProjectFunction\n    }\n  })()\n\n  const renderers = {}\n\n  const registerRenderer = (key, value) => {\n    renderers[key] = value\n  }\n\n  function getRenderer(key) {\n    return renderers[key]\n  }\n\n  const AnimationItem = function () {\n    this._cbs = []\n    this.name = ''\n    this.path = ''\n    this.isLoaded = false\n    this.currentFrame = 0\n    this.currentRawFrame = 0\n    this.firstFrame = 0\n    this.totalFrames = 0\n    this.frameRate = 0\n    this.frameMult = 0\n    this.playSpeed = 1\n    this.playDirection = 1\n    this.playCount = 0\n    this.animationData = {}\n    this.assets = []\n    this.isPaused = true\n    this.autoplay = false\n    this.loop = true\n    this.renderer = null\n    this.animationID = createElementID()\n    this.assetsPath = ''\n    this.timeCompleted = 0\n    this.segmentPos = 0\n    this.isSubframeEnabled = getSubframeEnabled()\n    this.segments = []\n    this._idle = true\n    this._completedLoop = false\n    this.projectInterface = ProjectInterface()\n    this.imagePreloader = new ImagePreloader()\n    this.audioController = audioControllerFactory()\n    this.markers = []\n    this.configAnimation = this.configAnimation.bind(this)\n    this.onSetupError = this.onSetupError.bind(this)\n    this.onSegmentComplete = this.onSegmentComplete.bind(this)\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0)\n  }\n\n  extendPrototype([BaseEvent], AnimationItem)\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container\n    }\n    var animType = 'svg'\n    if (params.animType) {\n      animType = params.animType\n    } else if (params.renderer) {\n      animType = params.renderer\n    }\n    const RendererClass = getRenderer(animType)\n    this.renderer = new RendererClass(this, params.rendererSettings)\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs)\n    this.renderer.setProjectInterface(this.projectInterface)\n    this.animType = animType\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true\n    } else if (params.loop === false) {\n      this.loop = false\n    } else {\n      this.loop = parseInt(params.loop, 10)\n    }\n    this.autoplay = 'autoplay' in params ? params.autoplay : true\n    this.name = params.name ? params.name : ''\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments')\n      ? params.autoloadSegments\n      : true\n    this.assetsPath = params.assetsPath\n    this.initialSegment = params.initialSegment\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory)\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData)\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1)\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1)\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1)\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'))\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError)\n    }\n  }\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed')\n  }\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation)\n  }\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== 'object') {\n        animationData = JSON.parse(animationData)\n      }\n    }\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData,\n    }\n    var wrapperAttributes = wrapper.attributes\n\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-animation-path').value\n      : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-path').value\n      : wrapperAttributes.getNamedItem('bm-path')\n      ? wrapperAttributes.getNamedItem('bm-path').value\n      : ''\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-type').value\n      : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-type').value\n      : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('bm-type').value\n      : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-renderer').value\n      : wrapperAttributes.getNamedItem('bm-renderer')\n      ? wrapperAttributes.getNamedItem('bm-renderer').value\n      : 'canvas'\n\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-loop').value\n      : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-loop').value\n      : wrapperAttributes.getNamedItem('bm-loop')\n      ? wrapperAttributes.getNamedItem('bm-loop').value\n      : ''\n    if (loop === 'false') {\n      params.loop = false\n    } else if (loop === 'true') {\n      params.loop = true\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10)\n    }\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-autoplay').value\n      : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-autoplay').value\n      : wrapperAttributes.getNamedItem('bm-autoplay')\n      ? wrapperAttributes.getNamedItem('bm-autoplay').value\n      : true\n    params.autoplay = autoplay !== 'false'\n\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-name').value\n      : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-name').value\n      : wrapperAttributes.getNamedItem('bm-name')\n      ? wrapperAttributes.getNamedItem('bm-name').value\n      : ''\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-prerender').value\n      : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-prerender').value\n      : wrapperAttributes.getNamedItem('bm-prerender')\n      ? wrapperAttributes.getNamedItem('bm-prerender').value\n      : ''\n\n    if (prerender === 'false') {\n      params.prerender = false\n    }\n    this.setParams(params)\n  }\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op\n      this.totalFrames = Math.floor(data.op - this.animationData.ip)\n    }\n    var layers = this.animationData.layers\n    var i\n    var len = layers.length\n    var newLayers = data.layers\n    var j\n    var jLen = newLayers.length\n    for (j = 0; j < jLen; j += 1) {\n      i = 0\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j]\n          break\n        }\n        i += 1\n      }\n    }\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars)\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs)\n    }\n    if (data.assets) {\n      len = data.assets.length\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i])\n      }\n    }\n    this.animationData.__complete = false\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete)\n  }\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data\n    var expressionsPlugin = getExpressionsPlugin()\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this)\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready')\n      this.timeCompleted = this.totalFrames\n      return\n    }\n    var segment = segments.shift()\n    this.timeCompleted = segment.time * this.frameRate\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json'\n    this.segmentPos += 1\n    dataManager.loadData(\n      segmentPath,\n      this.includeLayers.bind(this),\n      function () {\n        this.trigger('data_failed')\n      }.bind(this),\n    )\n  }\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments\n    if (!segments) {\n      this.timeCompleted = this.totalFrames\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images')\n    this.checkLoaded()\n  }\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath)\n    this.imagePreloader.setPath(this.path)\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))\n  }\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return\n    }\n    try {\n      this.animationData = animData\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])\n        this.firstFrame = Math.round(this.initialSegment[0])\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)\n        this.firstFrame = Math.round(this.animationData.ip)\n      }\n      this.renderer.configAnimation(animData)\n      if (!animData.assets) {\n        animData.assets = []\n      }\n\n      this.assets = this.animationData.assets\n      this.frameRate = this.animationData.fr\n      this.frameMult = this.animationData.fr / 1000\n      this.renderer.searchExtraCompositions(animData.assets)\n      this.markers = markerParser(animData.markers || [])\n      this.trigger('config_ready')\n      this.preloadImages()\n      this.loadSegments()\n      this.updaFrameModifier()\n      this.waitForFontsLoaded()\n      if (this.isPaused) {\n        this.audioController.pause()\n      }\n    } catch (error) {\n      this.triggerConfigError(error)\n    }\n  }\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded()\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20)\n    }\n  }\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (\n      !this.isLoaded &&\n      this.renderer.globalData.fontManager.isLoaded &&\n      (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') &&\n      this.imagePreloader.loadedFootages()\n    ) {\n      this.isLoaded = true\n      var expressionsPlugin = getExpressionsPlugin()\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this)\n      }\n      this.renderer.initItems()\n      setTimeout(\n        function () {\n          this.trigger('DOMLoaded')\n        }.bind(this),\n        0,\n      )\n      this.gotoFrame()\n      if (this.autoplay) {\n        this.play()\n      }\n    }\n  }\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize()\n  }\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag\n  }\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted\n    }\n    this.trigger('enterFrame')\n    this.renderFrame()\n    this.trigger('drawnFrame')\n  }\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame)\n    } catch (error) {\n      this.triggerRenderFrameError(error)\n    }\n  }\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false\n      this.trigger('_pause')\n      this.audioController.resume()\n      if (this._idle) {\n        this._idle = false\n        this.trigger('_active')\n      }\n    }\n  }\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true\n      this.trigger('_play')\n      this._idle = true\n      this.trigger('_idle')\n      this.audioController.pause()\n    }\n  }\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.play()\n    } else {\n      this.pause()\n    }\n  }\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.pause()\n    this.playCount = 0\n    this._completedLoop = false\n    this.setCurrentRawFrameValue(0)\n  }\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i]\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker\n      }\n    }\n    return null\n  }\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        this.goToAndStop(marker.time, true)\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value)\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier)\n    }\n    this.pause()\n  }\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true)\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true)\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name)\n    }\n    this.play()\n  }\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return\n    }\n    var nextValue = this.currentRawFrame + value * this.frameModifier\n    var _isComplete = false\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true\n          nextValue = this.totalFrames - 1\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames)\n          this._completedLoop = true\n          this.trigger('loopComplete')\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue)\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames))\n          if (!this._completedLoop) {\n            this._completedLoop = true\n          } else {\n            this.trigger('loopComplete')\n          }\n        } else {\n          _isComplete = true\n          nextValue = 0\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue)\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue)\n      this.pause()\n      this.trigger('complete')\n    }\n  }\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(-1)\n        }\n      }\n      this.totalFrames = arr[0] - arr[1]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[1]\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset)\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(1)\n        }\n      }\n      this.totalFrames = arr[1] - arr[0]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[0]\n      this.setCurrentRawFrameValue(0.001 + offset)\n    }\n    this.trigger('segmentStart')\n  }\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init\n      }\n    }\n\n    this.firstFrame = init\n    this.totalFrames = end - init\n    this.timeCompleted = this.totalFrames\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true)\n    }\n  }\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0\n    }\n    if (typeof arr[0] === 'object') {\n      var i\n      var len = arr.length\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i])\n      }\n    } else {\n      this.segments.push(arr)\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0)\n    }\n    if (this.isPaused) {\n      this.play()\n    }\n  }\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0\n    this.segments.push([this.animationData.ip, this.animationData.op])\n    if (forceFlag) {\n      this.checkSegments(0)\n    }\n  }\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset)\n      return true\n    }\n    return false\n  }\n\n  AnimationItem.prototype.destroy = function (name) {\n    if ((name && this.name !== name) || !this.renderer) {\n      return\n    }\n    this.renderer.destroy()\n    this.imagePreloader.destroy()\n    this.trigger('destroy')\n    this._cbs = null\n    this.onEnterFrame = null\n    this.onLoopComplete = null\n    this.onComplete = null\n    this.onSegmentStart = null\n    this.onDestroy = null\n    this.renderer = null\n    this.renderer = null\n    this.imagePreloader = null\n    this.projectInterface = null\n  }\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value\n    this.gotoFrame()\n  }\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.setVolume(val)\n  }\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume()\n  }\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.mute()\n  }\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.unmute()\n  }\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection\n    this.audioController.setRate(this.playSpeed * this.playDirection)\n  }\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path\n  }\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = ''\n    if (assetData.e) {\n      path = assetData.p\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1]\n      }\n      path = this.assetsPath + imagePath\n    } else {\n      path = this.path\n      path += assetData.u ? assetData.u : ''\n      path += assetData.p\n    }\n    return path\n  }\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0\n    var len = this.assets.length\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i]\n      }\n      i += 1\n    }\n    return null\n  }\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide()\n  }\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show()\n  }\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate\n  }\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path)\n      element.updateDocumentData(documentData, index)\n    } catch (error) {\n      // TODO: decide how to handle catch case\n    }\n  }\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier))\n          break\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame\n          this.drawnFrameEvent.totalTime = this.totalFrames\n          this.drawnFrameEvent.direction = this.frameModifier\n          this.triggerEvent(name, this.drawnFrameEvent)\n          break\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n          break\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult))\n          break\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n          break\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this))\n          break\n        default:\n          this.triggerEvent(name)\n      }\n    }\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult))\n    }\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n    }\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult))\n    }\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n    }\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this))\n    }\n  }\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  const animationManager = (function () {\n    var moduleOb = {}\n    var registeredAnimations = []\n    var initTime = 0\n    var len = 0\n    var playingAnimationsNum = 0\n    var _stopped = true\n    var _isFrozen = false\n\n    function removeElement(ev) {\n      var i = 0\n      var animItem = ev.target\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1)\n          i -= 1\n          len -= 1\n          if (!animItem.isPaused) {\n            subtractPlayingCount()\n          }\n        }\n        i += 1\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null\n      }\n      var i = 0\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation\n        }\n        i += 1\n      }\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, element)\n      animItem.setData(element, animationData)\n      return animItem\n    }\n\n    function getRegisteredAnimations() {\n      var i\n      var lenAnims = registeredAnimations.length\n      var animations = []\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation)\n      }\n      return animations\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1\n      activate()\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement)\n      animItem.addEventListener('_active', addPlayingCount)\n      animItem.addEventListener('_idle', subtractPlayingCount)\n      registeredAnimations.push({ elem: element, animation: animItem })\n      len += 1\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, null)\n      animItem.setParams(params)\n      return animItem\n    }\n\n    function setSpeed(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation)\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation)\n      }\n    }\n\n    function play(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation)\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime)\n      }\n      initTime = nowTime\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume)\n      } else {\n        _stopped = true\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime\n      window.requestAnimationFrame(resume)\n    }\n\n    function pause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation)\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation)\n      }\n    }\n\n    function stop(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation)\n      }\n    }\n\n    function togglePause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation)\n      }\n    }\n\n    function destroy(animation) {\n      var i\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation)\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat(\n        [].slice.call(document.getElementsByClassName('lottie')),\n        [].slice.call(document.getElementsByClassName('bodymovin')),\n      )\n      var i\n      var lenAnims = animElements.length\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer)\n        }\n        registerAnimation(animElements[i], animationData)\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg'\n        }\n        var body = document.getElementsByTagName('body')[0]\n        body.innerText = ''\n        var div = createTag('div')\n        div.style.width = '100%'\n        div.style.height = '100%'\n        div.setAttribute('data-bm-type', renderer)\n        body.appendChild(div)\n        registerAnimation(div, animationData)\n      }\n    }\n\n    function resize() {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize()\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first)\n          _stopped = false\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true\n    }\n\n    function unfreeze() {\n      _isFrozen = false\n      activate()\n    }\n\n    function setVolume(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation)\n      }\n    }\n\n    function mute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation)\n      }\n    }\n\n    function unmute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation)\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation\n    moduleOb.loadAnimation = loadAnimation\n    moduleOb.setSpeed = setSpeed\n    moduleOb.setDirection = setDirection\n    moduleOb.play = play\n    moduleOb.pause = pause\n    moduleOb.stop = stop\n    moduleOb.togglePause = togglePause\n    moduleOb.searchAnimations = searchAnimations\n    moduleOb.resize = resize\n    // moduleOb.start = start;\n    moduleOb.goToAndStop = goToAndStop\n    moduleOb.destroy = destroy\n    moduleOb.freeze = freeze\n    moduleOb.unfreeze = unfreeze\n    moduleOb.setVolume = setVolume\n    moduleOb.mute = mute\n    moduleOb.unmute = unmute\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations\n    return moduleOb\n  })()\n\n  /* eslint-disable */\n  const BezierFactory = (function () {\n    /**\n     * BezierEasing - use bezier curve for transition easing function\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n     *\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\n     * Usage:\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\n     *\n     */\n\n    var ob = {}\n    ob.getBezierEasing = getBezierEasing\n    var beziers = {}\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p')\n      if (beziers[str]) {\n        return beziers[str]\n      }\n      var bezEasing = new BezierEasing([a, b, c, d])\n      beziers[str] = bezEasing\n      return bezEasing\n    }\n\n    // These values are established by empiricism with tests (tradeoff: performance VS precision)\n    var NEWTON_ITERATIONS = 4\n    var NEWTON_MIN_SLOPE = 0.001\n    var SUBDIVISION_PRECISION = 0.0000001\n    var SUBDIVISION_MAX_ITERATIONS = 10\n\n    var kSplineTableSize = 11\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0)\n\n    var float32ArraySupported = typeof Float32Array === 'function'\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1\n    }\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1\n    }\n    function C(aA1) {\n      return 3.0 * aA1\n    }\n\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT\n    }\n\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1)\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0\n      do {\n        currentT = aA + (aB - aA) / 2.0\n        currentX = calcBezier(currentT, mX1, mX2) - aX\n        if (currentX > 0.0) {\n          aB = currentT\n        } else {\n          aA = currentT\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS)\n      return currentT\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2)\n        if (currentSlope === 0.0) return aGuessT\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX\n        aGuessT -= currentX / currentSlope\n      }\n      return aGuessT\n    }\n\n    /**\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\n     */\n    function BezierEasing(points) {\n      this._p = points\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize)\n      this._precomputed = false\n\n      this.get = this.get.bind(this)\n    }\n\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        if (!this._precomputed) this._precompute()\n        if (mX1 === mY1 && mX2 === mY2) return x // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) return 0\n        if (x === 1) return 1\n        return calcBezier(this._getTForX(x), mY1, mY2)\n      },\n\n      // Private part\n\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        this._precomputed = true\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues()\n        }\n      },\n\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2]\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2)\n        }\n      },\n\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues\n\n        var intervalStart = 0.0\n        var currentSample = 1\n        var lastSample = kSplineTableSize - 1\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize\n        }\n        --currentSample\n\n        // Interpolate to provide an initial guess for t\n        var dist =\n          (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample])\n        var guessForT = intervalStart + dist * kSampleStepSize\n\n        var initialSlope = getSlope(guessForT, mX1, mX2)\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2)\n        }\n        if (initialSlope === 0.0) {\n          return guessForT\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2)\n      },\n    }\n\n    return ob\n  })()\n\n  const pooling = (function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length))\n    }\n\n    return {\n      double: double,\n    }\n  })()\n\n  const poolFactory = (function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0\n      var _maxLength = initialLength\n      var pool = createSizedArray(_maxLength)\n\n      var ob = {\n        newElement: newElement,\n        release: release,\n      }\n\n      function newElement() {\n        var element\n        if (_length) {\n          _length -= 1\n          element = pool[_length]\n        } else {\n          element = _create()\n        }\n        return element\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool)\n          _maxLength *= 2\n        }\n        if (_release) {\n          _release(element)\n        }\n        pool[_length] = element\n        _length += 1\n      }\n\n      return ob\n    }\n  })()\n\n  const bezierLengthPool = (function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments()),\n      }\n    }\n    return poolFactory(8, create)\n  })()\n\n  const segmentsLengthPool = (function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0,\n      }\n    }\n\n    function release(element) {\n      var i\n      var len = element.lengths.length\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i])\n      }\n      element.lengths.length = 0\n    }\n\n    return poolFactory(8, create, release)\n  })()\n\n  function bezFunction() {\n    var math = Math\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1\n      return det1 > -0.001 && det1 < 0.001\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3)\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2))\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2))\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2))\n      var diffDist\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3\n        } else {\n          diffDist = dist3 - dist2 - dist1\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1\n      } else {\n        diffDist = dist2 - dist1 - dist3\n      }\n      return diffDist > -0.0001 && diffDist < 0.0001\n    }\n\n    var getBezierLength = (function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments()\n        var k\n        var i\n        var len\n        var ptCoord\n        var perc\n        var addedLength = 0\n        var ptDistance\n        var point = []\n        var lastPoint = []\n        var lengthData = bezierLengthPool.newElement()\n        len = pt3.length\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1)\n          ptDistance = 0\n          for (i = 0; i < len; i += 1) {\n            ptCoord =\n              bmPow(1 - perc, 3) * pt1[i] +\n              3 * bmPow(1 - perc, 2) * perc * pt3[i] +\n              3 * (1 - perc) * bmPow(perc, 2) * pt4[i] +\n              bmPow(perc, 3) * pt2[i]\n            point[i] = ptCoord\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2)\n            }\n            lastPoint[i] = point[i]\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n          }\n          lengthData.percents[k] = perc\n          lengthData.lengths[k] = addedLength\n        }\n        lengthData.addedLength = addedLength\n        return lengthData\n      }\n    })()\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement()\n      var closed = shapeData.c\n      var pathV = shapeData.v\n      var pathO = shapeData.o\n      var pathI = shapeData.i\n      var i\n      var len = shapeData._length\n      var lengths = segmentsLength.lengths\n      var totalLength = 0\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1])\n        totalLength += lengths[i].addedLength\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0])\n        totalLength += lengths[i].addedLength\n      }\n      segmentsLength.totalLength = totalLength\n      return segmentsLength\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0\n      this.points = new Array(length)\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial\n      this.point = point\n    }\n\n    var buildBezierData = (function () {\n      var storedData = {}\n\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (\n          pt1[0] +\n          '_' +\n          pt1[1] +\n          '_' +\n          pt2[0] +\n          '_' +\n          pt2[1] +\n          '_' +\n          pt3[0] +\n          '_' +\n          pt3[1] +\n          '_' +\n          pt4[0] +\n          '_' +\n          pt4[1]\n        ).replace(/\\./g, 'p')\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments()\n          var k\n          var i\n          var len\n          var ptCoord\n          var perc\n          var addedLength = 0\n          var ptDistance\n          var point\n          var lastPoint = null\n          if (\n            pt1.length === 2 &&\n            (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])\n          ) {\n            curveSegments = 2\n          }\n          var bezierData = new BezierData(curveSegments)\n          len = pt3.length\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len)\n            perc = k / (curveSegments - 1)\n            ptDistance = 0\n            for (i = 0; i < len; i += 1) {\n              ptCoord =\n                bmPow(1 - perc, 3) * pt1[i] +\n                3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) +\n                3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) +\n                bmPow(perc, 3) * pt2[i]\n              point[i] = ptCoord\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2)\n              }\n            }\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n            bezierData.points[k] = new PointData(ptDistance, point)\n            lastPoint = point\n          }\n          bezierData.segmentLength = addedLength\n          storedData[bezierName] = bezierData\n        }\n        return storedData[bezierName]\n      }\n    })()\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents\n      var lengths = bezierData.lengths\n      var len = percents.length\n      var initPos = bmFloor((len - 1) * perc)\n      var lengthPos = perc * bezierData.addedLength\n      var lPerc = 0\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos]\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1\n      var flag = true\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos])\n          flag = false\n        } else {\n          initPos += dir\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos]\n          }\n          flag = false\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData)\n      var u1 = 1 - t1\n      var ptX =\n        math.round(\n          (u1 * u1 * u1 * pt1[0] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] +\n            t1 * t1 * t1 * pt2[0]) *\n            1000,\n        ) / 1000\n      var ptY =\n        math.round(\n          (u1 * u1 * u1 * pt1[1] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] +\n            t1 * t1 * t1 * pt2[1]) *\n            1000,\n        ) / 1000\n      return [ptX, ptY]\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8)\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0\n      } else if (startPerc > 1) {\n        startPerc = 1\n      }\n      var t0 = getDistancePerc(startPerc, bezierData)\n      endPerc = endPerc > 1 ? 1 : endPerc\n      var t1 = getDistancePerc(endPerc, bezierData)\n      var i\n      var len = pt1.length\n      var u0 = 1 - t0\n      var u1 = 1 - t1\n      var u0u0u0 = u0 * u0 * u0\n      var t0u0u0_3 = t0 * u0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0u0_3 = t0 * t0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0t0 = t0 * t0 * t0\n      //\n      var u0u0u1 = u0 * u0 * u1\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0t1 = t0 * t0 * t1\n      //\n      var u0u1u1 = u0 * u1 * u1\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1t1 = t0 * t1 * t1\n      //\n      var u1u1u1 = u1 * u1 * u1\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1t1 = t1 * t1 * t1\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] =\n          math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 1] =\n          math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 2] =\n          math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 3] =\n          math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D,\n    }\n  }\n\n  const bez = bezFunction()\n\n  const PropertyFactory = (function () {\n    var initFrame = initialDefaultFrame\n    var mathAbs = Math.abs\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime\n      var newValue\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length)\n      }\n      var iterationIndex = caching.lastIndex\n      var i = iterationIndex\n      var len = this.keyframes.length - 1\n      var flag = true\n      var keyData\n      var nextKeyData\n      var keyframeMetadata\n\n      while (flag) {\n        keyData = this.keyframes[i]\n        nextKeyData = this.keyframes[i + 1]\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData\n          }\n          iterationIndex = 0\n          break\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i\n          break\n        }\n        if (i < len - 1) {\n          i += 1\n        } else {\n          iterationIndex = 0\n          flag = false\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {}\n\n      var k\n      var kLen\n      var perc\n      var jLen\n      var j\n      var fnc\n      var nextKeyTime = nextKeyData.t - offsetTime\n      var keyTime = keyData.t - offsetTime\n      var endValue\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(\n            keyData.s,\n            nextKeyData.s || keyData.e,\n            keyData.to,\n            keyData.ti,\n          )\n        }\n        var bezierData = keyframeMetadata.bezierData\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0\n          kLen = bezierData.points[ind].point.length\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k]\n          }\n          // caching._lastKeyframeIndex = -1;\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get\n            keyframeMetadata.__fnct = fnc\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n          var distanceInLine = bezierData.segmentLength * perc\n\n          var segmentPerc\n          var addedLength =\n            caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0\n          flag = true\n          jLen = bezierData.points.length\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k]\n              }\n              break\n            } else if (\n              distanceInLine >= addedLength &&\n              distanceInLine < addedLength + bezierData.points[j + 1].partialLength\n            ) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] =\n                  bezierData.points[j].point[k] +\n                  (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc\n              }\n              break\n            }\n            if (j < jLen - 1) {\n              j += 1\n            } else {\n              flag = false\n            }\n          }\n          caching._lastPoint = j\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength\n          caching._lastKeyframeIndex = i\n        }\n      } else {\n        var outX\n        var outY\n        var inX\n        var inY\n        var keyValue\n        len = keyData.s.length\n        endValue = nextKeyData.s || keyData.e\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0]\n            newValue[1] = endValue[1]\n            newValue[2] = endValue[2]\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0]\n            newValue[1] = keyData.s[1]\n            newValue[2] = keyData.s[2]\n          } else {\n            var quatStart = createQuaternion(keyData.s)\n            var quatEnd = createQuaternion(endValue)\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime)\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time))\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1\n              } else if (frameNum < keyTime) {\n                perc = 0\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = []\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i]\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i]\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i]\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i]\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                    keyframeMetadata.__fnct[i] = fnc\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i]\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x\n                  outY = keyData.o.y\n                  inX = keyData.i.x\n                  inY = keyData.i.y\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                  keyData.keyframeMetadata = fnc\n                } else {\n                  fnc = keyframeMetadata.__fnct\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue\n            } else {\n              newValue = keyValue\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex\n      return newValue\n    }\n\n    // based on @Toji's https://github.com/toji/gl-matrix/\n    function slerp(a, b, t) {\n      var out = []\n      var ax = a[0]\n      var ay = a[1]\n      var az = a[2]\n      var aw = a[3]\n      var bx = b[0]\n      var by = b[1]\n      var bz = b[2]\n      var bw = b[3]\n\n      var omega\n      var cosom\n      var sinom\n      var scale0\n      var scale1\n\n      cosom = ax * bx + ay * by + az * bz + aw * bw\n      if (cosom < 0.0) {\n        cosom = -cosom\n        bx = -bx\n        by = -by\n        bz = -bz\n        bw = -bw\n      }\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom)\n        sinom = Math.sin(omega)\n        scale0 = Math.sin((1.0 - t) * omega) / sinom\n        scale1 = Math.sin(t * omega) / sinom\n      } else {\n        scale0 = 1.0 - t\n        scale1 = t\n      }\n      out[0] = scale0 * ax + scale1 * bx\n      out[1] = scale0 * ay + scale1 * by\n      out[2] = scale0 * az + scale1 * bz\n      out[3] = scale0 * aw + scale1 * bw\n\n      return out\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0]\n      var qy = quat[1]\n      var qz = quat[2]\n      var qw = quat[3]\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz)\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw)\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz)\n      out[0] = heading / degToRads\n      out[1] = attitude / degToRads\n      out[2] = bank / degToRads\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads\n      var attitude = values[1] * degToRads\n      var bank = values[2] * degToRads\n      var c1 = Math.cos(heading / 2)\n      var c2 = Math.cos(attitude / 2)\n      var c3 = Math.cos(bank / 2)\n      var s1 = Math.sin(heading / 2)\n      var s2 = Math.sin(attitude / 2)\n      var s3 = Math.sin(bank / 2)\n      var w = c1 * c2 * c3 - s1 * s2 * s3\n      var x = s1 * s2 * c3 + c1 * c2 * s3\n      var y = s1 * c2 * c3 + c1 * s2 * s3\n      var z = c1 * s2 * c3 - s1 * c2 * s3\n\n      return [x, y, z, w]\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      if (\n        !(\n          frameNum === this._caching.lastFrame ||\n          (this._caching.lastFrame !== initFrame &&\n            ((this._caching.lastFrame >= endTime && frameNum >= endTime) ||\n              (this._caching.lastFrame < initTime && frameNum < initTime)))\n        )\n      ) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1\n          this._caching.lastIndex = 0\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching)\n        this.pv = renderResult\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function setVValue(val) {\n      var multipliedValue\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue\n          this._mdf = true\n        }\n      } else {\n        var i = 0\n        var len = this.v.length\n        while (i < len) {\n          multipliedValue = val[i] * this.mult\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue\n            this._mdf = true\n          }\n          i += 1\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = this._isFirstFrame\n      var i\n      var len = this.effectsSequence.length\n      var finalValue = this.kf ? this.pv : this.data.k\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this._isFirstFrame = false\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this.v = mult ? data.k * mult : data.k\n      this.pv = data.k\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.vel = 0\n      this.effectsSequence = []\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.frameId = -1\n      var i\n      var len = data.k.length\n      this.v = createTypedArray('float32', len)\n      this.pv = createTypedArray('float32', len)\n      this.vel = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult\n        this.pv[i] = data.k[i]\n      }\n      this._isFirstFrame = true\n      this.effectsSequence = []\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.frameId = -1\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1,\n      }\n      this.k = true\n      this.kf = true\n      this.data = data\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.v = initFrame\n      this.pv = initFrame\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.addEffect = addEffect\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      var i\n      var len = data.k.length\n      var s\n      var e\n      var to\n      var ti\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s\n          e = data.k[i + 1].s\n          to = data.k[i].to\n          ti = data.k[i].ti\n          if (\n            (s.length === 2 &&\n              !(s[0] === e[0] && s[1] === e[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1])) ||\n            (s.length === 3 &&\n              !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2]))\n          ) {\n            data.k[i].to = null\n            data.k[i].ti = null\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\n              data.k[i].to = null\n              data.k[i].ti = null\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.data = data\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.k = true\n      this.kf = true\n      this._isFirstFrame = true\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.frameId = -1\n      var arrLen = data.k[0].s.length\n      this.v = createTypedArray('float32', arrLen)\n      this.pv = createTypedArray('float32', arrLen)\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame\n        this.pv[i] = initFrame\n      }\n      this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) }\n      this.addEffect = addEffect\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container)\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container)\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container)\n            break\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container)\n            break\n          default:\n            break\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p)\n      }\n      return p\n    }\n\n    var ob = {\n      getProp: getProp,\n    }\n    return ob\n  })()\n\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n        this.container.addDynamicProperty(this)\n        this._isAnimated = true\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue()\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container\n      this.dynamicProperties = []\n      this._mdf = false\n      this._isAnimated = false\n    },\n  }\n\n  const pointPool = (function () {\n    function create() {\n      return createTypedArray('float32', 2)\n    }\n    return poolFactory(8, create)\n  })()\n\n  function ShapePath() {\n    this.c = false\n    this._length = 0\n    this._maxLength = 8\n    this.v = createSizedArray(this._maxLength)\n    this.o = createSizedArray(this._maxLength)\n    this.i = createSizedArray(this._maxLength)\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed\n    this.setLength(len)\n    var i = 0\n    while (i < len) {\n      this.v[i] = pointPool.newElement()\n      this.o[i] = pointPool.newElement()\n      this.i[i] = pointPool.newElement()\n      i += 1\n    }\n  }\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength()\n    }\n    this._length = len\n  }\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength))\n    this.i = this.i.concat(createSizedArray(this._maxLength))\n    this.o = this.o.concat(createSizedArray(this._maxLength))\n    this._maxLength *= 2\n  }\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr\n    this._length = Math.max(this._length, pos + 1)\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength()\n    }\n    switch (type) {\n      case 'v':\n        arr = this.v\n        break\n      case 'i':\n        arr = this.i\n        break\n      case 'o':\n        arr = this.o\n        break\n      default:\n        arr = []\n        break\n    }\n    if (!arr[pos] || (arr[pos] && !replace)) {\n      arr[pos] = pointPool.newElement()\n    }\n    arr[pos][0] = x\n    arr[pos][1] = y\n  }\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace)\n    this.setXYAt(oX, oY, 'o', pos, replace)\n    this.setXYAt(iX, iY, 'i', pos, replace)\n  }\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath()\n    newPath.setPathData(this.c, this._length)\n    var vertices = this.v\n    var outPoints = this.o\n    var inPoints = this.i\n    var init = 0\n    if (this.c) {\n      newPath.setTripleAt(\n        vertices[0][0],\n        vertices[0][1],\n        inPoints[0][0],\n        inPoints[0][1],\n        outPoints[0][0],\n        outPoints[0][1],\n        0,\n        false,\n      )\n      init = 1\n    }\n    var cnt = this._length - 1\n    var len = this._length\n\n    var i\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(\n        vertices[cnt][0],\n        vertices[cnt][1],\n        inPoints[cnt][0],\n        inPoints[cnt][1],\n        outPoints[cnt][0],\n        outPoints[cnt][1],\n        i,\n        false,\n      )\n      cnt -= 1\n    }\n    return newPath\n  }\n\n  const shapePool = (function () {\n    function create() {\n      return new ShapePath()\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length\n      var i\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i])\n        pointPool.release(shapePath.i[i])\n        pointPool.release(shapePath.o[i])\n        shapePath.v[i] = null\n        shapePath.i[i] = null\n        shapePath.o[i] = null\n      }\n      shapePath._length = 0\n      shapePath.c = false\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement()\n      var i\n      var len = shape._length === undefined ? shape.v.length : shape._length\n      cloned.setLength(len)\n      cloned.c = shape.c\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i)\n      }\n      return cloned\n    }\n\n    var factory = poolFactory(4, create, release)\n    factory.clone = clone\n\n    return factory\n  })()\n\n  function ShapeCollection() {\n    this._length = 0\n    this._maxLength = 4\n    this.shapes = createSizedArray(this._maxLength)\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength))\n      this._maxLength *= 2\n    }\n    this.shapes[this._length] = shapeData\n    this._length += 1\n  }\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i])\n    }\n    this._length = 0\n  }\n\n  const shapeCollectionPool = (function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release,\n    }\n\n    var _length = 0\n    var _maxLength = 4\n    var pool = createSizedArray(_maxLength)\n\n    function newShapeCollection() {\n      var shapeCollection\n      if (_length) {\n        _length -= 1\n        shapeCollection = pool[_length]\n      } else {\n        shapeCollection = new ShapeCollection()\n      }\n      return shapeCollection\n    }\n\n    function release(shapeCollection) {\n      var i\n      var len = shapeCollection._length\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i])\n      }\n      shapeCollection._length = 0\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool)\n        _maxLength *= 2\n      }\n      pool[_length] = shapeCollection\n      _length += 1\n    }\n\n    return ob\n  })()\n\n  const ShapePropertyFactory = (function () {\n    var initFrame = -999999\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex\n      var keyPropS\n      var keyPropE\n      var isHold\n      var j\n      var k\n      var jLen\n      var kLen\n      var perc\n      var vertexValue\n      var kf = this.keyframes\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0]\n        isHold = true\n        iterationIndex = 0\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0]\n        /* if(kf[kf.length - 1].s){\n                keyPropS = kf[kf.length - 1].s[0];\n            }else{\n                keyPropS = kf[kf.length - 2].e[0];\n            } */\n        isHold = true\n      } else {\n        var i = iterationIndex\n        var len = kf.length - 1\n        var flag = true\n        var keyData\n        var nextKeyData\n        var keyframeMetadata\n        while (flag) {\n          keyData = kf[i]\n          nextKeyData = kf[i + 1]\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break\n          }\n          if (i < len - 1) {\n            i += 1\n          } else {\n            flag = false\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {}\n        isHold = keyData.h === 1\n        iterationIndex = i\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0\n          } else {\n            var fnc\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get\n              keyframeMetadata.__fnct = fnc\n            }\n            perc = fnc(\n              (frameNum - (keyData.t - this.offsetTime)) /\n                (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)),\n            )\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0]\n        }\n        keyPropS = keyData.s[0]\n      }\n      jLen = previousValue._length\n      kLen = keyPropS.i[0].length\n      caching.lastIndex = iterationIndex\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc\n          previousValue.i[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc\n          previousValue.o[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc\n          previousValue.v[j][k] = vertexValue\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      var lastFrame = this._caching.lastFrame\n      if (\n        !(\n          lastFrame !== initFrame &&\n          ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime))\n        )\n      ) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0\n        this.interpolateShape(frameNum, this.pv, this._caching)\n        /// /\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false\n      }\n      var i\n      var len = shape1._length\n      for (i = 0; i < len; i += 1) {\n        if (\n          shape1.v[i][0] !== shape2.v[i][0] ||\n          shape1.v[i][1] !== shape2.v[i][1] ||\n          shape1.o[i][0] !== shape2.o[i][0] ||\n          shape1.o[i][1] !== shape2.o[i][1] ||\n          shape1.i[i][0] !== shape2.i[i][0] ||\n          shape1.i[i][1] !== shape2.i[i][1]\n        ) {\n          return false\n        }\n      }\n      return true\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath)\n        this.localShapeCollection.releaseShapes()\n        this.localShapeCollection.addShape(this.v)\n        this._mdf = true\n        this.paths = this.localShapeCollection\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = false\n      var finalValue\n      if (this.kf) {\n        finalValue = this.pv\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k\n      } else {\n        finalValue = this.data.pt.k\n      }\n      var i\n      var len = this.effectsSequence.length\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.container = elem\n      this.elem = elem\n      this.data = data\n      this.k = false\n      this.kf = false\n      this._mdf = false\n      var pathData = type === 3 ? data.pt.k : data.ks.k\n      this.v = shapePool.clone(pathData)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.reset = resetShape\n      this.effectsSequence = []\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape\n    ShapeProperty.prototype.getValue = processEffectsSequence\n    ShapeProperty.prototype.setVValue = setVValue\n    ShapeProperty.prototype.addEffect = addEffect\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.elem = elem\n      this.container = elem\n      this.offsetTime = elem.data.st\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k\n      this.keyframesMetadata = []\n      this.k = true\n      this.kf = true\n      var len = this.keyframes[0].s[0].i.length\n      this.v = shapePool.newElement()\n      this.v.setPathData(this.keyframes[0].s[0].c, len)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.lastFrame = initFrame\n      this.reset = resetShape\n      this._caching = { lastFrame: initFrame, lastIndex: 0 }\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)]\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape\n    KeyframedShapeProperty.prototype.setVValue = setVValue\n    KeyframedShapeProperty.prototype.addEffect = addEffect\n\n    var EllShapeProperty = (function () {\n      var cPoint = roundCorner\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 4)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.paths = this.localShapeCollection\n        this.localShapeCollection.addShape(this.v)\n        this.d = data.d\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertEllToPath()\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n\n          if (this._mdf) {\n            this.convertEllToPath()\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var s0 = this.s.v[0] / 2\n          var s1 = this.s.v[1] / 2\n          var _cw = this.d !== 3\n          var _v = this.v\n          _v.v[0][0] = p0\n          _v.v[0][1] = p1 - s1\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.v[1][1] = p1\n          _v.v[2][0] = p0\n          _v.v[2][1] = p1 + s1\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.v[3][1] = p1\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.i[0][1] = p1 - s1\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.i[1][1] = p1 - s1 * cPoint\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.i[2][1] = p1 + s1\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.i[3][1] = p1 + s1 * cPoint\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.o[0][1] = p1 - s1\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.o[1][1] = p1 + s1 * cPoint\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.o[2][1] = p1 + s1\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.o[3][1] = p1 - s1 * cPoint\n        },\n      }\n\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory)\n\n      return EllShapePropertyFactory\n    })()\n\n    var StarShapeProperty = (function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 0)\n        this.elem = elem\n        this.comp = elem.comp\n        this.data = data\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this)\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this)\n          this.convertToPath = this.convertStarToPath\n        } else {\n          this.convertToPath = this.convertPolygonToPath\n        }\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this)\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this)\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertToPath()\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertToPath()\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2\n          var angle = (Math.PI * 2) / numPts\n          /* this.v.v.length = numPts;\n                this.v.i.length = numPts;\n                this.v.o.length = numPts; */\n          var longFlag = true\n          var longRad = this.or.v\n          var shortRad = this.ir.v\n          var longRound = this.os.v\n          var shortRound = this.is.v\n          var longPerimSegment = (2 * Math.PI * longRad) / (numPts * 2)\n          var shortPerimSegment = (2 * Math.PI * shortRad) / (numPts * 2)\n          var i\n          var rad\n          var roundness\n          var perimSegment\n          var currentAng = -Math.PI / 2\n          currentAng += this.r.v\n          var dir = this.data.d === 3 ? -1 : 1\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad\n            roundness = longFlag ? longRound : shortRound\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n\n            /* this.v.v[i] = [x,y];\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\n                    this.v._length = numPts; */\n            longFlag = !longFlag\n            currentAng += angle * dir\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v)\n          var angle = (Math.PI * 2) / numPts\n          var rad = this.or.v\n          var roundness = this.os.v\n          var perimSegment = (2 * Math.PI * rad) / (numPts * 4)\n          var i\n          var currentAng = -Math.PI * 0.5\n          var dir = this.data.d === 3 ? -1 : 1\n          currentAng += this.r.v\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n            currentAng += angle * dir\n          }\n          this.paths.length = 0\n          this.paths[0] = this.v\n        },\n      }\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory)\n\n      return StarShapePropertyFactory\n    })()\n\n    var RectShapeProperty = (function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.c = true\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertRectToPath()\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var v0 = this.s.v[0] / 2\n          var v1 = this.s.v[1] / 2\n          var round = bmMin(v0, v1, this.r.v)\n          var cPoint = round * (1 - roundCorner)\n          this.v._length = 0\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true)\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2)\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3)\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true)\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertRectToPath()\n          }\n        },\n        reset: resetShape,\n      }\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory)\n\n      return RectShapePropertyFactory\n    })()\n\n    function getShapeProp(elem, data, type) {\n      var prop\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks\n        var keys = dataProp.k\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type)\n        } else {\n          prop = new ShapeProperty(elem, data, type)\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data)\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data)\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty\n    }\n\n    var ob = {}\n    ob.getShapeProp = getShapeProp\n    ob.getConstructorFunction = getConstructorFunction\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction\n    return ob\n  })()\n\n  /*!\n Transformation Matrix v2.0\n (c) Epistemex 2014-2015\n www.epistemex.com\n By Ken Fyrstenberg\n Contributions by leeoniya.\n License: MIT, header required.\n */\n\n  /**\n   * 2D transformation matrix object initialized with identity matrix.\n   *\n   * The matrix can synchronize a canvas context by supplying the context\n   * as an argument, or later apply current absolute transform to an\n   * existing context.\n   *\n   * All values are handled as floating point values.\n   *\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\n   * @prop {number} a - scale x\n   * @prop {number} b - shear y\n   * @prop {number} c - shear x\n   * @prop {number} d - scale y\n   * @prop {number} e - translate x\n   * @prop {number} f - translate y\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\n   * @constructor\n   */\n\n  const Matrix = (function () {\n    var _cos = Math.cos\n    var _sin = Math.sin\n    var _tan = Math.tan\n    var _rnd = Math.round\n\n    function reset() {\n      this.props[0] = 1\n      this.props[1] = 0\n      this.props[2] = 0\n      this.props[3] = 0\n      this.props[4] = 0\n      this.props[5] = 1\n      this.props[6] = 0\n      this.props[7] = 0\n      this.props[8] = 0\n      this.props[9] = 0\n      this.props[10] = 1\n      this.props[11] = 0\n      this.props[12] = 0\n      this.props[13] = 0\n      this.props[14] = 0\n      this.props[15] = 1\n      return this\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0)\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay))\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n      // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1)\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a\n      this.props[1] = b\n      this.props[2] = c\n      this.props[3] = d\n      this.props[4] = e\n      this.props[5] = f\n      this.props[6] = g\n      this.props[7] = h\n      this.props[8] = i\n      this.props[9] = j\n      this.props[10] = k\n      this.props[11] = l\n      this.props[12] = m\n      this.props[13] = n\n      this.props[14] = o\n      this.props[15] = p\n      return this\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1)\n      }\n      return this\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props\n\n      if (\n        a2 === 1 &&\n        b2 === 0 &&\n        c2 === 0 &&\n        d2 === 0 &&\n        e2 === 0 &&\n        f2 === 1 &&\n        g2 === 0 &&\n        h2 === 0 &&\n        i2 === 0 &&\n        j2 === 0 &&\n        k2 === 1 &&\n        l2 === 0\n      ) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2\n        _p[13] = _p[13] * f2 + _p[15] * n2\n        _p[14] = _p[14] * k2 + _p[15] * o2\n        _p[15] *= p2\n        // }\n        this._identityCalculated = false\n        return this\n      }\n\n      var a1 = _p[0]\n      var b1 = _p[1]\n      var c1 = _p[2]\n      var d1 = _p[3]\n      var e1 = _p[4]\n      var f1 = _p[5]\n      var g1 = _p[6]\n      var h1 = _p[7]\n      var i1 = _p[8]\n      var j1 = _p[9]\n      var k1 = _p[10]\n      var l1 = _p[11]\n      var m1 = _p[12]\n      var n1 = _p[13]\n      var o1 = _p[14]\n      var p1 = _p[15]\n\n      /* matrix order (canvas compatible):\n       * ace\n       * bdf\n       * 001\n       */\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2\n\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2\n\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2\n\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2\n\n      this._identityCalculated = false\n      return this\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(\n          this.props[0] !== 1 ||\n          this.props[1] !== 0 ||\n          this.props[2] !== 0 ||\n          this.props[3] !== 0 ||\n          this.props[4] !== 0 ||\n          this.props[5] !== 1 ||\n          this.props[6] !== 0 ||\n          this.props[7] !== 0 ||\n          this.props[8] !== 0 ||\n          this.props[9] !== 0 ||\n          this.props[10] !== 1 ||\n          this.props[11] !== 0 ||\n          this.props[12] !== 0 ||\n          this.props[13] !== 0 ||\n          this.props[14] !== 0 ||\n          this.props[15] !== 1\n        )\n        this._identityCalculated = true\n      }\n      return this._identity\n    }\n\n    function equals(matr) {\n      var i = 0\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false\n        }\n        i += 1\n      }\n      return true\n    }\n\n    function clone(matr) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i]\n      }\n      return matr\n    }\n\n    function cloneFromProps(props) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i]\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n      }\n      /* return {\n         x: x * me.a + y * me.c + me.e,\n         y: x * me.b + y * me.d + me.f\n         }; */\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4]\n      var a = this.props[5] / determinant\n      var b = -this.props[1] / determinant\n      var c = -this.props[4] / determinant\n      var d = this.props[0] / determinant\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant\n      var inverseMatrix = new Matrix()\n      inverseMatrix.props[0] = a\n      inverseMatrix.props[1] = b\n      inverseMatrix.props[4] = c\n      inverseMatrix.props[5] = d\n      inverseMatrix.props[12] = e\n      inverseMatrix.props[13] = f\n      return inverseMatrix\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix()\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)\n    }\n\n    function inversePoints(pts) {\n      var i\n      var len = pts.length\n      var retPts = []\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i])\n      }\n      return retPts\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6)\n      if (this.isIdentity()) {\n        arr[0] = pt1[0]\n        arr[1] = pt1[1]\n        arr[2] = pt2[0]\n        arr[3] = pt2[1]\n        arr[4] = pt3[0]\n        arr[5] = pt3[1]\n      } else {\n        var p0 = this.props[0]\n        var p1 = this.props[1]\n        var p4 = this.props[4]\n        var p5 = this.props[5]\n        var p12 = this.props[12]\n        var p13 = this.props[13]\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13\n      }\n      return arr\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr\n      if (this.isIdentity()) {\n        arr = [x, y, z]\n      } else {\n        arr = [\n          x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n          x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n          x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n        ]\n      }\n      return arr\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y\n      }\n      var _p = this.props\n      return (\n        Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 +\n        ',' +\n        Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100\n      )\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var i = 0\n      var props = this.props\n      var cssValue = 'matrix3d('\n      var v = 10000\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v\n        cssValue += i === 15 ? ')' : ','\n        i += 1\n      }\n      return cssValue\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000\n      if ((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\n        return _rnd(val * v) / v\n      }\n      return val\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var props = this.props\n      var _a = roundMatrixProperty(props[0])\n      var _b = roundMatrixProperty(props[1])\n      var _c = roundMatrixProperty(props[4])\n      var _d = roundMatrixProperty(props[5])\n      var _e = roundMatrixProperty(props[12])\n      var _f = roundMatrixProperty(props[13])\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')'\n    }\n\n    return function () {\n      this.reset = reset\n      this.rotate = rotate\n      this.rotateX = rotateX\n      this.rotateY = rotateY\n      this.rotateZ = rotateZ\n      this.skew = skew\n      this.skewFromAxis = skewFromAxis\n      this.shear = shear\n      this.scale = scale\n      this.setTransform = setTransform\n      this.translate = translate\n      this.transform = transform\n      this.applyToPoint = applyToPoint\n      this.applyToX = applyToX\n      this.applyToY = applyToY\n      this.applyToZ = applyToZ\n      this.applyToPointArray = applyToPointArray\n      this.applyToTriplePoints = applyToTriplePoints\n      this.applyToPointStringified = applyToPointStringified\n      this.toCSS = toCSS\n      this.to2dCSS = to2dCSS\n      this.clone = clone\n      this.cloneFromProps = cloneFromProps\n      this.equals = equals\n      this.inversePoints = inversePoints\n      this.inversePoint = inversePoint\n      this.getInverseMatrix = getInverseMatrix\n      this._t = this.transform\n      this.isIdentity = isIdentity\n      this._identity = true\n      this._identityCalculated = false\n\n      this.props = createTypedArray('float32', 16)\n      this.reset()\n    }\n  })()\n\n  const lottie = {}\n  var standalone = '__[STANDALONE]__'\n  var animationData = '__[ANIMATIONDATA]__'\n  var renderer = ''\n\n  function setLocation(href) {\n    setLocationHref(href)\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer)\n    } else {\n      animationManager.searchAnimations()\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag)\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix)\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData)\n    }\n    return animationManager.loadAnimation(params)\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200)\n          break\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50)\n          break\n        case 'low':\n          setDefaultCurveSegments(10)\n          break\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value)\n    }\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false)\n    } else {\n      roundValues(true)\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined'\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin)\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory\n      case 'matrix':\n        return Matrix\n      default:\n        return null\n    }\n  }\n\n  lottie.play = animationManager.play\n  lottie.pause = animationManager.pause\n  lottie.setLocationHref = setLocation\n  lottie.togglePause = animationManager.togglePause\n  lottie.setSpeed = animationManager.setSpeed\n  lottie.setDirection = animationManager.setDirection\n  lottie.stop = animationManager.stop\n  lottie.searchAnimations = searchAnimations\n  lottie.registerAnimation = animationManager.registerAnimation\n  lottie.loadAnimation = loadAnimation\n  lottie.setSubframeRendering = setSubframeRendering\n  lottie.resize = animationManager.resize\n  // lottie.start = start;\n  lottie.goToAndStop = animationManager.goToAndStop\n  lottie.destroy = animationManager.destroy\n  lottie.setQuality = setQuality\n  lottie.inBrowser = inBrowser\n  lottie.installPlugin = installPlugin\n  lottie.freeze = animationManager.freeze\n  lottie.unfreeze = animationManager.unfreeze\n  lottie.setVolume = animationManager.setVolume\n  lottie.mute = animationManager.mute\n  lottie.unmute = animationManager.unmute\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations\n  lottie.useWebWorker = setWebWorker\n  lottie.setIDPrefix = setPrefix\n  lottie.__getFactory = getFactory\n  lottie.version = '[[BM_VERSION]]'\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval)\n      searchAnimations()\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&')\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=')\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1])\n      }\n    }\n    return null\n  }\n  var queryString = ''\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script')\n    var index = scripts.length - 1\n    var myScript = scripts[index] || {\n      src: '',\n    }\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : '' // eslint-disable-line no-useless-escape\n    renderer = getQueryVariable('renderer')\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100)\n\n  // this adds bodymovin to the window object for backwards compatibility\n  try {\n    if (\n      !(typeof exports === 'object' && typeof module !== 'undefined') &&\n      !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie\n    }\n  } catch (err) {\n    //\n  }\n\n  const ShapeModifiers = (function () {\n    var ob = {}\n    var modifiers = {}\n    ob.registerModifier = registerModifier\n    ob.getModifier = getModifier\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data)\n    }\n\n    return ob\n  })()\n\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {}\n  ShapeModifier.prototype.addShapeToModifier = function () {}\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh)\n      var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollectionPool.newShapeCollection() }\n      this.shapes.push(shapeData)\n      this.addShapeToModifier(shapeData)\n      if (this._isAnimated) {\n        data.setAsAnimated()\n      }\n    }\n  }\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = []\n    this.elem = elem\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, data)\n    this.frameId = initialDefaultFrame\n    this.closed = false\n    this.k = false\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier)\n\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier)\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this)\n    this.sValue = 0\n    this.eValue = 0\n    this.getValue = this.processKeys\n    this.m = data.m\n    this._isAnimated =\n      !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length\n  }\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = []\n  }\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = []\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e,\n      })\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1,\n      })\n    } else {\n      segments.push({\n        s: s,\n        e: 1,\n      })\n      segments.push({\n        s: 0,\n        e: e - 1,\n      })\n    }\n    var shapeSegments = []\n    var i\n    var len = segments.length\n    var segmentOb\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i]\n      if (\n        !(\n          segmentOb.e * totalModifierLength < addedLength ||\n          segmentOb.s * totalModifierLength > addedLength + shapeLength\n        )\n      ) {\n        var shapeS\n        var shapeE\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength\n        }\n        shapeSegments.push([shapeS, shapeE])\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0])\n    }\n    return shapeSegments\n  }\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i\n    var len = pathsData.length\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i])\n    }\n    pathsData.length = 0\n    return pathsData\n  }\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s\n    var e\n    if (this._mdf || _isFirstFrame) {\n      var o = (this.o.v % 360) / 360\n      if (o < 0) {\n        o += 1\n      }\n      if (this.s.v > 1) {\n        s = 1 + o\n      } else if (this.s.v < 0) {\n        s = 0 + o\n      } else {\n        s = this.s.v + o\n      }\n      if (this.e.v > 1) {\n        e = 1 + o\n      } else if (this.e.v < 0) {\n        e = 0 + o\n      } else {\n        e = this.e.v + o\n      }\n\n      if (s > e) {\n        var _s = s\n        s = e\n        e = _s\n      }\n      s = Math.round(s * 10000) * 0.0001\n      e = Math.round(e * 10000) * 0.0001\n      this.sValue = s\n      this.eValue = e\n    } else {\n      s = this.sValue\n      e = this.eValue\n    }\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var pathsData\n    var pathData\n    var totalShapeLength\n    var totalModifierLength = 0\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes()\n        this.shapes[i].shape._mdf = true\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0\n        }\n      }\n    } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {\n      var segments = []\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection\n        } else {\n          shapePaths = shapeData.shape.paths\n          jLen = shapePaths._length\n          totalShapeLength = 0\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData)\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j])\n              pathsData.push(pathData)\n              totalShapeLength += pathData.totalLength\n            }\n            shapeData.totalShapeLength = totalShapeLength\n            shapeData.pathsData = pathsData\n          }\n\n          totalModifierLength += totalShapeLength\n          shapeData.shape._mdf = true\n        }\n      }\n      var shapeS = s\n      var shapeE = e\n      var addedLength = 0\n      var edges\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i]\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection\n          localShapeCollection.releaseShapes()\n          // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength)\n            addedLength += shapeData.totalShapeLength\n          } else {\n            edges = [[shapeS, shapeE]]\n          }\n          jLen = edges.length\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0]\n            shapeE = edges[j][1]\n            segments.length = 0\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE,\n              })\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength,\n              })\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0])\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1]\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop()\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape)\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1])\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection)\n            }\n          }\n          shapeData.shape.paths = localShapeCollection\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0\n        this.shapes[i].shape._mdf = true\n      }\n    }\n  }\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i\n    var len = newPaths.length\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i])\n    }\n  }\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos)\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos)\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos)\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos)\n    }\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData\n    var shapePaths = shapeData.shape.paths.shapes\n    var i\n    var len = shapeData.shape.paths._length\n    var j\n    var jLen\n    var addedLength = 0\n    var currentLengthData\n    var segmentCount\n    var lengths\n    var segment\n    var shapes = []\n    var initPos\n    var newShape = true\n    if (!shapePath) {\n      shapePath = shapePool.newElement()\n      segmentCount = 0\n      initPos = 0\n    } else {\n      segmentCount = shapePath._length\n      initPos = shapePath._length\n    }\n    shapes.push(shapePath)\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths\n      shapePath.c = shapePaths[i].c\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength\n          shapePath.c = false\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false\n          break\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              shapePaths[i].v[j],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[j],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              (shapeSegment.s - addedLength) / currentLengthData.addedLength,\n              (shapeSegment.e - addedLength) / currentLengthData.addedLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n          addedLength += currentLengthData.addedLength\n          segmentCount += 1\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              shapePaths[i].v[0],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[0],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              (shapeSegment.s - addedLength) / segmentLength,\n              (shapeSegment.e - addedLength) / segmentLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n        } else {\n          shapePath.c = false\n        }\n        addedLength += currentLengthData.addedLength\n        segmentCount += 1\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos)\n        shapePath.setXYAt(\n          shapePath.v[shapePath._length - 1][0],\n          shapePath.v[shapePath._length - 1][1],\n          'o',\n          shapePath._length - 1,\n        )\n      }\n      if (addedLength > shapeSegment.e) {\n        break\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement()\n        newShape = true\n        shapes.push(shapePath)\n        segmentCount = 0\n      }\n    }\n    return shapes\n  }\n\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier)\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this)\n    this._isAnimated = !!this.amount.effectsSequence.length\n  }\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100\n    var centerPoint = [0, 0]\n    var pathLength = path._length\n    var i = 0\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0]\n      centerPoint[1] += path.v[i][1]\n    }\n    centerPoint[0] /= pathLength\n    centerPoint[1] /= pathLength\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i)\n    }\n    return clonedPath\n  }\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var amount = this.amount.v\n\n    if (amount !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  const TransformPropertyFactory = (function () {\n    var defaultVector = [0, 0]\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf\n      this.iterateDynamicProperties()\n      this._mdf = this._mdf || _mdf\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v)\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v)\n      } else {\n        mat\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v)\n        } else {\n          mat.translate(this.px.v, this.py.v, 0)\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix()\n        this._isDirty = false\n      }\n\n      this.iterateDynamicProperties()\n\n      if (this._mdf || forceRender) {\n        var frameRate\n        this.v.cloneFromProps(this.pre.props)\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v)\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v)\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v\n            .rotateZ(-this.rz.v)\n            .rotateY(this.ry.v)\n            .rotateX(this.rx.v)\n            .rotateZ(-this.or.v[2])\n            .rotateY(this.or.v[1])\n            .rotateX(this.or.v[0])\n        }\n        if (this.autoOriented) {\n          var v1\n          var v2\n          frameRate = this.elem.globalData.frameRate\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0)\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0)\n            } else if (\n              this.p._caching.lastFrame + this.p.offsetTime >=\n              this.p.keyframes[this.p.keyframes.length - 1].t\n            ) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0)\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0)\n            } else {\n              v1 = this.p.pv\n              v2 = this.p.getValueAtTime(\n                (this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate,\n                this.p.offsetTime,\n              )\n            }\n          } else if (\n            this.px &&\n            this.px.keyframes &&\n            this.py.keyframes &&\n            this.px.getValueAtTime &&\n            this.py.getValueAtTime\n          ) {\n            v1 = []\n            v2 = []\n            var px = this.px\n            var py = this.py\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0)\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0)\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0)\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0)\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0)\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0)\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0)\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0)\n            } else {\n              v1 = [px.pv, py.pv]\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime)\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime)\n            }\n          } else {\n            v2 = defaultVector\n            v1 = v2\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]))\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v)\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0)\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n        }\n      }\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        this.appliedTransformations = 1\n      } else {\n        return\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        this.appliedTransformations = 2\n      } else {\n        return\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v)\n          this.appliedTransformations = 3\n        } else {\n          return\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v)\n          this.appliedTransformations = 4\n        }\n      } else if (\n        !this.rz.effectsSequence.length &&\n        !this.ry.effectsSequence.length &&\n        !this.rx.effectsSequence.length &&\n        !this.or.effectsSequence.length\n      ) {\n        this.pre\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n        this.appliedTransformations = 4\n      }\n    }\n\n    function autoOrient() {\n      //\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop)\n      this.elem.addDynamicProperty(prop)\n      this._isDirty = true\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem\n      this.frameId = -1\n      this.propType = 'transform'\n      this.data = data\n      this.v = new Matrix()\n      // Precalculated matrix with non animated properties\n      this.pre = new Matrix()\n      this.appliedTransformations = 0\n      this.initDynamicPropertyContainer(container || elem)\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this)\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this)\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this)\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this)\n      }\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this)\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this)\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this)\n        if (data.or.k[0].ti) {\n          var i\n          var len = data.or.k.length\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null\n            data.or.k[i].ti = null\n          }\n        }\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this)\n        // sh Indicates it needs to be capped between -180 and 180\n        this.or.sh = true\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this)\n      }\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this)\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this)\n      }\n      this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this)\n      // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem)\n      } else {\n        this.o = { _mdf: false, v: 1 }\n      }\n      this._isDirty = true\n      if (!this.dynamicProperties.length) {\n        this.getValue(true)\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient,\n    }\n\n    extendPrototype([DynamicPropertyContainer], TransformProperty)\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container)\n    }\n\n    return {\n      getTransformProperty: getTransformProperty,\n    }\n  })()\n\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier)\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this)\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this)\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this)\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this)\n    this.data = data\n    if (!this.dynamicProperties.length) {\n      this.getValue(true)\n    }\n    this._isAnimated = !!this.dynamicProperties.length\n    this.pMatrix = new Matrix()\n    this.rMatrix = new Matrix()\n    this.sMatrix = new Matrix()\n    this.tMatrix = new Matrix()\n    this.matrix = new Matrix()\n  }\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc)\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc)\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2])\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    rMatrix.rotate(-transform.r.v * dir * perc)\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY)\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n  }\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem\n    this.arr = arr\n    this.pos = pos\n    this.elemsData = elemsData\n    this._currentCopies = 0\n    this._elements = []\n    this._groups = []\n    this.frameId = -1\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, arr[pos])\n    while (pos > 0) {\n      pos -= 1\n      // this._elements.unshift(arr.splice(pos,1)[0]);\n      this._elements.unshift(arr[pos])\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements))\n    this.resetElements(newElements)\n    return newElements\n  }\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items\n    var itemsTransform\n    var i\n    var dir\n    var cont\n    var hasReloaded = false\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v)\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr',\n          }\n          group.it.push({\n            a: { a: 0, ix: 1, k: [0, 0] },\n            nm: 'Transform',\n            o: { a: 0, ix: 7, k: 100 },\n            p: { a: 0, ix: 2, k: [0, 0] },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [\n                { s: 0, e: 0, t: 0 },\n                { s: 0, e: 0, t: 1 },\n              ],\n            },\n            s: { a: 0, ix: 3, k: [100, 100] },\n            sa: { a: 0, ix: 5, k: 0 },\n            sk: { a: 0, ix: 4, k: 0 },\n            ty: 'tr',\n          })\n\n          this.arr.splice(0, 0, group)\n          this._groups.splice(0, 0, group)\n          this._currentCopies += 1\n        }\n        this.elem.reloadShapes()\n        hasReloaded = true\n      }\n      cont = 0\n      var renderFlag\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies\n        this._groups[i]._render = renderFlag\n        this.changeGroupRender(this._groups[i].it, renderFlag)\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it\n          var transformData = elems[elems.length - 1]\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true\n            transformData.transform.op.v = 0\n          } else {\n            transformData.transform.op._mdf = false\n          }\n        }\n        cont += 1\n      }\n\n      this._currentCopies = copies\n      /// /\n\n      var offset = this.o.v\n      var offsetModulo = offset % 1\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset)\n      var pProps = this.pMatrix.props\n      var rProps = this.rMatrix.props\n      var sProps = this.sMatrix.props\n      this.pMatrix.reset()\n      this.rMatrix.reset()\n      this.sMatrix.reset()\n      this.tMatrix.reset()\n      this.matrix.reset()\n      var iteration = 0\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          iteration += 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false)\n          iteration += offsetModulo\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true)\n          iteration -= 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true)\n          iteration -= offsetModulo\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1\n      dir = this.data.m === 1 ? 1 : -1\n      cont = this._currentCopies\n      var j\n      var jLen\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        jLen = itemsTransform.length\n        items[items.length - 1].transform.mProps._mdf = true\n        items[items.length - 1].transform.op._mdf = true\n        items[items.length - 1].transform.op.v =\n          this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1))\n\n        if (iteration !== 0) {\n          if ((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          }\n          this.matrix.transform(\n            rProps[0],\n            rProps[1],\n            rProps[2],\n            rProps[3],\n            rProps[4],\n            rProps[5],\n            rProps[6],\n            rProps[7],\n            rProps[8],\n            rProps[9],\n            rProps[10],\n            rProps[11],\n            rProps[12],\n            rProps[13],\n            rProps[14],\n            rProps[15],\n          )\n          this.matrix.transform(\n            sProps[0],\n            sProps[1],\n            sProps[2],\n            sProps[3],\n            sProps[4],\n            sProps[5],\n            sProps[6],\n            sProps[7],\n            sProps[8],\n            sProps[9],\n            sProps[10],\n            sProps[11],\n            sProps[12],\n            sProps[13],\n            sProps[14],\n            sProps[15],\n          )\n          this.matrix.transform(\n            pProps[0],\n            pProps[1],\n            pProps[2],\n            pProps[3],\n            pProps[4],\n            pProps[5],\n            pProps[6],\n            pProps[7],\n            pProps[8],\n            pProps[9],\n            pProps[10],\n            pProps[11],\n            pProps[12],\n            pProps[13],\n            pProps[14],\n            pProps[15],\n          )\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n          this.matrix.reset()\n        } else {\n          this.matrix.reset()\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n        }\n        iteration += 1\n        cont -= 1\n        i += dir\n      }\n    } else {\n      cont = this._currentCopies\n      i = 0\n      dir = 1\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        items[items.length - 1].transform.mProps._mdf = false\n        items[items.length - 1].transform.op._mdf = false\n        cont -= 1\n        i += dir\n      }\n    }\n    return hasReloaded\n  }\n\n  RepeaterModifier.prototype.addShape = function () {}\n\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier)\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this)\n    this._isAnimated = !!this.rd.effectsSequence.length\n  }\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var i\n    var len = path._length\n    var currentV\n    var currentI\n    var currentO\n    var closerV\n    var distance\n    var newPosPerc\n    var index = 0\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i]\n      currentO = path.o[i]\n      currentI = path.i[i]\n      if (\n        currentV[0] === currentO[0] &&\n        currentV[1] === currentO[1] &&\n        currentV[0] === currentI[0] &&\n        currentV[1] === currentI[1]\n      ) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index)\n          /* clonedPath.v[index] = currentV;\n                clonedPath.o[index] = currentO;\n                clonedPath.i[index] = currentI; */\n          index += 1\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1]\n          } else {\n            closerV = path.v[i - 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = iX\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc\n          vY = iY\n          oX = vX - (vX - currentV[0]) * roundCorner\n          oY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n\n          if (i === len - 1) {\n            closerV = path.v[0]\n          } else {\n            closerV = path.v[i + 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = oX\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc\n          vY = oY\n          iX = vX - (vX - currentV[0]) * roundCorner\n          iY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n        }\n      } else {\n        clonedPath.setTripleAt(\n          path.v[i][0],\n          path.v[i][1],\n          path.o[i][0],\n          path.o[i][1],\n          path.i[i][0],\n          path.i[i][1],\n          index,\n        )\n        index += 1\n      }\n    }\n    return clonedPath\n  }\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var rd = this.rd.v\n\n    if (rd !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : []\n\n    var fWeight = 'normal'\n    var fStyle = 'normal'\n    var len = styles.length\n    var styleName\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase()\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic'\n          break\n        case 'bold':\n          fWeight = '700'\n          break\n        case 'black':\n          fWeight = '900'\n          break\n        case 'medium':\n          fWeight = '500'\n          break\n        case 'regular':\n        case 'normal':\n          fWeight = '400'\n          break\n        case 'light':\n        case 'thin':\n          fWeight = '200'\n          break\n        default:\n          break\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight,\n    }\n  }\n\n  const FontManager = (function () {\n    var maxWaitingTime = 5000\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: [],\n      },\n    }\n    var combinedCharacters = []\n    // Hindi characters\n    combinedCharacters = combinedCharacters.concat([\n      2304,\n      2305,\n      2306,\n      2307,\n      2362,\n      2363,\n      2364,\n      2364,\n      2366,\n      2367,\n      2368,\n      2369,\n      2370,\n      2371,\n      2372,\n      2373,\n      2374,\n      2375,\n      2376,\n      2377,\n      2378,\n      2379,\n      2380,\n      2381,\n      2382,\n      2383,\n      2387,\n      2388,\n      2389,\n      2390,\n      2391,\n      2402,\n      2403,\n    ])\n\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff']\n\n    var zeroWidthJoiner = [65039, 8205]\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',')\n      var i\n      var len = familyArray.length\n      var enabledFamilies = []\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i])\n        }\n      }\n      return enabledFamilies.join(',')\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span')\n      // Node is invisible to screen readers.\n      parentNode.setAttribute('aria-hidden', true)\n      parentNode.style.fontFamily = family\n      var node = createTag('span')\n      // Characters that vary significantly among different fonts\n      node.innerText = 'giItT1WQy@!-/#'\n      // Visible - so we can measure it - but not on the screen\n      parentNode.style.position = 'absolute'\n      parentNode.style.left = '-10000px'\n      parentNode.style.top = '-10000px'\n      // Large font size makes even subtle changes obvious\n      parentNode.style.fontSize = '300px'\n      // Reset any font properties\n      parentNode.style.fontVariant = 'normal'\n      parentNode.style.fontStyle = 'normal'\n      parentNode.style.fontWeight = 'normal'\n      parentNode.style.letterSpacing = '0'\n      parentNode.appendChild(node)\n      document.body.appendChild(parentNode)\n\n      // Remember width with no applied web font\n      var width = node.offsetWidth\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family\n      return { node: node, w: width, parent: parentNode }\n    }\n\n    function checkLoadedFonts() {\n      var i\n      var len = this.fonts.length\n      var node\n      var w\n      var loadedCount = len\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true\n        } else {\n          node = this.fonts[i].monoCase.node\n          w = this.fonts[i].monoCase.w\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1\n            this.fonts[i].loaded = true\n          } else {\n            node = this.fonts[i].sansCase.node\n            w = this.fonts[i].sansCase.w\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1\n              this.fonts[i].loaded = true\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent)\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent)\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20)\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10)\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas'\n      var helper\n      var fontProps = getFontProperties(fontData)\n      if (engine === 'svg') {\n        var tHelper = createNS('text')\n        tHelper.style.fontSize = '100px'\n        // tHelper.style.fontFamily = fontData.fFamily;\n        tHelper.setAttribute('font-family', fontData.fFamily)\n        tHelper.setAttribute('font-style', fontProps.style)\n        tHelper.setAttribute('font-weight', fontProps.weight)\n        tHelper.textContent = '1'\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit'\n          tHelper.setAttribute('class', fontData.fClass)\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily\n        }\n        def.appendChild(tHelper)\n        helper = tHelper\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d')\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily\n        helper = tCanvasHelper\n      }\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text\n          return helper.getComputedTextLength()\n        }\n        return helper.measureText(text).width\n      }\n      return {\n        measureText: measure,\n      }\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true\n        return\n      }\n      if (this.chars) {\n        this.isLoaded = true\n        this.fonts = fontData.list\n        return\n      }\n      if (!document.body) {\n        this.isLoaded = true\n        fontData.list.forEach((data) => {\n          data.helper = createHelper(data)\n          data.cache = {}\n        })\n        this.fonts = fontData.list\n        return\n      }\n\n      var fontArr = fontData.list\n      var i\n      var len = fontArr.length\n      var _pendingFonts = len\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true\n        var loadedSelector\n        var j\n        fontArr[i].loaded = false\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace')\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif')\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true\n          _pendingFonts -= 1\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll(\n            'style[f-forigin=\"p\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"], style[f-origin=\"3\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"]',\n          )\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style')\n            s.setAttribute('f-forigin', fontArr[i].fOrigin)\n            s.setAttribute('f-origin', fontArr[i].origin)\n            s.setAttribute('f-family', fontArr[i].fFamily)\n            s.type = 'text/css'\n            s.innerText =\n              '@font-face {font-family: ' +\n              fontArr[i].fFamily +\n              \"; font-style: normal; src: url('\" +\n              fontArr[i].fPath +\n              \"');}\"\n            defs.appendChild(s)\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link')\n            l.setAttribute('f-forigin', fontArr[i].fOrigin)\n            l.setAttribute('f-origin', fontArr[i].origin)\n            l.type = 'text/css'\n            l.rel = 'stylesheet'\n            l.href = fontArr[i].fPath\n            document.body.appendChild(l)\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link')\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin)\n            sc.setAttribute('f-origin', fontArr[i].origin)\n            sc.setAttribute('rel', 'stylesheet')\n            sc.setAttribute('href', fontArr[i].fPath)\n            defs.appendChild(sc)\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs)\n        fontArr[i].cache = {}\n        this.fonts.push(fontArr[i])\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100)\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return\n      }\n      if (!this.chars) {\n        this.chars = []\n      }\n      var i\n      var len = chars.length\n      var j\n      var jLen = this.chars.length\n      var found\n      for (i = 0; i < len; i += 1) {\n        j = 0\n        found = false\n        while (j < jLen) {\n          if (\n            this.chars[j].style === chars[i].style &&\n            this.chars[j].fFamily === chars[i].fFamily &&\n            this.chars[j].ch === chars[i].ch\n          ) {\n            found = true\n          }\n          j += 1\n        }\n        if (!found) {\n          this.chars.push(chars[i])\n          jLen += 1\n        }\n      }\n    }\n\n    function getCharData(char, style, font) {\n      var i = 0\n      var len = this.chars.length\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i]\n        }\n        i += 1\n      }\n      if (\n        ((typeof char === 'string' && char.charCodeAt(0) !== 13) || !char) &&\n        console &&\n        console.warn && // eslint-disable-line no-console\n        !this._warned\n      ) {\n        this._warned = true\n        console.warn('Missing character from exported characters list: ', char, style, font) // eslint-disable-line no-console\n      }\n      return emptyChar\n    }\n\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName)\n      var index = char.charCodeAt(0)\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper\n        if (char === ' ') {\n          var doubleSize = tHelper.measureText('|' + char + '|')\n          var singleSize = tHelper.measureText('||')\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(char) / 100\n        }\n      }\n      return fontData.cache[index + 1] * size\n    }\n\n    function getFontByName(name) {\n      var i = 0\n      var len = this.fonts.length\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i]\n        }\n        i += 1\n      }\n      return this.fonts[0]\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16)\n      return surrogateModifiers.indexOf(sum) !== -1\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1]\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1]\n    }\n\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true\n    }\n\n    var Font = function () {\n      this.fonts = []\n      this.chars = null\n      this.typekitLoaded = 0\n      this.isLoaded = false\n      this._warned = false\n      this.initTime = Date.now()\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this)\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)\n    }\n    Font.isModifier = isModifier\n    Font.isZeroWidthJoiner = isZeroWidthJoiner\n    Font.isCombinedCharacter = isCombinedCharacter\n\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded,\n    }\n\n    Font.prototype = fontPrototype\n\n    return Font\n  })()\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false\n      // layer's display state\n      this.hidden = false\n      // If layer's transparency equals 0, it can be hidden\n      this.isTransparent = false\n      // list of animated components\n      this.renderableComponents = []\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component)\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1)\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num)\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true\n          this.hide()\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false\n        this.show()\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true\n          this._mdf = true\n          this.isInRange = true\n          this.show()\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true\n        this.isInRange = false\n        this.hide()\n      }\n    },\n    renderRenderable: function () {\n      var i\n      var len = this.renderableComponents.length\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame)\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n      }\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return { w: this.data.textData.width, h: this.data.textData.height }\n      }\n      return { w: this.data.width, h: this.data.height }\n    },\n  }\n\n  const MaskManagerInterface = (function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask\n      this._data = data\n    }\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue()\n        }\n        return this._mask.prop\n      },\n    })\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue()\n        }\n        return this._mask.op.v * 100\n      },\n    })\n\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length)\n      var i\n      var len = maskManager.viewData.length\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i])\n      }\n\n      var maskFunction = function (name) {\n        i = 0\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      return maskFunction\n    }\n    return MaskManager\n  })()\n\n  const ExpressionPropertyInterface = (function () {\n    var defaultUnidimensionalValue = { pv: 0, v: 0, mult: 1 }\n    var defaultMultidimensionalValue = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 }\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function () {\n          return property.getVelocityAtTime(property.comp.currentFrame)\n        },\n      })\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0\n        }\n        var value = ''\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e\n        } else {\n          value = property.keyframes[pos - 2].s\n        }\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value) // eslint-disable-line no-new-wrappers\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate\n        valueProp.value = type === 'unidimensional' ? value[0] : value\n        return valueProp\n      }\n      expressionValue.valueAtTime = property.getValueAtTime\n      expressionValue.speedAtTime = property.getSpeedAtTime\n      expressionValue.velocityAtTime = property.getVelocityAtTime\n      expressionValue.propertyGroup = property.propertyGroup\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var val = property.pv * mult\n      var expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n      expressionValue.value = val\n      completeProperty(expressionValue, property, 'unidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        val = property.v * mult\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n          expressionValue.value = val\n          completeProperty(expressionValue, property, 'unidimensional')\n        }\n        return expressionValue\n      }\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var len = (property.data && property.data.l) || property.pv.length\n      var expressionValue = createTypedArray('float32', len)\n      var arrValue = createTypedArray('float32', len)\n      expressionValue.value = arrValue\n      completeProperty(expressionValue, property, 'multidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult\n          expressionValue[i] = arrValue[i]\n        }\n        return expressionValue\n      }\n    }\n\n    // TODO: try to avoid using this getter\n    function defaultGetter() {\n      return defaultUnidimensionalValue\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter\n      }\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property)\n      }\n      return MultidimensionalPropertyInterface(property)\n    }\n  })()\n\n  const TransformExpressionInterface = (function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz),\n      })\n\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r),\n      })\n\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx),\n      })\n\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry),\n      })\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s),\n      })\n      var _px\n      var _py\n      var _pz\n      var _transformFactory\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p)\n      } else {\n        _px = ExpressionPropertyInterface(transform.px)\n        _py = ExpressionPropertyInterface(transform.py)\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz)\n        }\n      }\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function () {\n          if (transform.p) {\n            return _transformFactory()\n          }\n          return [_px(), _py(), _pz ? _pz() : 0]\n        },\n      })\n\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px),\n      })\n\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py),\n      })\n\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz),\n      })\n\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a),\n      })\n\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o),\n      })\n\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk),\n      })\n\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa),\n      })\n\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or),\n      })\n\n      return _thisFunction\n    }\n  })()\n\n  const LayerExpressionInterface = (function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix()\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time)\n        propMatrix.clone(toWorldMat)\n      } else {\n        var transformMat = this._elem.finalTransform.mProp\n        transformMat.applyToMatrix(toWorldMat)\n      }\n      return toWorldMat\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0)\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.inversePoint(arr)\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix()\n      toWorldMat.reset()\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat)\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat)\n        }\n        return toWorldMat.inversePoint(arr)\n      }\n      return toWorldMat.inversePoint(arr)\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1]\n    }\n\n    return function (elem) {\n      var transformInterface\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem)\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface\n          default:\n            return null\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix\n      _thisLayerFunction.invertPoint = invertPoint\n      _thisLayerFunction.applyPoint = applyPoint\n      _thisLayerFunction.toWorld = toWorld\n      _thisLayerFunction.toWorldVec = toWorldVec\n      _thisLayerFunction.fromWorld = fromWorld\n      _thisLayerFunction.fromWorldVec = fromWorldVec\n      _thisLayerFunction.toComp = toWorld\n      _thisLayerFunction.fromComp = fromComp\n      _thisLayerFunction.sampleImage = sampleImage\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem)\n      _thisLayerFunction._elem = elem\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp)\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint')\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem.hierarchy.length\n          },\n        },\n        parent: {\n          get: function () {\n            return elem.hierarchy[0].layerInterface\n          },\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface\n          },\n        },\n        active: {\n          get: function () {\n            return elem.isInRange\n          },\n        },\n      })\n\n      _thisLayerFunction.startTime = elem.data.st\n      _thisLayerFunction.index = elem.data.ind\n      _thisLayerFunction.source = elem.data.refId\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate\n      _thisLayerFunction._name = elem.data.nm\n\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface\n      return _thisLayerFunction\n    }\n  })()\n\n  const propertyGroupFactory = (function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return parentPropertyGroup(val - 1)\n      }\n    }\n  })()\n\n  const PropertyInterface = (function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName,\n      }\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return propertyGroup(val - 1)\n      }\n\n      return _propertyGroup\n    }\n  })()\n\n  const EffectsExpressionInterface = (function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface,\n    }\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = []\n        var effectsData = elem.data.ef\n        var i\n        var len = elem.effectsManager.effectElements.length\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(\n            createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem),\n          )\n        }\n\n        var effects = elem.data.ef || []\n        var groupInterface = function (name) {\n          i = 0\n          len = effects.length\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i]\n            }\n            i += 1\n          }\n          return null\n        }\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function () {\n            return effects.length\n          },\n        })\n        return groupInterface\n      }\n      return null\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef\n        var i = 0\n        var len = effects.length\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i]\n            }\n            return effectElements[i]()\n          }\n          i += 1\n        }\n        throw new Error()\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup)\n\n      var effectElements = []\n      var i\n      var len = data.ef.length\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(\n            createGroupInterface(\n              data.ef[i],\n              elements.effectElements[i],\n              elements.effectElements[i].propertyGroup,\n              elem,\n            ),\n          )\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup))\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function () {\n            return effectElements[0]()\n          },\n        })\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data.np\n          },\n        },\n        _name: { value: data.nm },\n        propertyGroup: { value: _propertyGroup },\n      })\n      groupInterface.enabled = data.en !== 0\n      groupInterface.active = groupInterface.enabled\n      return groupInterface\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p)\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v)\n        }\n        return expressionProperty()\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup))\n      }\n\n      return interfaceFunction\n    }\n\n    return ob\n  })()\n\n  const CompExpressionInterface = (function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0\n        var len = comp.layers.length\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface\n          }\n          i += 1\n        }\n        return null\n        // return {active:false};\n      }\n      Object.defineProperty(_thisLayerFunction, '_name', { value: comp.data.nm })\n      _thisLayerFunction.layer = _thisLayerFunction\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate\n      _thisLayerFunction.displayStartTime = 0\n      _thisLayerFunction.numLayers = comp.layers.length\n      return _thisLayerFunction\n    }\n  })()\n\n  const ShapePathInterface = (function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh\n\n      function interfaceFunction(val) {\n        if (\n          val === 'Shape' ||\n          val === 'shape' ||\n          val === 'Path' ||\n          val === 'path' ||\n          val === 'ADBE Vector Shape' ||\n          val === 2\n        ) {\n          return interfaceFunction.path\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        _name: { value: shape.nm },\n        ix: { value: shape.ix },\n        propertyIndex: { value: shape.ix },\n        mn: { value: shape.mn },\n        propertyGroup: { value: propertyGroup },\n      })\n      return interfaceFunction\n    }\n  })()\n\n  const ShapeExpressionInterface = (function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = []\n      var i\n      var len = shapes ? shapes.length : 0\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tr') {\n          // arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup))\n        }\n      }\n      return arr\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (\n            interfaces[i]._name === value ||\n            interfaces[i].mn === value ||\n            interfaces[i].propertyIndex === value ||\n            interfaces[i].ix === value ||\n            interfaces[i].ind === value\n          ) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        if (typeof value === 'number') {\n          return interfaces[value - 1]\n        }\n        return null\n      }\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup)\n      interfaceFunction.numProperties = interfaces.length\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.transform = transformInterface\n      interfaceFunction.propertyIndex = shape.cix\n      interfaceFunction._name = shape.nm\n\n      return interfaceFunction\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n          default:\n            return interfaceFunction.transform\n        }\n      }\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup)\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.content = content\n      interfaceFunction.transform = transformInterface\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function () {\n          return shape.nm\n        },\n      })\n      // interfaceFunction.content = interfaceFunction;\n      interfaceFunction.numProperties = shape.np\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.nm = shape.nm\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint\n        }\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        type: {\n          get: function () {\n            return 'a'\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null\n      }\n      return interfaceFunction\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup)\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p),\n        })\n      }\n      var i\n      var len = shape.d ? shape.d.length : 0\n      var dashOb = {}\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i)\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup)\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w),\n        },\n        dash: {\n          get: function () {\n            return dashOb\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup))\n      return interfaceFunction\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end\n        }\n        if (val === shape.s.ix) {\n          return interfaceFunction.start\n        }\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.propertyGroup = propertyGroup\n\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint\n        }\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity\n        }\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation\n        }\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale\n        }\n        if ((shape.sk && shape.sk.ix === value) || value === 'Skew') {\n          return interfaceFunction.skew\n        }\n        if ((shape.sa && shape.sa.ix === value) || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup))\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup))\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup))\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup))\n      }\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o),\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p),\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a),\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r),\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk),\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.ty = 'tr'\n      interfaceFunction.mn = shape.mn\n      interfaceFunction.propertyGroup = propertyGroup\n      return interfaceFunction\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.s.ix === value) {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation\n        }\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points\n        }\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius\n        }\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness\n        }\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius\n        }\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup))\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup))\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup))\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup))\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt),\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or),\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os),\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir),\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness\n        }\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies\n        }\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup))\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value\n          if (value === 0) {\n            return propertyGroup\n          }\n          return interfaces[value - 1]\n        }\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      function parentGroupWrapper() {\n        return propertyGroup\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper)\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup)\n      _interfaceFunction.numProperties = interfaces.length\n      _interfaceFunction._name = 'Contents'\n      return _interfaceFunction\n    }\n  })()\n\n  const TextExpressionInterface = (function () {\n    return function (elem) {\n      var _prevValue\n      var _sourceText\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function () {\n          elem.textProperty.getValue()\n          var stringValue = elem.textProperty.currentData.t\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue\n            _sourceText = new String(stringValue) // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n            _sourceText.value = stringValue || new String(stringValue) // eslint-disable-line no-new-wrappers\n          }\n          return _sourceText\n        },\n      })\n      return _thisLayerFunction\n    }\n  })()\n\n  const getBlendMode = (function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity',\n    }\n\n    return function (mode) {\n      return blendModeEnums[mode] || ''\n    }\n  })()\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function NoValueEffect() {\n    this.p = {}\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || []\n    this.effectElements = []\n    var i\n    var len = effects.length\n    var effectItem\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element)\n      this.effectElements.push(effectItem)\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element)\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect)\n\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data\n    this.effectElements = []\n    this.initDynamicPropertyContainer(element)\n    var i\n    var len = this.data.ef.length\n    var eff\n    var effects = this.data.ef\n    for (i = 0; i < len; i += 1) {\n      eff = null\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this)\n          break\n        case 1:\n          eff = new AngleEffect(effects[i], element, this)\n          break\n        case 2:\n          eff = new ColorEffect(effects[i], element, this)\n          break\n        case 3:\n          eff = new PointEffect(effects[i], element, this)\n          break\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this)\n          break\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this)\n          break\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this)\n          break\n        case 5:\n          eff = new EffectsManager(effects[i], element, this)\n          break\n        // case 6:\n        default:\n          eff = new NoValueEffect(effects[i], element, this)\n          break\n      }\n      if (eff) {\n        this.effectElements.push(eff)\n      }\n    }\n  }\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false\n      }\n      var i = 0\n      var len = this.data.masksProperties.length\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true\n        }\n        i += 1\n      }\n      return false\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this)\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager)\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface)\n      this.layerInterface.registerEffectsInterface(effectsInterface)\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this)\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(\n          this.shapesData,\n          this.itemsData,\n          this.layerInterface,\n        )\n        this.layerInterface.content = this.layerInterface.shapeInterface\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this)\n        this.layerInterface.text = this.layerInterface.textInterface\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm)\n      var elem = this.baseElement || this.layerElement\n\n      elem.style['mix-blend-mode'] = blendModeValue\n    },\n    initBaseData: function (data, globalData, comp) {\n      this.globalData = globalData\n      this.comp = comp\n      this.data = data\n      this.layerId = createElementID()\n\n      // Stretch factor for old animations missing this property.\n      if (!this.data.sr) {\n        this.data.sr = 1\n      }\n      // effects manager\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties)\n    },\n    getType: function () {\n      return this.type\n    },\n    sourceRectAtTime: function () {},\n  }\n\n  /**\n   * @file\n   * Handles element's layer frame update.\n   * Checks layer in point and out point\n   *\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false\n      // list of animated properties\n      this.dynamicProperties = []\n      // If layer has been modified in current tick this will be true\n      this._mdf = false\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\n          this.dynamicProperties[i].getValue()\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true\n            this._mdf = true\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n      }\n    },\n  }\n\n  const FootageInterface = (function () {\n    var outlineInterfaceFactory = function (elem) {\n      var currentPropertyName = ''\n      var currentProperty = elem.getFootageData()\n      function init() {\n        currentPropertyName = ''\n        currentProperty = elem.getFootageData()\n        return searchProperty\n      }\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value\n          currentProperty = currentProperty[value]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        var propertyNameIndex = value.indexOf(currentPropertyName)\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10)\n          currentProperty = currentProperty[index]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        return ''\n      }\n      return init\n    }\n\n    var dataInterfaceFactory = function (elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface()\n        }\n        return null\n      }\n\n      interfaceFunction._name = 'Outline'\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem)\n      return interfaceFunction\n    }\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface\n        }\n        return null\n      }\n\n      _interfaceFunction._name = 'Data'\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem)\n      return _interfaceFunction\n    }\n  })()\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.footageData = globalData.imageLoader.getAsset(this.assetData)\n    this.initBaseData(data, globalData, comp)\n  }\n\n  FootageElement.prototype.prepareFrame = function () {}\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement)\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  FootageElement.prototype.renderFrame = function () {}\n\n  FootageElement.prototype.destroy = function () {}\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this)\n  }\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData\n  }\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initBaseData(data, globalData, comp)\n    this._isPlaying = false\n    this._canPlay = false\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n    this.audio = this.globalData.audioController.createAudio(assetPath)\n    this._currentTime = 0\n    this.globalData.audioController.addAudio(this)\n    this._volumeMultiplier = 1\n    this._volume = 1\n    this._previousVolume = null\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : { k: [100] }, 1, 0.01, this)\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true)\n    this.prepareProperties(num, true)\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      this._currentTime = timeRemapped\n    } else {\n      this._currentTime = num / this.data.sr\n    }\n    this._volume = this.lv.v[0]\n    var totalVolume = this._volume * this._volumeMultiplier\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume\n      this.audio.volume(totalVolume)\n    }\n  }\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement)\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play()\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n        this._isPlaying = true\n      } else if (\n        !this.audio.playing() ||\n        Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1\n      ) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n      }\n    }\n  }\n\n  AudioElement.prototype.show = function () {\n    // this.audio.play()\n  }\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause()\n    this._isPlaying = false\n  }\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause()\n    this._isPlaying = false\n    this._canPlay = false\n  }\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true\n  }\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue)\n  }\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue\n    this._previousVolume = volumeValue * this._volume\n    this.audio.volume(this._previousVolume)\n  }\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  AudioElement.prototype.destroy = function () {}\n\n  AudioElement.prototype.sourceRectAtTime = function () {}\n\n  AudioElement.prototype.initExpressions = function () {}\n\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i\n    var len = this.layers.length\n    var data\n    this.completeLayers = true\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i]\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i)\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer)\n      case 0:\n        return this.createComp(layer)\n      case 1:\n        return this.createSolid(layer)\n      case 3:\n        return this.createNull(layer)\n      case 4:\n        return this.createShape(layer)\n      case 5:\n        return this.createText(layer)\n      case 6:\n        return this.createAudio(layer)\n      case 13:\n        return this.createCamera(layer)\n      case 15:\n        return this.createFootage(layer)\n      default:\n        return this.createNull(layer)\n    }\n  }\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\")\n  }\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i)\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false\n    var i\n    var len = newLayers.length\n    var j\n    var jLen = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      j = 0\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i]\n          break\n        }\n        j += 1\n      }\n    }\n  }\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface\n  }\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n  }\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements\n    var layers = this.layers\n    var i = 0\n    var len = layers.length\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i)\n          this.addPendingElement(element)\n        } else {\n          hierarchy.push(elements[i])\n          elements[i].setAsParent()\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy)\n          } else {\n            element.setHierarchy(hierarchy)\n          }\n        }\n      }\n      i += 1\n    }\n  }\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element)\n  }\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i\n    var len = assets.length\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i])\n        comp.initExpressions()\n        this.globalData.projectInterface.registerComposition(comp)\n      }\n    }\n  }\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift()\n    var element\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue]\n    } else {\n      var i\n      var len = this.elements.length\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i]\n          break\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element\n    }\n    return element.getElementByPath(path)\n  }\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager()\n    this.globalData.fontManager.addChars(animData.chars)\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer)\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)\n    this.globalData.imageLoader = this.animationItem.imagePreloader\n    this.globalData.audioController = this.animationItem.audioController\n    this.globalData.frameId = 0\n    this.globalData.frameRate = animData.fr\n    this.globalData.nm = animData.nm\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h,\n    }\n  }\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix(),\n      }\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true\n      }\n\n      // TODO: check TYPE 11: Guided elements\n      if (this.data.ty !== 11) {\n        // this.createElements();\n      }\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame\n\n      if (this.hierarchy) {\n        var mat\n        var finalMat = this.finalTransform.mat\n        var i = 0\n        var len = this.hierarchy.length\n        // Checking if any of the transformation matrices in the hierarchy chain has changed.\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true\n              break\n            }\n            i += 1\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props\n          finalMat.cloneFromProps(mat)\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props\n            finalMat.transform(\n              mat[0],\n              mat[1],\n              mat[2],\n              mat[3],\n              mat[4],\n              mat[5],\n              mat[6],\n              mat[7],\n              mat[8],\n              mat[9],\n              mat[10],\n              mat[11],\n              mat[12],\n              mat[13],\n              mat[14],\n              mat[15],\n            )\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = []\n      transforms.push(this.finalTransform)\n      var flag = true\n      var comp = this.comp\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform)\n          }\n          comp = comp.comp\n        } else {\n          flag = false\n        }\n      }\n      var i\n      var len = transforms.length\n      var ptNew\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0)\n        // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0]\n      }\n      return pt\n    },\n    mHelper: new Matrix(),\n  }\n\n  function MaskElement(data, element, globalData) {\n    this.data = data\n    this.element = element\n    this.globalData = globalData\n    this.storedData = []\n    this.masksProperties = this.data.masksProperties || []\n    this.maskElement = null\n    var defs = this.globalData.defs\n    var i\n    var len = this.masksProperties ? this.masksProperties.length : 0\n    this.viewData = createSizedArray(len)\n    this.solidPath = ''\n\n    var path\n    var properties = this.masksProperties\n    var count = 0\n    var currentMasks = []\n    var j\n    var jLen\n    var layerId = createElementID()\n    var rect\n    var expansor\n    var feMorph\n    var x\n    var maskType = 'clipPath'\n    var maskRef = 'clip-path'\n    for (i = 0; i < len; i += 1) {\n      if (\n        (properties[i].mode !== 'a' && properties[i].mode !== 'n') ||\n        properties[i].inv ||\n        properties[i].o.k !== 100 ||\n        properties[i].o.x\n      ) {\n        maskType = 'mask'\n        maskRef = 'mask'\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect')\n        rect.setAttribute('fill', '#ffffff')\n        rect.setAttribute('width', this.element.comp.data.w || 0)\n        rect.setAttribute('height', this.element.comp.data.h || 0)\n        currentMasks.push(rect)\n      } else {\n        rect = null\n      }\n\n      path = createNS('path')\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: '',\n        }\n        defs.appendChild(path)\n      } else {\n        count += 1\n\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        path.setAttribute('clip-rule', 'nonzero')\n        var filterID\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask'\n          maskRef = 'mask'\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element)\n          filterID = createElementID()\n          expansor = createNS('filter')\n          expansor.setAttribute('id', filterID)\n          feMorph = createNS('feMorphology')\n          feMorph.setAttribute('operator', 'erode')\n          feMorph.setAttribute('in', 'SourceGraphic')\n          feMorph.setAttribute('radius', '0')\n          expansor.appendChild(feMorph)\n          defs.appendChild(expansor)\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        } else {\n          feMorph = null\n          x = null\n        }\n\n        // TODO move this to a factory or to a constructor\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0,\n        }\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length\n          var g = createNS('g')\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j])\n          }\n          var mask = createNS('mask')\n          mask.setAttribute('mask-type', 'alpha')\n          mask.setAttribute('id', layerId + '_' + count)\n          mask.appendChild(path)\n          defs.appendChild(mask)\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')')\n\n          currentMasks.length = 0\n          currentMasks.push(g)\n        } else {\n          currentMasks.push(path)\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath()\n        }\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect,\n        }\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i])\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType)\n\n    len = currentMasks.length\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i])\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId)\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')')\n      defs.appendChild(this.maskElement)\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop\n  }\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat\n    var i\n    var len = this.masksProperties.length\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i])\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v)\n      }\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode'\n              this.storedData[i].elem.setAttribute(\n                'filter',\n                'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')',\n              )\n            }\n            feMorph.setAttribute('radius', -this.storedData[i].x.v)\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate'\n              this.storedData[i].elem.setAttribute('filter', null)\n            }\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2)\n          }\n        }\n      }\n    }\n  }\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement\n  }\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 '\n    path += ' h' + this.globalData.compSize.w\n    path += ' v' + this.globalData.compSize.h\n    path += ' h-' + this.globalData.compSize.w\n    path += ' v-' + this.globalData.compSize.h + ' '\n    return path\n  }\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1]\n    var i\n    var len\n    len = pathNodes._length\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[i][0] +\n        ',' +\n        pathNodes.i[i][1] +\n        ' ' +\n        pathNodes.v[i][0] +\n        ',' +\n        pathNodes.v[i][1]\n    }\n    // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n    if (pathNodes.c && len > 1) {\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[0][0] +\n        ',' +\n        pathNodes.i[0][1] +\n        ' ' +\n        pathNodes.v[0][0] +\n        ',' +\n        pathNodes.v[0][1]\n    }\n    // pathNodes.__renderedString = pathString;\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = ''\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString\n        }\n        viewData.elem.setAttribute('d', pathShapeValue)\n      }\n      viewData.lastPath = pathString\n    }\n  }\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null\n    this.globalData = null\n    this.maskElement = null\n    this.data = null\n    this.masksProperties = null\n  }\n\n  const filtersFactory = (function () {\n    var ob = {}\n    ob.createFilter = createFilter\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter')\n      fil.setAttribute('id', filId)\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox')\n        fil.setAttribute('x', '0%')\n        fil.setAttribute('y', '0%')\n        fil.setAttribute('width', '100%')\n        fil.setAttribute('height', '100%')\n      }\n      return fil\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix')\n      feColorMatrix.setAttribute('type', 'matrix')\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB')\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1')\n      return feColorMatrix\n    }\n\n    return ob\n  })()\n\n  const featureSupport = (function () {\n    var ob = {\n      maskType: true,\n    }\n    if (\n      /MSIE 10/i.test(navigator.userAgent) ||\n      /MSIE 9/i.test(navigator.userAgent) ||\n      /rv:11.0/i.test(navigator.userAgent) ||\n      /Edge\\/\\d./i.test(navigator.userAgent)\n    ) {\n      ob.maskType = false\n    }\n    return ob\n  })()\n\n  var registeredEffects = {}\n  var idPrefix = 'filter_result_'\n\n  function SVGEffects(elem) {\n    var i\n    var source = 'SourceGraphic'\n    var len = elem.data.ef ? elem.data.ef.length : 0\n    var filId = createElementID()\n    var fil = filtersFactory.createFilter(filId, true)\n    var count = 0\n    this.filters = []\n    var filterManager\n    for (i = 0; i < len; i += 1) {\n      filterManager = null\n      var type = elem.data.ef[i].ty\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source)\n        source = idPrefix + count\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager)\n      }\n    }\n    if (count) {\n      elem.globalData.defs.appendChild(fil)\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n    }\n    if (this.filters.length) {\n      elem.addRenderableComponent(this)\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i\n    var len = this.filters.length\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame)\n    }\n  }\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect,\n      countsAsEffect,\n    }\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS('g')\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS('g')\n      this.transformedElement = this.layerElement\n      this.maskedElement = this.layerElement\n      this._sizeChanged = false\n      var layerElementParent = null\n      // If this layer acts as a mask for the following layer\n      var filId\n      var fil\n      var gg\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask')\n          masker.setAttribute('id', this.layerId)\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha') // eslint-disable-line eqeqeq\n          masker.appendChild(this.layerElement)\n          layerElementParent = masker\n          this.globalData.defs.appendChild(masker)\n          // This is only for IE and Edge when mask if of type alpha\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance')\n            filId = createElementID()\n            fil = filtersFactory.createFilter(filId)\n            this.globalData.defs.appendChild(fil)\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            masker.appendChild(gg)\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask')\n          maskGroup.setAttribute('id', this.layerId)\n          maskGroup.setAttribute('mask-type', 'alpha')\n          var maskGrouper = createNS('g')\n          maskGroup.appendChild(maskGrouper)\n          filId = createElementID()\n          fil = filtersFactory.createFilter(filId)\n          /// /\n\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n          /* var feColorMatrix = createNS('feColorMatrix');\n                feColorMatrix.setAttribute('type', 'matrix');\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\n                fil.appendChild(feColorMatrix); */\n          /// /\n          var feCTr = createNS('feComponentTransfer')\n          feCTr.setAttribute('in', 'SourceGraphic')\n          fil.appendChild(feCTr)\n          var feFunc = createNS('feFuncA')\n          feFunc.setAttribute('type', 'table')\n          feFunc.setAttribute('tableValues', '1.0 0.0')\n          feCTr.appendChild(feFunc)\n          /// /\n          this.globalData.defs.appendChild(fil)\n          var alphaRect = createNS('rect')\n          alphaRect.setAttribute('width', this.comp.data.w)\n          alphaRect.setAttribute('height', this.comp.data.h)\n          alphaRect.setAttribute('x', '0')\n          alphaRect.setAttribute('y', '0')\n          alphaRect.setAttribute('fill', '#ffffff')\n          alphaRect.setAttribute('opacity', '0')\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          maskGrouper.appendChild(alphaRect)\n          maskGrouper.appendChild(this.layerElement)\n          layerElementParent = maskGrouper\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance')\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            maskGrouper.appendChild(alphaRect)\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            maskGrouper.appendChild(gg)\n          }\n          this.globalData.defs.appendChild(maskGroup)\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement)\n        layerElementParent = this.matteElement\n        this.baseElement = this.matteElement\n      } else {\n        this.baseElement = this.layerElement\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln)\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl)\n      }\n      // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath')\n        var pt = createNS('path')\n        pt.setAttribute(\n          'd',\n          'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z',\n        )\n        var clipId = createElementID()\n        cp.setAttribute('id', clipId)\n        cp.appendChild(pt)\n        this.globalData.defs.appendChild(cp)\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g')\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n          cpGroup.appendChild(this.layerElement)\n          this.transformedElement = cpGroup\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement)\n          } else {\n            this.baseElement = this.transformedElement\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode()\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS())\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v)\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null\n      this.matteElement = null\n      this.maskManager.destroy()\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null\n      }\n      return this.baseElement\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData)\n      this.renderableEffectsManager = new SVGEffects(this)\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return\n      }\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')')\n    },\n  }\n\n  /**\n   * @file\n   * Handles AE's layer parenting property.\n   *\n   */\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      // element's parent list\n      this.hierarchy = []\n      // if element is parent of another layer _isParent will be true\n      this._isParent = false\n      this.checkParenting()\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, [])\n      }\n    },\n  }\n\n  function RenderableDOMElement() {}\n\n  ;(function () {\n    var _prototype = {\n      initElement: function (data, globalData, comp) {\n        this.initFrame()\n        this.initBaseData(data, globalData, comp)\n        this.initTransform(data, globalData, comp)\n        this.initHierarchy()\n        this.initRenderable()\n        this.initRendererElement()\n        this.createContainerElements()\n        this.createRenderableComponents()\n        this.createContent()\n        this.hide()\n      },\n      hide: function () {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement\n          elem.style.display = 'none'\n          this.hidden = true\n        }\n      },\n      show: function () {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement\n            elem.style.display = 'block'\n          }\n          this.hidden = false\n          this._isFirstFrame = true\n        }\n      },\n      renderFrame: function () {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return\n        }\n        this.renderTransform()\n        this.renderRenderable()\n        this.renderElement()\n        this.renderInnerContent()\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false\n        this.prepareRenderableFrame(num)\n        this.prepareProperties(num, this.isInRange)\n        this.checkTransparency()\n      },\n      destroy: function () {\n        this.innerElem = null\n        this.destroyBaseElement()\n      },\n    }\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement)\n  })()\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initElement(data, globalData, comp)\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h,\n    }\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement],\n    IImageElement,\n  )\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n\n    this.innerElem = createNS('image')\n    this.innerElem.setAttribute('width', this.assetData.w + 'px')\n    this.innerElem.setAttribute('height', this.assetData.h + 'px')\n    this.innerElem.setAttribute(\n      'preserveAspectRatio',\n      this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio,\n    )\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath)\n\n    this.layerElement.appendChild(this.innerElem)\n  }\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect\n  }\n\n  function ProcessedElement(element, position) {\n    this.elem = element\n    this.pos = position\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data) {\n      var i\n      var len = this.shapeModifiers.length\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data)\n      }\n    },\n    isShapeInAnimatedModifiers: function (data) {\n      var i = 0\n      var len = this.shapeModifiers.length\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true\n        }\n      }\n      return false\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return\n      }\n      var i\n      var len = this.shapes.length\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset()\n      }\n\n      len = this.shapeModifiers.length\n      var shouldBreakProcess\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame)\n        // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n        if (shouldBreakProcess) {\n          break\n        }\n      }\n    },\n\n    searchProcessedElement: function (elem) {\n      var elements = this.processedElements\n      var i = 0\n      var len = elements.length\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos\n        }\n        i += 1\n      }\n      return 0\n    },\n    addProcessedElement: function (elem, pos) {\n      var elements = this.processedElements\n      var i = elements.length\n      while (i) {\n        i -= 1\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos\n          return\n        }\n      }\n      elements.push(new ProcessedElement(elem, pos))\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num)\n      this.prepareProperties(num, this.isInRange)\n    },\n  }\n\n  const lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square',\n  }\n\n  const lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel',\n  }\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = []\n    this.styles = []\n    this.transformers = transformers\n    this.lStr = ''\n    this.sh = shape\n    this.lvl = level\n    // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n    this._isAnimated = !!shape.k\n    // TODO: commenting this for now since all shapes are animated\n    var i = 0\n    var len = transformers.length\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true\n        break\n      }\n      i += 1\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true\n  }\n\n  function SVGStyleData(data, level) {\n    this.data = data\n    this.type = data.ty\n    this.d = ''\n    this.lvl = level\n    this._mdf = false\n    this.closed = data.hd === true\n    this.pElem = createNS('path')\n    this.msElem = null\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = ''\n    this._mdf = false\n  }\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem\n    this.frameId = -1\n    this.dataProps = createSizedArray(data.length)\n    this.renderer = renderer\n    this.k = false\n    this.dashStr = ''\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0)\n    this.dashoffset = createTypedArray('float32', 1)\n    this.initDynamicPropertyContainer(container)\n    var i\n    var len = data.length || 0\n    var prop\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this)\n      this.k = prop.k || this.k\n      this.dataProps[i] = { n: data[i].n, p: prop }\n    }\n    if (!this.k) {\n      this.getValue(true)\n    }\n    this._isAnimated = this.k\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n    this._mdf = this._mdf || forceRender\n    if (this._mdf) {\n      var i = 0\n      var len = this.dataProps.length\n      if (this.renderer === 'svg') {\n        this.dashStr = ''\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v\n        }\n      }\n    }\n  }\n  extendPrototype([DynamicPropertyContainer], DashProperty)\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData)\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData)\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData)\n\n  function GradientProperty(elem, data, container) {\n    this.data = data\n    this.c = createTypedArray('uint8c', data.p * 4)\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4\n    this.o = createTypedArray('float32', cLength)\n    this._cmdf = false\n    this._omdf = false\n    this._collapsable = this.checkCollapsable()\n    this._hasOpacity = cLength\n    this.initDynamicPropertyContainer(container)\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this)\n    this.k = this.prop.k\n    this.getValue(true)\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0\n    var len = this.o.length / 2\n    var diff\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2])\n      if (diff > 0.01) {\n        return false\n      }\n      i += 1\n    }\n    return true\n  }\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0\n      var len = this.data.k.k.length\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false\n        }\n        i += 1\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false\n    }\n    return true\n  }\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue()\n    this._mdf = false\n    this._cmdf = false\n    this._omdf = false\n    if (this.prop._mdf || forceRender) {\n      var i\n      var len = this.data.p * 4\n      var mult\n      var val\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255\n        val = Math.round(this.prop.v[i] * mult)\n        if (this.c[i] !== val) {\n          this.c[i] = val\n          this._cmdf = !forceRender\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i]\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val\n            this._omdf = !forceRender\n          }\n        }\n      }\n      this._mdf = !forceRender\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty)\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.initGradientData(elem, data, styleOb)\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this)\n    this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this)\n    this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this)\n    this.g = new GradientProperty(elem, data.g, this)\n    this.style = styleOb\n    this.stops = []\n    this.setGradientData(styleOb.pElem, data)\n    this.setGradientOpacity(data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID()\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n    gfill.setAttribute('id', gradientId)\n    gfill.setAttribute('spreadMethod', 'pad')\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse')\n    var stops = []\n    var stop\n    var j\n    var jLen\n    jLen = data.g.p * 4\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop')\n      gfill.appendChild(stop)\n      stops.push(stop)\n    }\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')')\n    this.gf = gfill\n    this.cst = stops\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop\n      var j\n      var jLen\n      var mask = createNS('mask')\n      var maskElement = createNS('path')\n      mask.appendChild(maskElement)\n      var opacityId = createElementID()\n      var maskId = createElementID()\n      mask.setAttribute('id', maskId)\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n      opFill.setAttribute('id', opacityId)\n      opFill.setAttribute('spreadMethod', 'pad')\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse')\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length\n      var stops = this.stops\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop')\n        stop.setAttribute('stop-color', 'rgb(255,255,255)')\n        opFill.appendChild(stop)\n        stops.push(stop)\n      }\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')')\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml)\n        }\n      }\n      this.of = opFill\n      this.ms = mask\n      this.ost = stops\n      this.maskId = maskId\n      styleOb.msElem = maskElement\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData)\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.initGradientData(elem, data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData)\n\n  function ShapeGroupData() {\n    this.it = []\n    this.prevViewData = []\n    this.gr = createNS('g')\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container,\n    }\n    this.elements = []\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length\n  }\n\n  const buildShapeString = function (pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return ''\n    }\n    var _o = pathNodes.o\n    var _i = pathNodes.i\n    var _v = pathNodes.v\n    var i\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1])\n    for (i = 1; i < length; i += 1) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[i][0], _i[i][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[i][0], _v[i][1])\n    }\n    if (closed && length) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[0][0], _i[0][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[0][0], _v[0][1])\n      shapeString += 'z'\n    }\n    return shapeString\n  }\n\n  const SVGElementsRenderer = (function () {\n    var _identityMatrix = new Matrix()\n    var _matrixHelper = new Matrix()\n\n    var ob = {\n      createRenderFunction: createRenderFunction,\n    }\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill\n        case 'gf':\n          return renderGradient\n        case 'gs':\n          return renderGradientStroke\n        case 'st':\n          return renderStroke\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath\n        case 'tr':\n          return renderContentTransform\n        case 'no':\n          return renderNoop\n        default:\n          return null\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v)\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS())\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j\n      var jLen\n      var pathStringTransformed\n      var redraw\n      var pathNodes\n      var l\n      var lLen = itemData.styles.length\n      var lvl = itemData.lvl\n      var paths\n      var mat\n      var props\n      var iterations\n      var k\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset()\n          iterations = lvl - itemData.styles[l].lvl\n          k = itemData.transformers.length - 1\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw\n            iterations -= 1\n            k -= 1\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl\n            k = itemData.transformers.length - 1\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props\n              mat.transform(\n                props[0],\n                props[1],\n                props[2],\n                props[3],\n                props[4],\n                props[5],\n                props[6],\n                props[7],\n                props[8],\n                props[9],\n                props[10],\n                props[11],\n                props[12],\n                props[13],\n                props[14],\n                props[15],\n              )\n              iterations -= 1\n              k -= 1\n            }\n          }\n        } else {\n          mat = _identityMatrix\n        }\n        paths = itemData.sh.paths\n        jLen = paths._length\n        if (redraw) {\n          pathStringTransformed = ''\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j]\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat)\n            }\n          }\n          itemData.caches[l] = pathStringTransformed\n        } else {\n          pathStringTransformed = itemData.caches[l]\n        }\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\n          'fill',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v)\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame)\n      renderStroke(styleData, itemData, isFirstFrame)\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf\n      var hasOpacity = itemData.g._hasOpacity\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity'\n        itemData.style.pElem.setAttribute(attr, itemData.o.v)\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx'\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy'\n        gfill.setAttribute(attr1, pt1[0])\n        gfill.setAttribute(attr2, pt1[1])\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0])\n          itemData.of.setAttribute(attr2, pt1[1])\n        }\n      }\n      var stops\n      var i\n      var len\n      var stop\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst\n        var cValues = itemData.g.c\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          stop.setAttribute('offset', cValues[i * 4] + '%')\n          stop.setAttribute(\n            'stop-color',\n            'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')',\n          )\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o\n        if (itemData.g._collapsable) {\n          stops = itemData.cst\n        } else {\n          stops = itemData.ost\n        }\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%')\n          }\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1])\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0])\n          gfill.setAttribute('y2', pt2[1])\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0])\n            itemData.of.setAttribute('y2', pt2[1])\n          }\n        }\n      } else {\n        var rad\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          gfill.setAttribute('r', rad)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad)\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n          var percent = itemData.h.v\n          if (percent >= 1) {\n            percent = 0.99\n          } else if (percent <= -1) {\n            percent = -0.99\n          }\n          var dist = rad * percent\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n          gfill.setAttribute('fx', x)\n          gfill.setAttribute('fy', y)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x)\n            itemData.of.setAttribute('fy', y)\n          }\n        }\n        // gfill.setAttribute('fy','200');\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n      var d = itemData.d\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr)\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0])\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\n          'stroke',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v)\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v)\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v)\n        }\n      }\n    }\n\n    return ob\n  })()\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []\n    // Full shape data\n    this.shapesData = data.shapes\n    // List of styles that will be applied to shapes\n    this.stylesList = []\n    // List of modifiers that will be applied to shapes\n    this.shapeModifiers = []\n    // List of items in shape tree\n    this.itemsData = []\n    // List of items in previous shape tree\n    this.processedElements = []\n    // List of animated components\n    this.animatedContents = []\n    this.initElement(data, globalData, comp)\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n    this.prevViewData = []\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype(\n    [\n      BaseElement,\n      TransformElement,\n      SVGBaseElement,\n      IShapeElement,\n      HierarchyElement,\n      FrameElement,\n      RenderableDOMElement,\n    ],\n    SVGShapeElement,\n  )\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {}\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix()\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {}\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n  }\n\n  /*\nThis method searches for multiple shapes that affect a single element and one of them is animated\n*/\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i\n    var len = this.shapes.length\n    var shape\n    var j\n    var jLen = this.stylesList.length\n    var style\n    var tempShapes = []\n    var areAnimated = false\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j]\n      areAnimated = false\n      tempShapes.length = 0\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i]\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape)\n          areAnimated = shape._isAnimated || areAnimated\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i\n    var len = shapes.length\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated()\n    }\n  }\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData\n    var styleOb = new SVGStyleData(data, level)\n\n    var pathElement = styleOb.pElem\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb)\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb)\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData\n      elementData = new GradientConstructor(this, data, styleOb)\n      this.globalData.defs.appendChild(elementData.gf)\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms)\n        this.globalData.defs.appendChild(elementData.of)\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')')\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb)\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n      pathElement.setAttribute('fill-opacity', '0')\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml)\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd')\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    this.stylesList.push(styleOb)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData()\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this)\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this)\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty)\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0\n    var len = this.animatedContents.length\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return\n      }\n      i += 1\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data,\n    })\n  }\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles\n    var j\n    var jLen = this.stylesList.length\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j])\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n  }\n\n  SVGShapeElement.prototype.searchShapes = function (\n    arr,\n    itemsData,\n    prevViewData,\n    container,\n    level,\n    transformers,\n    render,\n  ) {\n    var ownTransformers = [].concat(transformers)\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var currentTransform\n    var modifier\n    var processedPos\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._render = render\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level)\n        } else {\n          itemsData[i].style.closed = false\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem)\n          }\n        }\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(\n          arr[i].it,\n          itemsData[i].it,\n          itemsData[i].prevViewData,\n          itemsData[i].gr,\n          level + 1,\n          ownTransformers,\n          render,\n        )\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr)\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container)\n        }\n        currentTransform = itemsData[i].transform\n        ownTransformers.push(currentTransform)\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level)\n        }\n        this.setElementStyles(itemsData[i])\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          render = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    len = ownStyles.length\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true\n    }\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers()\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset()\n    }\n    this.renderShape()\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d)\n          // Adding M0 0 fixes same mask bug on all browsers\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d\n        }\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0')\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i\n    var len = this.animatedContents.length\n    var animatedContent\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i]\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement()\n    this.shapesData = null\n    this.itemsData = null\n  }\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o\n    this.sw = sw\n    this.sc = sc\n    this.fc = fc\n    this.m = m\n    this.p = p\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true,\n    }\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false\n    this._mdf.sw = false\n    this._mdf.sc = false\n    this._mdf.fc = false\n    this._mdf.m = false\n    this._mdf.p = false\n    var updated = false\n\n    if (this.o !== o) {\n      this.o = o\n      this._mdf.o = true\n      updated = true\n    }\n    if (this.sw !== sw) {\n      this.sw = sw\n      this._mdf.sw = true\n      updated = true\n    }\n    if (this.sc !== sc) {\n      this.sc = sc\n      this._mdf.sc = true\n      updated = true\n    }\n    if (this.fc !== fc) {\n      this.fc = fc\n      this._mdf.fc = true\n      updated = true\n    }\n    if (this.m !== m) {\n      this.m = m\n      this._mdf.m = true\n      updated = true\n    }\n    if (\n      p.length &&\n      (this.p[0] !== p[0] ||\n        this.p[1] !== p[1] ||\n        this.p[4] !== p[4] ||\n        this.p[5] !== p[5] ||\n        this.p[12] !== p[12] ||\n        this.p[13] !== p[13])\n    ) {\n      this.p = p\n      this._mdf.p = true\n      updated = true\n    }\n    return updated\n  }\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame\n    this.pv = ''\n    this.v = ''\n    this.kf = false\n    this._isFirstFrame = true\n    this._mdf = false\n    this.data = data\n    this.elem = elem\n    this.comp = this.elem.comp\n    this.keysIndex = 0\n    this.canResize = false\n    this.minimumFontSize = 1\n    this.effectsSequence = []\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false,\n    }\n    this.copyData(this.currentData, this.data.d.k[0].s)\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData)\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0]\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s]\n      }\n    }\n    return obj\n  }\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data)\n    }\n    this.currentData = data\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth\n    this._mdf = true\n  }\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes()\n  }\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this))\n    }\n    return this.kf\n  }\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t\n    var currentValue = this.currentData\n    var currentIndex = this.keysIndex\n    if (this.lock) {\n      this.setCurrentData(this.currentData)\n      return\n    }\n    this.lock = true\n    this._mdf = false\n    var i\n    var len = this.effectsSequence.length\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t)\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t)\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue)\n    }\n    this.v = this.currentData\n    this.pv = this.v\n    this.lock = false\n    this.frameId = this.elem.globalData.frameId\n  }\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k\n    var frameNum = this.elem.comp.renderedFrame\n    var i = 0\n    var len = textKeys.length\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break\n      }\n      i += 1\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i\n    }\n    return this.data.d.k[this.keysIndex].s\n  }\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = []\n    var i = 0\n    var len = text.length\n    var charCode\n    var secondCharCode\n    var shouldCombine = false\n    while (i < len) {\n      charCode = text.charCodeAt(i)\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n      } else if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (secondCharCode >= 0xdc00 && secondCharCode <= 0xdfff) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n            shouldCombine = false\n          } else {\n            charactersArray.push(text.substr(i, 2))\n          }\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (charCode > 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n        shouldCombine = true\n      } else {\n        charactersArray.push(text.charAt(i))\n      }\n      i += 1\n    }\n    return charactersArray\n  }\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true\n    var fontManager = this.elem.globalData.fontManager\n    var data = this.data\n    var letters = []\n    var i\n    var len\n    var newLineFlag\n    var index = 0\n    var val\n    var anchorGrouping = data.m.g\n    var currentSize = 0\n    var currentPos = 0\n    var currentLine = 0\n    var lineWidths = []\n    var lineWidth = 0\n    var maxLineWidth = 0\n    var j\n    var jLen\n    var fontData = fontManager.getFontByName(documentData.f)\n    var charData\n    var cLength = 0\n\n    var fontProps = getFontProperties(fontData)\n    documentData.fWeight = fontProps.weight\n    documentData.fStyle = fontProps.style\n    documentData.finalSize = documentData.s\n    documentData.finalText = this.buildFinalText(documentData.t)\n    len = documentData.finalText.length\n    documentData.finalLineHeight = documentData.lh\n    var trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n    var charCode\n    if (documentData.sz) {\n      var flag = true\n      var boxWidth = documentData.sz[0]\n      var boxHeight = documentData.sz[1]\n      var currentHeight\n      var finalText\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t)\n        currentHeight = 0\n        lineWidth = 0\n        len = finalText.length\n        trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n        var lastSpaceIndex = -1\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0)\n          newLineFlag = false\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0\n            newLineFlag = true\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily)\n            cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize)\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1\n            } else {\n              i = lastSpaceIndex\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r')\n            // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n            lastSpaceIndex = -1\n            lineWidth = 0\n          } else {\n            lineWidth += cLength\n            lineWidth += trackingOffset\n          }\n        }\n        currentHeight += (fontData.ascent * documentData.finalSize) / 100\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1\n          documentData.finalLineHeight = (documentData.finalSize * documentData.lh) / documentData.s\n        } else {\n          documentData.finalText = finalText\n          len = documentData.finalText.length\n          flag = false\n        }\n      }\n    }\n    lineWidth = -trackingOffset\n    cLength = 0\n    var uncollapsedSpaces = 0\n    var currentChar\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false\n      currentChar = documentData.finalText[i]\n      charCode = currentChar.charCodeAt(0)\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0\n        lineWidths.push(lineWidth)\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n        lineWidth = -2 * trackingOffset\n        val = ''\n        newLineFlag = true\n        currentLine += 1\n      } else {\n        val = currentChar\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(\n          currentChar,\n          fontData.fStyle,\n          fontManager.getFontByName(documentData.f).fFamily,\n        )\n        cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize)\n      }\n\n      //\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces\n        uncollapsedSpaces = 0\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0,\n      })\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          index += 1\n          currentSize = 0\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          currentSize = 0\n          index += 1\n        }\n      } else {\n        letters[index].ind = index\n        letters[index].extra = 0\n        index += 1\n      }\n    }\n    documentData.l = letters\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n    lineWidths.push(lineWidth)\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0]\n      documentData.justifyOffset = 0\n    } else {\n      documentData.boxWidth = maxLineWidth\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth\n          break\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2\n          break\n        default:\n          documentData.justifyOffset = 0\n      }\n    }\n    documentData.lineWidths = lineWidths\n\n    var animators = data.a\n    var animatorData\n    var letterData\n    jLen = animators.length\n    var based\n    var ind\n    var indexes = []\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j]\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true\n      }\n      ind = 0\n      based = animatorData.s.b\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i]\n        letterData.anIndexes[j] = ind\n        if (\n          (based == 1 && letterData.val !== '') ||\n          (based == 2 && letterData.val !== '' && letterData.val !== ' ') ||\n          (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) ||\n          (based == 4 && (letterData.n || i == len - 1))\n        ) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind)\n          }\n          ind += 1\n        }\n      }\n      data.a[j].s.totalChars = ind\n      var currentInd = -1\n      var newInd\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i]\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j]\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0]\n          }\n          letterData.anIndexes[j] = newInd\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2\n    documentData.ls = documentData.ls || 0\n    documentData.ascent = (fontData.ascent * documentData.finalSize) / 100\n  }\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index\n    var dData = this.copyData({}, this.data.d.k[index].s)\n    dData = this.copyData(dData, newData)\n    this.data.d.k[index].s = dData\n    this.recalculate(index)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s\n    dData.__complete = false\n    this.keysIndex = 0\n    this._isFirstFrame = true\n    this.getValue(dData)\n  }\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  const TextSelectorProp = (function () {\n    var max = Math.max\n    var min = Math.min\n    var floor = Math.floor\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1\n      this.k = false\n      this.data = data\n      this.elem = elem\n      this.comp = elem.comp\n      this.finalS = 0\n      this.finalE = 0\n      this.initDynamicPropertyContainer(elem)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this)\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this)\n      } else {\n        this.e = { v: 100 }\n      }\n      this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this)\n      this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this)\n      this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this)\n      this.sm = PropertyFactory.getProp(elem, data.sm || { k: 100 }, 0, 0, this)\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this)\n      if (!this.dynamicProperties.length) {\n        this.getValue()\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue()\n        }\n        var x1 = 0\n        var y1 = 0\n        var x2 = 1\n        var y2 = 1\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0\n        } else {\n          y1 = -this.ne.v / 100.0\n        }\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get\n\n        var mult = 0\n        var s = this.finalS\n        var e = this.finalE\n        var type = this.data.sh\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n          mult = easer(mult)\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n\n          mult = easer(mult)\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n            if (mult < 0.5) {\n              mult *= 2\n            } else {\n              mult = 1 - 2 * (mult - 0.5)\n            }\n          }\n          mult = easer(mult)\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0\n          } else {\n            var tot = e - s\n            /* ind += 0.5;\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            var x = -tot / 2 + ind\n            var a = tot / 2\n            mult = Math.sqrt(1 - (x * x) / (a * a))\n          }\n          mult = easer(mult)\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            mult = (1 + Math.cos(Math.PI + (Math.PI * 2 * ind) / (e - s))) / 2 // eslint-disable-line\n          }\n          mult = easer(mult)\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1))\n            } else {\n              mult = max(0, min(e - ind, 1))\n            }\n          }\n          mult = easer(mult)\n        }\n        // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01\n          if (smoothness === 0) {\n            smoothness = 0.00000001\n          }\n          var threshold = 0.5 - smoothness * 0.5\n          if (mult < threshold) {\n            mult = 0\n          } else {\n            mult = (mult - threshold) / smoothness\n            if (mult > 1) {\n              mult = 1\n            }\n          }\n        }\n        return mult * this.a.v\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties()\n        this._mdf = newCharsFlag || this._mdf\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars\n        var o = this.o.v / divisor\n        var s = this.s.v / divisor + o\n        var e = this.e.v / divisor + o\n        if (s > e) {\n          var _s = s\n          s = e\n          e = _s\n        }\n        this.finalS = s\n        this.finalE = e\n      },\n    }\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory)\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr)\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp,\n    }\n  })()\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = { propType: false }\n    var getProp = PropertyFactory.getProp\n    var textAnimatorAnimatables = animatorProps.a\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData,\n    }\n\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container)\n    this.s.t = animatorProps.s.t\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true\n    this._hasMaskedPath = false\n    this._frameId = -1\n    this._textData = textData\n    this._renderType = renderType\n    this._elem = elem\n    this._animatorsData = createSizedArray(this._textData.a.length)\n    this._pathData = {}\n    this._moreOptions = {\n      alignment: {},\n    }\n    this.renderedLetters = []\n    this.lettersChangedFlag = false\n    this.initDynamicPropertyContainer(elem)\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i\n    var len = this._textData.a.length\n    var animatorProps\n    var getProp = PropertyFactory.getProp\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i]\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this)\n    }\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m),\n      }\n      this._hasMaskedPath = true\n    } else {\n      this._hasMaskedPath = false\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this)\n  }\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return\n    }\n    this._isFirstFrame = false\n    var alignment = this._moreOptions.alignment.v\n    var animators = this._animatorsData\n    var textData = this._textData\n    var matrixHelper = this.mHelper\n    var renderType = this._renderType\n    var renderedLettersCount = this.renderedLetters.length\n    var xPos\n    var yPos\n    var i\n    var len\n    var letters = documentData.l\n    var pathInfo\n    var currentLength\n    var currentPoint\n    var segmentLength\n    var flag\n    var pointInd\n    var segmentInd\n    var prevPoint\n    var points\n    var segments\n    var partialLength\n    var totalLength\n    var perc\n    var tanAngle\n    var mask\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v\n        if (this._pathData.r.v) {\n          paths = paths.reverse()\n        }\n        // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n        pathInfo = {\n          tLength: 0,\n          segments: [],\n        }\n        len = paths._length - 1\n        var bezierData\n        totalLength = 0\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[i + 1],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        i = len\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[0],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        this._pathData.pi = pathInfo\n      }\n      pathInfo = this._pathData.pi\n\n      currentLength = this._pathData.f.v\n      segmentInd = 0\n      pointInd = 1\n      segmentLength = 0\n      flag = true\n      segments = pathInfo.segments\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength\n        }\n        segmentInd = segments.length - 1\n        points = segments[segmentInd].points\n        pointInd = points.length - 1\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength\n          pointInd -= 1\n          if (pointInd < 0) {\n            segmentInd -= 1\n            points = segments[segmentInd].points\n            pointInd = points.length - 1\n          }\n        }\n      }\n      points = segments[segmentInd].points\n      prevPoint = points[pointInd - 1]\n      currentPoint = points[pointInd]\n      partialLength = currentPoint.partialLength\n    }\n\n    len = letters.length\n    xPos = 0\n    yPos = 0\n    var yOff = documentData.finalSize * 1.2 * 0.714\n    var firstLine = true\n    var animatorProps\n    var animatorSelector\n    var j\n    var jLen\n    var letterValue\n\n    jLen = animators.length\n\n    var mult\n    var ind = -1\n    var offf\n    var xPathPos\n    var yPathPos\n    var initPathPos = currentLength\n    var initSegmentInd = segmentInd\n    var initPointInd = pointInd\n    var currentLine = -1\n    var elemOpacity\n    var sc\n    var sw\n    var fc\n    var k\n    var letterSw\n    var letterSc\n    var letterFc\n    var letterM = ''\n    var letterP = this.defaultPropsArray\n    var letterO\n\n    //\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0\n      var animatorFirstCharOffset = 0\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1\n      var lastIndex = 0\n      var isNewLine = true\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n            lastIndex += 1\n          }\n          animatorJustifyOffset = 0\n          isNewLine = true\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult\n              }\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult\n              }\n            }\n          }\n          isNewLine = false\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n        lastIndex += 1\n      }\n    }\n    //\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset()\n      elemOpacity = 1\n      if (letters[i].n) {\n        xPos = 0\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        currentLength = initPathPos\n        firstLine = false\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd\n          pointInd = initPointInd\n          points = segments[segmentInd].points\n          prevPoint = points[pointInd - 1]\n          currentPoint = points[pointInd]\n          partialLength = currentPoint.partialLength\n          segmentLength = 0\n        }\n        letterM = ''\n        letterFc = ''\n        letterSw = ''\n        letterO = ''\n        letterP = this.defaultPropsArray\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line]\n                break\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2\n                break\n              default:\n                break\n            }\n            currentLine = letters[i].line\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra\n            }\n            currentLength += letters[i].an / 2\n            ind = letters[i].ind\n          }\n          currentLength += alignment[0] * letters[i].an * 0.005\n          var animatorOffset = 0\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult\n              }\n            }\n          }\n          flag = true\n          // Force alignment only works with a single line for now\n          if (this._pathData.a.v) {\n            currentLength =\n              letters[0].an * 0.5 +\n              ((totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind) /\n                (len - 1)\n            currentLength += this._pathData.f.v\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01)\n              flag = false\n            } else if (points) {\n              segmentLength += currentPoint.partialLength\n              pointInd += 1\n              if (pointInd >= points.length) {\n                pointInd = 0\n                segmentInd += 1\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0\n                    segmentInd = 0\n                    points = segments[segmentInd].points\n                  } else {\n                    segmentLength -= currentPoint.partialLength\n                    points = null\n                  }\n                } else {\n                  points = segments[segmentInd].points\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint\n                currentPoint = points[pointInd]\n                partialLength = currentPoint.partialLength\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n        } else {\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n\n          // Grouping alignment\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0)\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0]\n                } else {\n                  currentLength += animatorProps.t.v * mult\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0]\n              } else {\n                xPos += animatorProps.t.v * mult\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]]\n          } else {\n            sc = [0, 0, 0]\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]]\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n\n            if (mult.length) {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult[0],\n                -animatorProps.a.v[1] * mult[1],\n                animatorProps.a.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult,\n                -animatorProps.a.v[1] * mult,\n                animatorProps.a.v[2] * mult,\n              )\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1)\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1)\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          animatorSelector = animators[j].s\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1])\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult)\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2])\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult)\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1])\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult)\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0])\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult)\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0]\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0]\n            } else {\n              sw += animatorProps.sw.v * mult\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0]\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0]\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0])\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult)\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0])\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult)\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0])\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult)\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1])\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult)\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult[0],\n                animatorProps.p.v[1] * mult[1],\n                -animatorProps.p.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult,\n                animatorProps.p.v[1] * mult,\n                -animatorProps.p.v[2] * mult,\n              )\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc =\n            'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')'\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc =\n            'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')'\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls)\n\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0)\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0])\n            var rot = (Math.atan(tanAngle) * 180) / Math.PI\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180\n            }\n            matrixHelper.rotate((-rot * Math.PI) / 180)\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0)\n          currentLength -= alignment[0] * letters[i].an * 0.005\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2\n            currentLength += documentData.tr * 0.001 * documentData.finalSize\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0)\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]),\n                0,\n                0,\n              )\n              break\n            case 2:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2,\n                0,\n                0,\n              )\n              break\n            default:\n              break\n          }\n          matrixHelper.translate(0, -documentData.ls)\n          matrixHelper.translate(offf, 0, 0)\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0)\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize\n        }\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS()\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS()\n        } else {\n          letterP = [\n            matrixHelper.props[0],\n            matrixHelper.props[1],\n            matrixHelper.props[2],\n            matrixHelper.props[3],\n            matrixHelper.props[4],\n            matrixHelper.props[5],\n            matrixHelper.props[6],\n            matrixHelper.props[7],\n            matrixHelper.props[8],\n            matrixHelper.props[9],\n            matrixHelper.props[10],\n            matrixHelper.props[11],\n            matrixHelper.props[12],\n            matrixHelper.props[13],\n            matrixHelper.props[14],\n            matrixHelper.props[15],\n          ]\n        }\n        letterO = elemOpacity\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP)\n        this.renderedLetters.push(letterValue)\n        renderedLettersCount += 1\n        this.lettersChangedFlag = true\n      } else {\n        letterValue = this.renderedLetters[i]\n        this.lettersChangedFlag =\n          letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag\n      }\n    }\n  }\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return\n    }\n    this._frameId = this._elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix()\n  TextAnimatorProperty.prototype.defaultPropsArray = []\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty)\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties)\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this)\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n    this.initRenderable()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    this.createContent()\n    this.hide()\n    this.textAnimator.searchProperties(this.dynamicProperties)\n  }\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText()\n      this.textProperty._isFirstFrame = false\n      this.textProperty._mdf = false\n    }\n  }\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j\n    var jLen = shapes.length\n    var pathNodes\n    var shapeStr = ''\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper)\n      }\n    }\n    return shapeStr\n  }\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index)\n  }\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize)\n  }\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize)\n  }\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n    }\n    matrixHelper.translate(0, -documentData.ls, 0)\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),\n          0,\n          0,\n        )\n        break\n      case 2:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2,\n          0,\n          0,\n        )\n        break\n      default:\n        break\n    }\n    matrixHelper.translate(xPos, yPos, 0)\n  }\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return (\n      'rgb(' +\n      Math.round(colorData[0] * 255) +\n      ',' +\n      Math.round(colorData[1] * 255) +\n      ',' +\n      Math.round(colorData[2] * 255) +\n      ')'\n    )\n  }\n\n  ITextElement.prototype.emptyProp = new LetterProps()\n\n  ITextElement.prototype.destroy = function () {}\n\n  var emptyShapeData = {\n    shapes: [],\n  }\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = []\n    this.renderType = 'svg'\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement],\n    SVGTextLottieElement,\n  )\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text')\n    }\n  }\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0\n    var len = textArray.length\n    var textContents = []\n    var currentTextContent = ''\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent)\n        currentTextContent = ''\n      } else {\n        currentTextContent += textArray[i]\n      }\n      i += 1\n    }\n    textContents.push(currentTextContent)\n    return textContents\n  }\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0]\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1]\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale\n          shapeItem.s.k[1] = scale\n        }\n      }\n    }\n    return data\n  }\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this)\n    var i\n    var len\n\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0)\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc))\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)')\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc))\n      this.layerElement.setAttribute('stroke-width', documentData.sw)\n    }\n    this.layerElement.setAttribute('font-size', documentData.finalSize)\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass)\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily)\n      var fWeight = documentData.fWeight\n      var fStyle = documentData.fStyle\n      this.layerElement.setAttribute('font-style', fStyle)\n      this.layerElement.setAttribute('font-weight', fWeight)\n    }\n    this.layerElement.setAttribute('aria-label', documentData.t)\n\n    var letters = documentData.l || []\n    var usesGlyphs = !!this.globalData.fontManager.chars\n    len = letters.length\n\n    var tSpan\n    var matrixHelper = this.mHelper\n    var shapeStr = ''\n    var singleShape = this.data.singleShape\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer\n      var justify = 'start'\n      switch (documentData.j) {\n        case 1:\n          justify = 'end'\n          break\n        case 2:\n          justify = 'middle'\n          break\n        default:\n          justify = 'start'\n          break\n      }\n      tElement.setAttribute('text-anchor', justify)\n      tElement.setAttribute('letter-spacing', trackingOffset)\n      var textContent = this.buildTextContents(documentData.finalText)\n      len = textContent.length\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan')\n        tSpan.textContent = textContent[i]\n        tSpan.setAttribute('x', 0)\n        tSpan.setAttribute('y', yPos)\n        tSpan.style.display = 'inherit'\n        tElement.appendChild(tSpan)\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null,\n          }\n        }\n        this.textSpans[i].span = tSpan\n        yPos += documentData.finalLineHeight\n      }\n\n      this.layerElement.appendChild(tElement)\n    } else {\n      var cachedSpansLength = this.textSpans.length\n      var charData\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null,\n          }\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text')\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt')\n            tSpan.setAttribute('stroke-linejoin', 'round')\n            tSpan.setAttribute('stroke-miterlimit', '4')\n            this.textSpans[i].span = tSpan\n            if (usesGlyphs) {\n              var childSpan = createNS('g')\n              tSpan.appendChild(childSpan)\n              this.textSpans[i].childSpan = childSpan\n            }\n            this.textSpans[i].span = tSpan\n            this.layerElement.appendChild(tSpan)\n          }\n          tSpan.style.display = 'inherit'\n        }\n\n        matrixHelper.reset()\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset\n            yPos += documentData.yOffset\n            yPos += firstLine ? 1 : 0\n            firstLine = false\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n          xPos += letters[i].l || 0\n          // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n          xPos += trackingOffset\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(\n            documentData.finalText[i],\n            fontData.fStyle,\n            this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n          )\n          var glyphElement\n          // t === 1 means the character has been replaced with an animated shaped\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this)\n          } else {\n            var data = emptyShapeData\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize)\n            }\n            glyphElement = new SVGShapeElement(data, this.globalData, this)\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement)\n            glyph.destroy()\n          }\n          this.textSpans[i].glyph = glyphElement\n          glyphElement._debug = true\n          glyphElement.prepareFrame(0)\n          glyphElement.renderFrame()\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement)\n          // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\n              'transform',\n              'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')',\n            )\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')')\n          }\n          tSpan.textContent = letters[i].val\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve')\n        }\n        //\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr)\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none'\n      i += 1\n    }\n\n    this._sizeChanged = true\n  }\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st)\n    this.renderInnerContent()\n    if (this._sizeChanged) {\n      this._sizeChanged = false\n      var textBox = this.layerElement.getBBox()\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height,\n      }\n    }\n    return this.bbox\n  }\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i\n    var len = this.textSpans.length\n    var glyphElement\n    this.renderedFrame = this.comp.renderedFrame\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st)\n        if (glyphElement._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true\n        var i\n        var len\n        var renderedLetters = this.textAnimator.renderedLetters\n\n        var letters = this.textProperty.currentData.l\n\n        len = letters.length\n        var renderedLetter\n        var textSpan\n        var glyphElement\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i]\n            textSpan = this.textSpans[i].span\n            glyphElement = this.textSpans[i].glyph\n            if (glyphElement) {\n              glyphElement.renderFrame()\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m)\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o)\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw)\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc)\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype([IImageElement], ISolidElement)\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect')\n    /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n    rect.setAttribute('width', this.data.sw)\n    rect.setAttribute('height', this.data.sh)\n    rect.setAttribute('fill', this.data.sc)\n    this.layerElement.appendChild(rect)\n  }\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initFrame()\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true)\n  }\n\n  NullElement.prototype.renderFrame = function () {}\n\n  NullElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  NullElement.prototype.destroy = function () {}\n\n  NullElement.prototype.sourceRectAtTime = function () {}\n\n  NullElement.prototype.hide = function () {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement)\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase)\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize)\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h)\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w)\n      this.svgElement.setAttribute('height', animData.h)\n      this.svgElement.style.width = '100%'\n      this.svgElement.style.height = '100%'\n      this.svgElement.style.transform = 'translate3d(0,0,0)'\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width)\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height)\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className)\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id)\n    }\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable)\n    }\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio)\n    // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n    this.animationItem.wrapper.appendChild(this.svgElement)\n    // Mask animation\n    var defs = this.globalData.defs\n\n    this.setupGlobalData(animData, defs)\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.data = animData\n\n    var maskElement = createNS('clipPath')\n    var rect = createNS('rect')\n    rect.setAttribute('width', animData.w)\n    rect.setAttribute('height', animData.h)\n    rect.setAttribute('x', 0)\n    rect.setAttribute('y', 0)\n    var maskId = createElementID()\n    maskElement.setAttribute('id', maskId)\n    maskElement.appendChild(rect)\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')')\n\n    defs.appendChild(maskElement)\n    this.layers = animData.layers\n    this.elements = createSizedArray(animData.layers.length)\n  }\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    this.layerElement = null\n    this.globalData.defs = null\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.destroyed = true\n    this.animationItem = null\n  }\n\n  SVGRendererBase.prototype.updateContainerSize = function () {}\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    elements[pos] = true\n    var element = this.createItem(this.layers[pos])\n\n    elements[pos] = element\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element)\n      }\n      element.initExpressions()\n    }\n    this.appendElementInPos(element, pos)\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1)\n        this.addPendingElement(element)\n      } else {\n        element.setMatte(elements[pos - 1].layerId)\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n      if (element.data.tt) {\n        var i = 0\n        var len = this.elements.length\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId)\n            break\n          }\n          i += 1\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return\n    }\n    if (num === null) {\n      num = this.renderedFrame\n    } else {\n      this.renderedFrame = num\n    }\n    // console.log('-------');\n    // console.log('FRAME ',num);\n    this.globalData.frameNum = num\n    this.globalData.frameId += 1\n    this.globalData.projectInterface.currentFrame = num\n    this.globalData._mdf = false\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement()\n    if (!newElement) {\n      return\n    }\n    var i = 0\n    var nextElement\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement()\n      }\n      i += 1\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement)\n    } else {\n      this.layerElement.appendChild(newElement)\n    }\n  }\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none'\n  }\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block'\n  }\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement)\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initTransform(data, globalData, comp)\n    this.initRenderable()\n    this.initHierarchy()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n    this.hide()\n  }\n\n  /* ICompElement.prototype.hide = function(){\n    if(!this.hidden){\n        this.hideElement();\n        var i,len = this.elements.length;\n        for( i = 0; i < len; i+=1 ){\n            if(this.elements[i]){\n                this.elements[i].hide();\n            }\n        }\n    }\n}; */\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (!this.isInRange && !this.data.xt) {\n      return\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1\n      }\n      this.renderedFrame = timeRemapped\n    } else {\n      this.renderedFrame = num / this.data.sr\n    }\n    var i\n    var len = this.elements.length\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame)\n    }\n    // This iteration needs to be backwards because of how expressions connect between each other\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st)\n        if (this.elements[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems\n  }\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements\n  }\n\n  ICompElement.prototype.destroyElements = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n  }\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements()\n    this.destroyBaseElement()\n  }\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers\n    this.supports3d = true\n    this.completeLayers = false\n    this.pendingElements = []\n    this.elements = this.layers ? createSizedArray(this.layers.length) : []\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement)\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.layers = null\n    this.renderedFrame = -1\n    this.svgElement = createNS('svg')\n    var ariaLabel = ''\n    if (config && config.title) {\n      var titleElement = createNS('title')\n      var titleId = createElementID()\n      titleElement.setAttribute('id', titleId)\n      titleElement.textContent = config.title\n      this.svgElement.appendChild(titleElement)\n      ariaLabel += titleId\n    }\n    if (config && config.description) {\n      var descElement = createNS('desc')\n      var descId = createElementID()\n      descElement.setAttribute('id', descId)\n      descElement.textContent = config.description\n      this.svgElement.appendChild(descElement)\n      ariaLabel += ' ' + descId\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel)\n    }\n    var defs = createNS('defs')\n    this.svgElement.appendChild(defs)\n    var maskElement = createNS('g')\n    this.svgElement.appendChild(maskElement)\n    this.layerElement = maskElement\n    this.renderConfig = {\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: (config && config.viewBoxOnly) || false,\n      viewBoxSize: (config && config.viewBoxSize) || false,\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: (config && config.filterSize && config.filterSize.width) || '100%',\n        height: (config && config.filterSize && config.filterSize.height) || '100%',\n        x: (config && config.filterSize && config.filterSize.x) || '0%',\n        y: (config && config.filterSize && config.filterSize.y) || '0%',\n      },\n      width: config && config.width,\n      height: config && config.height,\n    }\n\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig,\n    }\n    this.elements = []\n    this.pendingElements = []\n    this.destroyed = false\n    this.rendererType = 'svg'\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer)\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function CVContextData() {\n    this.saved = []\n    this.cArrPos = 0\n    this.cTr = new Matrix()\n    this.cO = 1\n    var i\n    var len = 15\n    this.savedOp = createTypedArray('float32', len)\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = len\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2\n    var currentSavedOp = this.savedOp\n    this.savedOp = createTypedArray('float32', newLength)\n    this.savedOp.set(currentSavedOp)\n    var i = 0\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = newLength\n  }\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0\n    this.cTr.reset()\n    this.cO = 1\n  }\n\n  function ShapeTransformManager() {\n    this.sequences = {}\n    this.sequenceList = []\n    this.transform_key_count = 0\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i\n      var len = transforms.length\n      var key = '_'\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_'\n      }\n      var sequence = this.sequences[key]\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false,\n        }\n        this.sequences[key] = sequence\n        this.sequenceList.push(sequence)\n      }\n      return sequence\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0\n      var len = sequence.transforms.length\n      var _mdf = isFirstFrame\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true\n          break\n        }\n        i += 1\n      }\n      if (_mdf) {\n        var props\n        sequence.finalTransform.reset()\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props\n          sequence.finalTransform.transform(\n            props[0],\n            props[1],\n            props[2],\n            props[3],\n            props[4],\n            props[5],\n            props[6],\n            props[7],\n            props[8],\n            props[9],\n            props[10],\n            props[11],\n            props[12],\n            props[13],\n            props[14],\n            props[15],\n          )\n        }\n      }\n      sequence._mdf = _mdf\n    },\n    processSequences: function (isFirstFrame) {\n      var i\n      var len = this.sequenceList.length\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame)\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1\n      return '_' + this.transform_key_count\n    },\n  }\n\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {}\n\n  function CVMaskElement(data, element) {\n    this.data = data\n    this.element = element\n    this.masksProperties = this.data.masksProperties || []\n    this.viewData = createSizedArray(this.masksProperties.length)\n    var i\n    var len = this.masksProperties.length\n    var hasMasks = false\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3)\n    }\n    this.hasMasks = hasMasks\n    if (hasMasks) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return\n    }\n    var transform = this.element.finalTransform.mat\n    var ctx = this.element.canvasContext\n    var i\n    var len = this.masksProperties.length\n    var pt\n    var pts\n    var data\n    ctx.beginPath()\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h)\n          ctx.lineTo(0, this.element.globalData.compSize.h)\n          ctx.lineTo(0, 0)\n        }\n        data = this.viewData[i].v\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0)\n        ctx.moveTo(pt[0], pt[1])\n        var j\n        var jLen = data._length\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j])\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n        }\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0])\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n      }\n    }\n    this.element.globalData.renderer.save(true)\n    ctx.clip()\n  }\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null\n  }\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext\n      this.renderableEffectsManager = new CVEffects(this)\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData = this.globalData\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm\n        var blendModeValue = getBlendMode(this.data.bm)\n        globalData.canvasContext.globalCompositeOperation = blendModeValue\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this)\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false\n        this._isFirstFrame = true\n        this.maskManager._isFirstFrame = true\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return\n      }\n      this.renderTransform()\n      this.renderRenderable()\n      this.setBlendMode()\n      var forceRealStack = this.data.ty === 0\n      this.globalData.renderer.save(forceRealStack)\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props)\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v)\n      this.renderInnerContent()\n      this.globalData.renderer.restore(forceRealStack)\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true)\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null\n      this.data = null\n      this.globalData = null\n      this.maskManager.destroy()\n    },\n    mHelper: new Matrix(),\n  }\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = []\n    this.tr = [0, 0, 0, 0, 0, 0]\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element)\n    var i\n    var len = styles.length\n    var styledShape\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: [],\n        }\n        this.styledShapes.push(styledShape)\n        styles[i].elements.push(styledShape)\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = []\n    this.shapesData = data.shapes\n    this.stylesList = []\n    this.itemsData = []\n    this.prevViewData = []\n    this.shapeModifiers = []\n    this.processedElements = []\n    this.transformsManager = new ShapeTransformManager()\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement],\n    CVShapeElement,\n  )\n\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement\n\n  CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false }\n\n  CVShapeElement.prototype.dashResetter = []\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n  }\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true,\n    }\n    var elementData = {}\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this)\n      if (!elementData.c.k) {\n        styleElem.co =\n          'rgb(' +\n          bmFloor(elementData.c.v[0]) +\n          ',' +\n          bmFloor(elementData.c.v[1]) +\n          ',' +\n          bmFloor(elementData.c.v[2]) +\n          ')'\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this)\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this)\n      elementData.h = PropertyFactory.getProp(this, data.h || { k: 0 }, 0, 0.01, this)\n      elementData.a = PropertyFactory.getProp(this, data.a || { k: 0 }, 0, degToRads, this)\n      elementData.g = new GradientProperty(this, data.g, this)\n    }\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this)\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2]\n      styleElem.lj = lineJoinEnum[data.lj || 2]\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml\n      }\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this)\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v\n      }\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this)\n        elementData.d = d\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray\n          styleElem.do = elementData.d.dashoffset[0]\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero'\n    }\n    this.stylesList.push(styleElem)\n    elementData.style = styleElem\n    return elementData\n  }\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: [],\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this),\n      },\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager)\n\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    return elementData\n  }\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n  }\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i\n    var len = styles.length\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var processedPos\n    var modifier\n    var currentTransform\n    var ownTransforms = [].concat(transforms)\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms)\n        } else {\n          itemsData[i].style.closed = false\n        }\n\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms)\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i])\n          itemsData[i] = currentTransform\n        }\n        ownTransforms.push(itemsData[i])\n        this.addTransformToStyleList(itemsData[i])\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i])\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          shouldRender = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    this.removeTransformFromStyleList()\n    this.closeStyles(ownStyles)\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1\n    this.transformHelper._opMdf = false\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true)\n  }\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity\n      groupTransform.opacity *= groupTransform.op.v\n      groupTransform._opMdf = true\n    }\n  }\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i\n    var len = this.stylesList.length\n    var j\n    var jLen\n    var k\n    var kLen\n    var elems\n    var nodes\n    var renderer = this.globalData.renderer\n    var ctx = this.globalData.canvasContext\n    var type\n    var currentStyle\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i]\n      type = currentStyle.type\n\n      // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n      if (\n        !(\n          ((type === 'st' || type === 'gs') && currentStyle.wi === 0) ||\n          !currentStyle.data._shouldRender ||\n          currentStyle.coOp === 0 ||\n          this.globalData.currentGlobalAlpha === 0\n        )\n      ) {\n        renderer.save()\n        elems = currentStyle.elements\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd\n          ctx.lineWidth = currentStyle.wi\n          ctx.lineCap = currentStyle.lc\n          ctx.lineJoin = currentStyle.lj\n          ctx.miterLimit = currentStyle.ml || 0\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd\n        }\n        renderer.ctxOpacity(currentStyle.coOp)\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath()\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props)\n        jLen = elems.length\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath()\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da)\n              ctx.lineDashOffset = currentStyle.do\n            }\n          }\n          nodes = elems[j].trNodes\n          kLen = nodes.length\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1])\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(\n                nodes[k].pts[0],\n                nodes[k].pts[1],\n                nodes[k].pts[2],\n                nodes[k].pts[3],\n                nodes[k].pts[4],\n                nodes[k].pts[5],\n              )\n            } else {\n              ctx.closePath()\n            }\n          }\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke()\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter)\n            }\n          }\n        }\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r)\n        }\n        renderer.restore()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i\n    var len = items.length - 1\n    var groupTransform\n    groupTransform = parentTransform\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform\n        this.renderShapeTransform(parentTransform, groupTransform)\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i])\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it)\n      } else if (items[i].ty === 'tm') {\n        //\n      }\n    }\n    if (isMain) {\n      this.drawLayer()\n    }\n  }\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes\n      var paths = shape.paths\n      var i\n      var len\n      var j\n      var jLen = paths._length\n      shapeNodes.length = 0\n      var groupTransformMat = styledShape.transforms.finalTransform\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j]\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              })\n            }\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i]),\n            })\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            })\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0]),\n            })\n            shapeNodes.push({\n              t: 'z',\n            })\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes\n    }\n  }\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i\n      var len = itemData.styledShapes.length\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n  }\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var grd\n    if (\n      !styleElem.grd ||\n      itemData.g._mdf ||\n      itemData.s._mdf ||\n      itemData.e._mdf ||\n      (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))\n    ) {\n      var ctx = this.globalData.canvasContext\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1])\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n        var percent = itemData.h.v\n        if (percent >= 1) {\n          percent = 0.99\n        } else if (percent <= -1) {\n          percent = -0.99\n        }\n        var dist = rad * percent\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad)\n      }\n\n      var i\n      var len = styleData.g.p\n      var cValues = itemData.g.c\n      var opacity = 1\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1]\n        }\n        grd.addColorStop(\n          cValues[i * 4] / 100,\n          'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')',\n        )\n      }\n      styleElem.grd = grd\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity\n  }\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var d = itemData.d\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray\n      styleElem.do = d.dashoffset[0]\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v\n    }\n  }\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null\n    this.globalData = null\n    this.canvasContext = null\n    this.stylesList.length = 0\n    this.itemsData.length = 0\n  }\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = []\n    this.yOffset = 0\n    this.fillColorAnim = false\n    this.strokeColorAnim = false\n    this.strokeWidthAnim = false\n    this.stroke = false\n    this.fill = false\n    this.justifyOffset = 0\n    this.currentRender = null\n    this.renderType = 'canvas'\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: '',\n    }\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement],\n    CVTextElement,\n  )\n\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d')\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0)\n\n    var hasFill = false\n    if (documentData.fc) {\n      hasFill = true\n      this.values.fill = this.buildColor(documentData.fc)\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)'\n    }\n    this.fill = hasFill\n    var hasStroke = false\n    if (documentData.sc) {\n      hasStroke = true\n      this.values.stroke = this.buildColor(documentData.sc)\n      this.values.sWidth = documentData.sw\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    var i\n    var len\n    var letters = documentData.l\n    var matrixHelper = this.mHelper\n    this.stroke = hasStroke\n    this.values.fValue =\n      documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily\n    len = documentData.finalText.length\n    // this.tHelper.font = this.values.fValue;\n    var charData\n    var shapeData\n    var k\n    var kLen\n    var shapes\n    var j\n    var jLen\n    var pathNodes\n    var commands\n    var pathArr\n    var singleShape = this.data.singleShape\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var cnt = 0\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(\n        documentData.finalText[i],\n        fontData.fStyle,\n        this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n      )\n      shapeData = (charData && charData.data) || {}\n      matrixHelper.reset()\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        firstLine = false\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : []\n      jLen = shapes.length\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100)\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n      }\n      commands = createSizedArray(jLen - 1)\n      var commandsCounter = 0\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length\n          pathNodes = shapes[j].ks.k\n          pathArr = []\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(\n                matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n                matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              )\n            }\n            pathArr.push(\n              matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n              matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n            )\n          }\n          pathArr.push(\n            matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n          )\n          commands[commandsCounter] = pathArr\n          commandsCounter += 1\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l\n        xPos += trackingOffset\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands\n      } else {\n        this.textSpans[cnt] = { elem: commands }\n      }\n      cnt += 1\n    }\n  }\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.font = this.values.fValue\n    ctx.lineCap = 'butt'\n    ctx.lineJoin = 'miter'\n    ctx.miterLimit = 4\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n    }\n\n    var i\n    var len\n    var j\n    var jLen\n    var k\n    var kLen\n    var renderedLetters = this.textAnimator.renderedLetters\n\n    var letters = this.textProperty.currentData.l\n\n    len = letters.length\n    var renderedLetter\n    var lastFill = null\n    var lastStroke = null\n    var lastStrokeW = null\n    var commands\n    var pathArr\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i]\n        if (renderedLetter) {\n          this.globalData.renderer.save()\n          this.globalData.renderer.ctxTransform(renderedLetter.p)\n          this.globalData.renderer.ctxOpacity(renderedLetter.o)\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc\n              ctx.fillStyle = renderedLetter.fc\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill\n            ctx.fillStyle = this.values.fill\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.fill()\n          /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw\n              ctx.lineWidth = renderedLetter.sw\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth\n            ctx.lineWidth = this.values.sWidth\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc\n              ctx.strokeStyle = renderedLetter.sc\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke\n            ctx.strokeStyle = this.values.stroke\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.stroke()\n          /// ctx.strokeText(letters[i].val,0,0);\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore()\n        }\n      }\n    }\n  }\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.img = globalData.imageLoader.getAsset(this.assetData)\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVImageElement,\n  )\n\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas')\n      canvas.width = this.assetData.w\n      canvas.height = this.assetData.h\n      var ctx = canvas.getContext('2d')\n\n      var imgW = this.img.width\n      var imgH = this.img.height\n      var imgRel = imgW / imgH\n      var canvasRel = this.assetData.w / this.assetData.h\n      var widthCrop\n      var heightCrop\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio\n      if ((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\n        heightCrop = imgH\n        widthCrop = heightCrop * canvasRel\n      } else {\n        widthCrop = imgW\n        heightCrop = widthCrop / canvasRel\n      }\n      ctx.drawImage(\n        this.img,\n        (imgW - widthCrop) / 2,\n        (imgH - heightCrop) / 2,\n        widthCrop,\n        heightCrop,\n        0,\n        0,\n        this.assetData.w,\n        this.assetData.h,\n      )\n      this.img = canvas\n    }\n  }\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0)\n  }\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null\n  }\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVSolidElement,\n  )\n\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.fillStyle = this.data.sc\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh)\n    //\n  }\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase)\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13])\n      return\n    }\n    this.transformMat.cloneFromProps(props)\n    var cProps = this.contextData.cTr.props\n    this.transformMat.transform(\n      cProps[0],\n      cProps[1],\n      cProps[2],\n      cProps[3],\n      cProps[4],\n      cProps[5],\n      cProps[6],\n      cProps[7],\n      cProps[8],\n      cProps[9],\n      cProps[10],\n      cProps[11],\n      cProps[12],\n      cProps[13],\n      cProps[14],\n      cProps[15],\n    )\n    // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props)\n    var trProps = this.contextData.cTr.props\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13])\n  }\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\n        return;\n    } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n      return\n    }\n    this.contextData.cO *= op < 0 ? 0 : op\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n    }\n  }\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    this.contextData.reset()\n  }\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.save()\n    }\n    var props = this.contextData.cTr.props\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate()\n    }\n    var i\n    var arr = this.contextData.saved[this.contextData.cArrPos]\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i]\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO\n    this.contextData.cArrPos += 1\n  }\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.restore()\n      this.globalData.blendMode = 'source-over'\n    }\n    this.contextData.cArrPos -= 1\n    var popped = this.contextData.saved[this.contextData.cArrPos]\n    var i\n    var arr = this.contextData.cTr.props\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i]\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13])\n    popped = this.contextData.savedOp[this.contextData.cArrPos]\n    this.contextData.cO = popped\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped\n      this.globalData.currentGlobalAlpha = popped\n    }\n  }\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas')\n      var containerStyle = this.animationItem.container.style\n      containerStyle.width = '100%'\n      containerStyle.height = '100%'\n      var origin = '0px 0px 0px'\n      containerStyle.transformOrigin = origin\n      containerStyle.mozTransformOrigin = origin\n      containerStyle.webkitTransformOrigin = origin\n      containerStyle['-webkit-transform'] = origin\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility\n      this.animationItem.wrapper.appendChild(this.animationItem.container)\n      this.canvasContext = this.animationItem.container.getContext('2d')\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className)\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id)\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context\n    }\n    this.data = animData\n    this.layers = animData.layers\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0,\n    }\n    this.setupGlobalData(animData, document.body)\n    this.globalData.canvasContext = this.canvasContext\n    this.globalData.renderer = this\n    this.globalData.isDashed = false\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.globalData.transformCanvas = this.transformCanvas\n    this.elements = createSizedArray(animData.layers.length)\n\n    this.updateContainerSize()\n  }\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset()\n    var elementWidth\n    var elementHeight\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth\n      elementHeight = this.animationItem.wrapper.offsetHeight\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr)\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr)\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr\n    }\n    var elementRel\n    var animationRel\n    if (\n      this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 ||\n      this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1\n    ) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ')\n      var fillType = par[1] || 'meet'\n      var pos = par[0] || 'xMidYMid'\n      var xPos = pos.substr(0, 4)\n      var yPos = pos.substr(4)\n      elementRel = elementWidth / elementHeight\n      animationRel = this.transformCanvas.w / this.transformCanvas.h\n      if ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      }\n\n      if (\n        xPos === 'xMid' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          ((elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        xPos === 'xMax' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.tx = 0\n      }\n      if (\n        yPos === 'YMid' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          ((elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        yPos === 'YMax' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.ty = 0\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr\n      this.transformCanvas.sy = this.renderConfig.dpr\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    }\n    this.transformCanvas.props = [\n      this.transformCanvas.sx,\n      0,\n      0,\n      0,\n      0,\n      this.transformCanvas.sy,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      this.transformCanvas.tx,\n      this.transformCanvas.ty,\n      0,\n      1,\n    ]\n    /* var i, len = this.elements.length;\n    for(i=0;i<len;i+=1){\n        if(this.elements[i] && this.elements[i].data.ty === 0){\n            this.elements[i].resize(this.globalData.transformCanvas);\n        }\n    } */\n    this.ctxTransform(this.transformCanvas.props)\n    this.canvasContext.beginPath()\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n    this.canvasContext.closePath()\n    this.canvasContext.clip()\n\n    this.renderFrame(this.renderedFrame, true)\n  }\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.globalData.canvasContext = null\n    this.animationItem.container = null\n    this.destroyed = true\n  }\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (\n      (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) ||\n      this.destroyed ||\n      num === -1\n    ) {\n      return\n    }\n    this.renderedFrame = num\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame\n    this.globalData.frameId += 1\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender\n    this.globalData.projectInterface.currentFrame = num\n\n    // console.log('--------');\n    // console.log('NEW: ',num);\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n      } else {\n        this.save()\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore()\n      }\n    }\n  }\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData)\n    elements[pos] = element\n    element.initExpressions()\n    /* if(this.layers[pos].ty === 0){\n        element.resize(this.globalData.transformCanvas);\n    } */\n  }\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n    }\n  }\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none'\n  }\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block'\n  }\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false\n    this.layers = data.layers\n    this.pendingElements = []\n    this.elements = createSizedArray(this.layers.length)\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement)\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.beginPath()\n    ctx.moveTo(0, 0)\n    ctx.lineTo(this.data.w, 0)\n    ctx.lineTo(this.data.w, this.data.h)\n    ctx.lineTo(0, this.data.h)\n    ctx.lineTo(0, 0)\n    ctx.clip()\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  CVCompElement.prototype.destroy = function () {\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.layers = null\n    this.elements = null\n  }\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer)\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  // Registering renderers\n  registerRenderer('canvas', CanvasRenderer)\n\n  // Registering shape modifiers\n  ShapeModifiers.registerModifier('tm', TrimModifier)\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier)\n  ShapeModifiers.registerModifier('rp', RepeaterModifier)\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier)\n\n  const Expressions = (function () {\n    var ob = {}\n    ob.initExpressions = initExpressions\n\n    function initExpressions(animation) {\n      var stackCount = 0\n      var registers = []\n\n      function pushExpression() {\n        stackCount += 1\n      }\n\n      function popExpression() {\n        stackCount -= 1\n        if (stackCount === 0) {\n          releaseInstances()\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression)\n        }\n      }\n\n      function releaseInstances() {\n        var i\n        var len = registers.length\n        for (i = 0; i < len; i += 1) {\n          registers[i].release()\n        }\n        registers.length = 0\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer)\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer)\n      animation.renderer.globalData.pushExpression = pushExpression\n      animation.renderer.globalData.popExpression = popExpression\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty\n    }\n    return ob\n  })()\n\n  /* eslint-disable */\n  /*\n Copyright 2014 David Bau.\n\n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the\n \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish,\n distribute, sublicense, and/or sell copies of the Software, and to\n permit persons to whom the Software is furnished to do so, subject to\n the following conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n */\n\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n      width = 256, // each RC4 output is 0 <= x < 256\n      chunks = 6, // at least six RC4 outputs for each double\n      digits = 52, // there are 52 significant digits in a double\n      rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n      startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto // node.js crypto module, initialized at the bottom.\n\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n      var key = []\n      options = options === true ? { entropy: true } : options || {}\n\n      // Flatten the seed string or build one from local entropy if needed.\n      var shortseed = mixkey(\n        flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3),\n        key,\n      )\n\n      // Use the seed to initialize an ARC4 generator.\n      var arc4 = new ARC4(key)\n\n      // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n      var prng = function () {\n        var n = arc4.g(chunks), // Start with a numerator n < 2 ^ 48\n          d = startdenom, //   and denominator d = 2 ^ 48.\n          x = 0 //   and no 'extra last byte'.\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width //   shifting numerator and\n          d *= width //   denominator and generating a\n          x = arc4.g(1) //   new least-significant-byte.\n        }\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2 //   last byte, shift everything\n          d /= 2 //   right using integer math until\n          x >>>= 1 //   we have exactly the desired bits.\n        }\n        return (n + x) / d // Form the number within [0, 1).\n      }\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0\n      }\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000\n      }\n      prng.double = prng\n\n      // Mix the randomness into accumulated entropy.\n      mixkey(tostring(arc4.S), pool)\n\n      // Calling convention: what to return as a function of prng, seed, is_math.\n      return (\n        options.pass ||\n        callback ||\n        function (prng, seed, is_math_call, state) {\n          if (state) {\n            // Load the arc4 state from the given state if it has an S array.\n            if (state.S) {\n              copy(state, arc4)\n            }\n            // Only provide the .state method if requested via options.state.\n            prng.state = function () {\n              return copy(arc4, {})\n            }\n          }\n\n          // If called as a method of Math (Math.seedrandom()), mutate\n          // Math.random because that is how seedrandom.js has worked since v1.0.\n          if (is_math_call) {\n            math[rngname] = prng\n            return seed\n          }\n\n          // Otherwise, it is a newer calling convention, so return the\n          // prng directly.\n          else return prng\n        }\n      )(prng, shortseed, 'global' in options ? options.global : this == math, options.state)\n    }\n    math['seed' + rngname] = seedrandom\n\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n      var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = (me.i = me.j = 0),\n        s = (me.S = [])\n\n      // The empty key [] is treated as [0].\n      if (!keylen) {\n        key = [keylen++]\n      }\n\n      // Set up S using the standard key scheduling algorithm.\n      while (i < width) {\n        s[i] = i++\n      }\n      for (i = 0; i < width; i++) {\n        s[i] = s[(j = mask & (j + key[i % keylen] + (t = s[i])))]\n        s[j] = t\n      }\n\n      // The \"g\" method returns the next (count) outputs as one number.\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S\n        while (count--) {\n          t = s[(i = mask & (i + 1))]\n          r = r * width + s[mask & ((s[i] = s[(j = mask & (j + t))]) + (s[j] = t))]\n        }\n        me.i = i\n        me.j = j\n        return r\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      }\n    }\n\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n      t.i = f.i\n      t.j = f.j\n      t.S = f.S.slice()\n      return t\n    }\n\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1))\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0'\n    }\n\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n        smear,\n        j = 0\n      while (j < stringseed.length) {\n        key[mask & j] = mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++))\n      }\n      return tostring(key)\n    }\n\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width))\n        }\n        var out = new Uint8Array(width)\n        ;(global.crypto || global.msCrypto).getRandomValues(out)\n        return tostring(out)\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins\n        return [+new Date(), global, plugins, global.screen, tostring(pool)]\n      }\n    }\n\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a)\n    }\n\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool)\n\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n\n    // End anonymous scope, and pass initial values.\n  }\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath)\n  }\n\n  var propTypes = {\n    SHAPE: 'shape',\n  }\n\n  /* eslint-disable camelcase */\n\n  const ExpressionManager = (function () {\n    'use strict'\n\n    var ob = {}\n    var Math = BMMath\n    var window = null\n    var document = null\n    var XMLHttpRequest = null\n    var fetch = null\n    var frames = null\n    initialize$2(BMMath)\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i\n        var lenA = a.length\n        var retArr = []\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i]\n        }\n        return retArr\n      }\n      if (a.propType) {\n        return a.v\n      }\n      return -a\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get\n\n    function sum(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] += b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a + b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] + b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n    var add = sum\n\n    function sub(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10)\n        }\n        if (tOfB === 'string') {\n          b = parseInt(b, 10)\n        }\n        return a - b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] -= b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a - b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] - b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b\n      }\n\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b\n      }\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10)\n      }\n      if (typeof b === 'string') {\n        b = parseInt(b, 10)\n      }\n      return a % b\n    }\n    var $bm_sum = sum\n    var $bm_sub = sub\n    var $bm_mul = mul\n    var $bm_div = div\n    var $bm_mod = mod\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max\n        max = min\n        min = mm\n      }\n      return Math.min(Math.max(num, min), max)\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads\n    }\n    var radians_to_degrees = radiansToDegrees\n\n    function degreesToRadians(val) {\n      return val * degToRads\n    }\n    var degrees_to_radians = radiansToDegrees\n\n    var helperLengthArray = [0, 0, 0, 0, 0, 0]\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0\n        return Math.abs(arr1 - arr2)\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray\n      }\n      var i\n      var len = Math.min(arr1.length, arr2.length)\n      var addedLength = 0\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2)\n      }\n      return Math.sqrt(addedLength)\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec))\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0]\n      var g = val[1]\n      var b = val[2]\n      var max = Math.max(r, g, b)\n      var min = Math.min(r, g, b)\n      var h\n      var s\n      var l = (max + min) / 2\n\n      if (max === min) {\n        h = 0 // achromatic\n        s = 0 // achromatic\n      } else {\n        var d = max - min\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0)\n            break\n          case g:\n            h = (b - r) / d + 2\n            break\n          case b:\n            h = (r - g) / d + 4\n            break\n          default:\n            break\n        }\n        h /= 6\n      }\n\n      return [h, s, l, val[3]]\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1\n      if (t > 1) t -= 1\n      if (t < 1 / 6) return p + (q - p) * 6 * t\n      if (t < 1 / 2) return q\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n      return p\n    }\n\n    function hslToRgb(val) {\n      var h = val[0]\n      var s = val[1]\n      var l = val[2]\n\n      var r\n      var g\n      var b\n\n      if (s === 0) {\n        r = l // achromatic\n        b = l // achromatic\n        g = l // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n        var p = 2 * l - q\n        r = hue2rgb(p, q, h + 1 / 3)\n        g = hue2rgb(p, q, h)\n        b = hue2rgb(p, q, h - 1 / 3)\n      }\n\n      return [r, g, b, val[3]]\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin\n        value2 = tMax\n        tMin = 0\n        tMax = 1\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax\n        tMax = tMin\n        tMin = _tMin\n      }\n      if (t <= tMin) {\n        return value1\n      }\n      if (t >= tMax) {\n        return value2\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin)\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc\n      }\n      var i\n      var len = value1.length\n      var arr = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc\n      }\n      return arr\n    }\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0\n          max = 1\n        } else {\n          max = min\n          min = undefined\n        }\n      }\n      if (max.length) {\n        var i\n        var len = max.length\n        if (!min) {\n          min = createTypedArray('float32', len)\n        }\n        var arr = createTypedArray('float32', len)\n        var rnd = BMMath.random()\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i])\n        }\n        return arr\n      }\n      if (min === undefined) {\n        min = 0\n      }\n      var rndm = BMMath.random()\n      return min + rndm * (max - min)\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i\n      var len = points.length\n      var path = shapePool.newElement()\n      path.setPathData(!!closed, len)\n      var arrPlaceholder = [0, 0]\n      var inVertexPoint\n      var outVertexPoint\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder\n        path.setTripleAt(\n          points[i][0],\n          points[i][1],\n          outVertexPoint[0] + points[i][0],\n          outVertexPoint[1] + points[i][1],\n          inVertexPoint[0] + points[i][0],\n          inVertexPoint[1] + points[i][1],\n          i,\n          true,\n        )\n      }\n      return path\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val)\n      var _needsRandom = val.indexOf('random') !== -1\n      var elemType = elem.data.ty\n      var transform\n      var $bm_transform\n      var content\n      var effect\n      var thisProperty = property\n      thisProperty.valueAtTime = thisProperty.getValueAtTime\n      Object.defineProperty(thisProperty, 'value', {\n        get: function () {\n          return thisProperty.v\n        },\n      })\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate\n      elem.comp.displayStartTime = 0\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate\n      var width = elem.data.sw ? elem.data.sw : 0\n      var height = elem.data.sh ? elem.data.sh : 0\n      var name = elem.data.nm\n      var loopIn\n      var loop_in\n      var loopOut\n      var loop_out\n      var smooth\n      var toWorld\n      var fromWorld\n      var fromComp\n      var toComp\n      var fromCompToSurface\n      var position\n      var rotation\n      var anchorPoint\n      var scale\n      var thisLayer\n      var thisComp\n      var mask\n      var valueAtTime\n      var velocityAtTime\n\n      var scoped_bm_rt\n      // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0] // eslint-disable-line no-eval\n      var numKeys = property.kf ? data.k.length : 0\n\n      var active = !this.data || this.data.hd !== true\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle\n        var j\n        var lenWiggle = this.pv.length ? this.pv.length : 1\n        var addedAmps = createTypedArray('float32', lenWiggle)\n        freq = 5\n        var iterations = Math.floor(time * freq)\n        iWiggle = 0\n        j = 0\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random()\n            // addedAmps[j] += -amp + amp*2*rnd;\n          }\n          iWiggle += 1\n        }\n        // var rnd2 = BMMath.random();\n        var periods = time * freq\n        var perc = periods - Math.floor(periods)\n        var arr = createTypedArray('float32', lenWiggle)\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc\n            // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n          return arr\n        }\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc\n      }.bind(this)\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty)\n        loop_in = loopIn\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty)\n        loop_out = loopOut\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty)\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true)\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true)\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this)\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this)\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface)\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]]\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads\n        return [yaw, pitch, 0]\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2)\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2)\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2)\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin\n          val2 = tMax\n        } else {\n          t = (t - tMin) / (tMax - tMin)\n        }\n        if (t > 1) {\n          t = 1\n        } else if (t < 0) {\n          t = 0\n        }\n        var mult = fn(t)\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey\n          var lenKey = val1.length\n          var arr = createTypedArray('float32', lenKey)\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey]\n          }\n          return arr\n        }\n        return (val2 - val1) * mult + val1\n      }\n\n      function nearestKey(time) {\n        var iKey\n        var lenKey = data.k.length\n        var index\n        var keyTime\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0\n          keyTime = 0\n        } else {\n          index = -1\n          time *= elem.comp.globalData.frameRate\n          if (time < data.k[0].t) {\n            index = 1\n            keyTime = data.k[0].t\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1\n                keyTime = data.k[iKey].t\n                break\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2\n                  keyTime = data.k[iKey + 1].t\n                } else {\n                  index = iKey + 1\n                  keyTime = data.k[iKey].t\n                }\n                break\n              }\n            }\n            if (index === -1) {\n              index = iKey + 1\n              keyTime = data.k[iKey].t\n            }\n          }\n        }\n        var obKey = {}\n        obKey.index = index\n        obKey.time = keyTime / elem.comp.globalData.frameRate\n        return obKey\n      }\n\n      function key(ind) {\n        var obKey\n        var iKey\n        var lenKey\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind)\n        }\n        ind -= 1\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: [],\n        }\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e\n\n        lenKey = arr.length\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey]\n          obKey.value[iKey] = arr[iKey]\n        }\n        return obKey\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate\n        }\n        return fr / fps\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time\n        }\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate\n        }\n        return t * fps\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed)\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime()\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init)\n          }\n          return value.substring(init, end)\n        }\n        return ''\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init)\n          }\n          return value.substr(init, end)\n        }\n        return ''\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond\n        value = valueAtTime(time)\n      }\n\n      var time\n      var velocity\n      var value\n      var text\n      var textIndex\n      var textTotal\n      var selectorValue\n      var index = elem.data.ind\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length)\n      var parent\n      var randSeed = Math.floor(Math.random() * 1000000)\n      var globalData = elem.globalData\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value\n        }\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex\n          textTotal = this.textTotal\n          selectorValue = this.selectorValue\n        }\n        if (!thisLayer) {\n          text = elem.layerInterface.text\n          thisLayer = elem.layerInterface\n          thisComp = elem.comp.compInterface\n          toWorld = thisLayer.toWorld.bind(thisLayer)\n          fromWorld = thisLayer.fromWorld.bind(thisLayer)\n          fromComp = thisLayer.fromComp.bind(thisLayer)\n          toComp = thisLayer.toComp.bind(thisLayer)\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null\n          fromCompToSurface = fromComp\n        }\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group')\n          $bm_transform = transform\n          if (transform) {\n            anchorPoint = transform.anchorPoint\n            /* position = transform.position;\n                    rotation = transform.rotation;\n                    scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group')\n        }\n        if (!effect) {\n          effect = thisLayer(4)\n        }\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length)\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface\n        }\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate\n        if (_needsRandom) {\n          seedRandom(randSeed + time)\n        }\n        if (needsVelocity) {\n          velocity = velocityAtTime(time)\n        }\n        expression_function()\n        this.frameExpressionId = elem.globalData.frameId\n\n        // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt\n        return scoped_bm_rt\n      }\n      // Bundlers will see these as dead code and unless we reference them\n      executeExpression.__preventDeadCodeRemoval = [\n        $bm_transform,\n        anchorPoint,\n        time,\n        velocity,\n        inPoint,\n        outPoint,\n        width,\n        height,\n        name,\n        loop_in,\n        loop_out,\n        smooth,\n        toComp,\n        fromCompToSurface,\n        toWorld,\n        fromWorld,\n        mask,\n        position,\n        rotation,\n        scale,\n        thisComp,\n        numKeys,\n        active,\n        wiggle,\n        loopInDuration,\n        loopOutDuration,\n        comp,\n        lookAt,\n        easeOut,\n        easeIn,\n        ease,\n        nearestKey,\n        key,\n        text,\n        textIndex,\n        textTotal,\n        selectorValue,\n        framesToTime,\n        timeToFrames,\n        sourceRectAtTime,\n        substring,\n        substr,\n        posterizeTime,\n        index,\n        globalData,\n      ]\n      return executeExpression\n    }\n\n    ob.initiateExpression = initiateExpression\n    ob.__preventDeadCodeRemoval = [\n      window,\n      document,\n      XMLHttpRequest,\n      fetch,\n      frames,\n      $bm_neg,\n      add,\n      $bm_sum,\n      $bm_sub,\n      $bm_mul,\n      $bm_div,\n      $bm_mod,\n      clamp,\n      radians_to_degrees,\n      degreesToRadians,\n      degrees_to_radians,\n      normalize,\n      rgbToHsl,\n      hslToRgb,\n      linear,\n      random,\n      createPath,\n    ]\n    return ob\n  })()\n\n  const expressionHelpers = (function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true\n        prop.x = true\n        prop.initiateExpression = ExpressionManager.initiateExpression\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop))\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime)\n        this._cachingAtTime.lastFrame = frameNum\n      }\n      return this._cachingAtTime.value\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var speed = 0\n      if (v1.length) {\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2)\n        }\n        speed = Math.sqrt(speed) * 100\n      } else {\n        speed = 0\n      }\n      return speed\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel\n      }\n      var delta = -0.001\n      // frameNum += this.elem.data.st;\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var velocity\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length)\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta\n        }\n      } else {\n        velocity = (v2 - v1) / delta\n      }\n      return velocity\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty,\n    }\n  })()\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var lastKeyFrame = keyframes[keyframes.length - 1].t\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var firstKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip)\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration)\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime(\n            (cycleDuration - ((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) /\n              this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n          0,\n        ) // eslint-disable-line\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i]\n          }\n          return ret\n        }\n        return (endV - initV) * repeats + current\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(lastValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] =\n              lastValue[i] +\n              ((lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate)) /\n                0.0005 // eslint-disable-line\n          }\n          return ret\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001)\n      }\n      return this.getValueAtTime(\n        (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var firstKeyFrame = keyframes[0].t\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var lastKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        lastKeyFrame = keyframes[duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame)\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration)\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration)\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(\n            (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) /\n            this.comp.globalData.frameRate,\n          0,\n        )\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats\n          }\n          return ret\n        }\n        return current - (endV - initV) * repeats\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(firstValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + ((firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame)) / 0.001\n          }\n          return ret\n        }\n        return firstValue + ((firstValue - nextFirstValue) * (firstKeyFrame - currentFrame)) / 0.001\n      }\n      return this.getValueAtTime(\n        (cycleDuration - (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame)) /\n          this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv\n      }\n      width = (width || 0.4) * 0.5\n      samples = Math.floor(samples || 5)\n      if (samples <= 1) {\n        return this.pv\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate\n      var initFrame = currentTime - width\n      var endFrame = currentTime + width\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1\n      var i = 0\n      var j = 0\n      var value\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length)\n      } else {\n        value = 0\n      }\n      var sampleValue\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency)\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j]\n          }\n        } else {\n          value += sampleValue\n        }\n        i += 1\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples\n        }\n      } else {\n        value /= samples\n      }\n      return value\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix(),\n        }\n      }\n      /// /\n      var matrix = this._transformCachingAtTime.v\n      matrix.cloneFromProps(this.pre.props)\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time)\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult)\n      }\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time)\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult)\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time)\n        var skewAxis = this.sa.getValueAtTime(time)\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult)\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time)\n        matrix.rotate(-rotation * this.r.mult)\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time)\n        var rotationY = this.ry.getValueAtTime(time)\n        var rotationX = this.rx.getValueAtTime(time)\n        var orientation = this.or.getValueAtTime(time)\n        matrix\n          .rotateZ(-rotationZ * this.rz.mult)\n          .rotateY(rotationY * this.ry.mult)\n          .rotateX(rotationX * this.rx.mult)\n          .rotateZ(-orientation[2] * this.or.mult)\n          .rotateY(orientation[1] * this.or.mult)\n          .rotateX(orientation[0] * this.or.mult)\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time)\n        var positionY = this.py.getValueAtTime(time)\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time)\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult)\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0)\n        }\n      } else {\n        var position = this.p.getValueAtTime(time)\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult)\n      }\n      return matrix\n      /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix())\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container)\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      return prop\n    }\n\n    var propertyGetProp = PropertyFactory.getProp\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container)\n      // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      prop.loopOut = loopOut\n      prop.loopIn = loopIn\n      prop.smooth = smooth\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop)\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop)\n      prop.numKeys = data.a === 1 ? data.k.length : 0\n      prop.propertyIndex = data.ix\n      var value = 0\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length)\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value,\n      }\n      expressionHelpers.searchExpressions(elem, data, prop)\n      if (prop.k) {\n        container.addDynamicProperty(prop)\n      }\n\n      return prop\n    }\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame,\n        }\n      }\n\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0\n        this._cachingAtTime.lastTime = frameNum\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime)\n      }\n      return this._cachingAtTime.shapeValue\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction()\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction()\n\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time) {\n        if (this.k) {\n          this.getValue()\n        }\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        var i\n        var len = shapePath._length\n        var vertices = shapePath[prop]\n        var points = shapePath.v\n        var arr = createSizedArray(len)\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]]\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]]\n          }\n        }\n        return arr\n      },\n      points: function (time) {\n        return this.vertices('v', time)\n      },\n      inTangents: function (time) {\n        return this.vertices('i', time)\n      },\n      outTangents: function (time) {\n        return this.vertices('o', time)\n      },\n      isClosed: function () {\n        return this.v.c\n      },\n      pointOnPath: function (perc, time) {\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath)\n        }\n\n        var segmentsLength = this._segmentsLength\n        var lengths = segmentsLength.lengths\n        var lengthPos = segmentsLength.totalLength * perc\n        var i = 0\n        var len = lengths.length\n        var accumulatedLength = 0\n        var pt\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength\n            pt = bez.getPointInSegment(\n              shapePath.v[initIndex],\n              shapePath.v[endIndex],\n              shapePath.o[initIndex],\n              shapePath.i[endIndex],\n              segmentPerc,\n              lengths[i],\n            )\n            break\n          } else {\n            accumulatedLength += lengths[i].addedLength\n          }\n          i += 1\n        }\n        if (!pt) {\n          pt = shapePath.c\n            ? [shapePath.v[0][0], shapePath.v[0][1]]\n            : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]]\n        }\n        return pt\n      },\n      vectorOnPath: function (perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999\n        }\n        var pt1 = this.pointOnPath(perc, time)\n        var pt2 = this.pointOnPath(perc + 0.001, time)\n        var xLength = pt2[0] - pt1[0]\n        var yLength = pt2[1] - pt1[1]\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2))\n        if (magnitude === 0) {\n          return [0, 0]\n        }\n        var unitVector =\n          vectorType === 'tangent'\n            ? [xLength / magnitude, yLength / magnitude]\n            : [-yLength / magnitude, xLength / magnitude]\n        return unitVector\n      },\n      tangentOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent')\n      },\n      normalOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'normal')\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime,\n    }\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction)\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction)\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression\n\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims)\n      prop.propertyIndex = data.ix\n      prop.lock = false\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop)\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n  }\n\n  function initialize$1() {\n    addPropertyDecorator()\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)\n        this.addEffect(this.getExpressionValue.bind(this))\n        return true\n      }\n      return null\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text)\n      if (currentValue.t !== newValue) {\n        var newData = {}\n        this.copyData(newData, currentValue)\n        newData.t = newValue.toString()\n        newData.__complete = false\n        return newData\n      }\n      return currentValue\n    }\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes()\n      var hasExpressions = this.searchExpressions()\n      this.kf = isKeyframed || hasExpressions\n      return this.kf\n    }\n\n    TextProperty.prototype.searchExpressions = searchExpressions\n  }\n\n  function initialize() {\n    addDecorator()\n  }\n\n  // Registering expression plugin\n  setExpressionsPlugin(Expressions)\n  initialize$1()\n  initialize()\n\n  return lottie\n})()\n\nexport { lottie as default }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}