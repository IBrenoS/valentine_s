{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './useTexture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float opacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = opacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.opacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.opacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  let max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      var _distributed$point;\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n        x: random() * 2 - 1,\n        y: random() * 2 - 1,\n        z: random() * 2 - 1\n      });\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));else return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\nexport { Cloud, CloudInstance, Clouds };","map":{"version":3,"names":["_extends","React","REVISION","Quaternion","Vector3","DynamicDrawUsage","MeshLambertMaterial","Matrix4","Color","extend","useFrame","applyProps","useTexture","v4","setUpdateRange","CLOUD_URL","parentMatrix","translation","rotation","cpos","cquat","scale","context","createContext","Clouds","forwardRef","children","material","texture","range","limit","frustumCulled","props","fref","_image$width","_image$height","CloudMaterial","useMemo","constructor","opaque_fragment","parseInt","replace","onBeforeCompile","shader","vertexShader","fragmentShader","instance","useRef","clouds","opacities","Float32Array","Array","from","length","colors","flat","cloudTexture","t","index","config","qat","dir","pos","state","delta","clock","getElapsedTime","copy","current","matrixWorld","invert","camera","decompose","ref","add","position","applyQuaternion","multiply","setFromAxisAngle","rotationFactor","multiplyScalar","volume","Math","sin","density","speed","growth","matrix","compose","premultiply","dist","distanceTo","sort","a","b","opacity","fade","setMatrixAt","setColorAt","color","geometry","attributes","needsUpdate","instanceMatrix","instanceColor","useLayoutEffect","count","min","undefined","offset","imageBounds","image","width","height","max","createElement","Provider","value","matrixAutoUpdate","args","usage","attach","key","name","map","transparent","depthWrite","CloudInstance","bounds","segments","smallestVolume","distribute","concentrate","seed","random","x","floor","parent","useContext","uuid","useState","_","PI","forEach","cloud","_distributed$point","distributed","point","y","z","xDiff","abs","yDiff","zDiff","temp","filter","item","useImperativeHandle","Cloud"],"sources":["D:/valentines_website/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './useTexture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float opacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = opacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.opacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.opacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  let max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      var _distributed$point;\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n        x: random() * 2 - 1,\n        y: random() * 2 - 1,\n        z: random() * 2 - 1\n      });\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));else return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}