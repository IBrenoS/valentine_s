{"ast":null,"code":"import { Color } from \"three\";\nconst ColorifyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    color: {\n      value: new Color(16777215)\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform vec3 color;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"\tfloat v = dot( texel.xyz, luma );\", \"\tgl_FragColor = vec4( v * color, texel.w );\", \"}\"].join(\"\\n\")\n};\nexport { ColorifyShader };","map":{"version":3,"names":["ColorifyShader","uniforms","tDiffuse","value","color","Color","vertexShader","join","fragmentShader"],"sources":["D:\\valentines_website\\node_modules\\src\\shaders\\ColorifyShader.ts"],"sourcesContent":["import { Color } from 'three'\n\n/**\n * Colorify shader\n */\n\nexport const ColorifyShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    color: { value: new Color(0xffffff) },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform vec3 color;',\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 texel = texture2D( tDiffuse, vUv );',\n\n    '\tvec3 luma = vec3( 0.299, 0.587, 0.114 );',\n    '\tfloat v = dot( texel.xyz, luma );',\n\n    '\tgl_FragColor = vec4( v * color, texel.w );',\n\n    '}',\n  ].join('\\n'),\n}\n"],"mappings":";AAMO,MAAMA,cAAA,GAAiB;EAC5BC,QAAA,EAAU;IACRC,QAAA,EAAU;MAAEC,KAAA,EAAO;IAAK;IACxBC,KAAA,EAAO;MAAED,KAAA,EAAO,IAAIE,KAAA,CAAM,QAAQ;IAAE;EACtC;EAEAC,YAAA,EAAc,CACZ,qBAEA,iBAEA,cACA,8EAEA,KACAC,IAAA,CAAK,IAAI;EAEXC,cAAA,EAAgB,CACd,uBACA,+BAEA,qBAEA,iBAEA,6CAEA,6CACA,sCAEA,+CAEA,KACAD,IAAA,CAAK,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}